<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="GdkPixbuf" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="cairo" version="1.0"/>
  <package name="librsvg-2.0"/>
  <c:include name="librsvg/rsvg.h"/>
  <namespace name="Rsvg"
             version="2.0"
             shared-library="librsvg-2.so.2"
             c:identifier-prefixes="Rsvg"
             c:symbol-prefixes="rsvg,librsvg">
    <record name="DimensionData"
            c:type="RsvgDimensionData"
            deprecated="1"
            deprecated-version="2.46">
      <source-position filename="rsvg.h" line="119"/>
      <field name="width" writable="1">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="107">SVG's width, in pixels</doc>
        <type name="gint" c:type="int"/>
      </field>
      <field name="height" writable="1">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="108">SVG's height, in pixels</doc>
        <type name="gint" c:type="int"/>
      </field>
      <field name="em" writable="1">
        <doc xml:space="preserve" filename="rsvg.h" line="109">em</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="ex" writable="1">
        <doc xml:space="preserve" filename="rsvg.h" line="110">ex</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
    </record>
    <enumeration name="Error"
                 glib:type-name="RsvgError"
                 glib:get-type="rsvg_error_get_type"
                 c:type="RsvgError"
                 glib:error-domain="rsvg-error-quark">
      <doc xml:space="preserve"
           filename="rsvg.h"
           line="56">An enumeration representing possible errors</doc>
      <member name="failed"
              value="0"
              c:identifier="RSVG_ERROR_FAILED"
              glib:nick="failed">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="58">the request failed</doc>
      </member>
      <function name="quark" c:identifier="rsvg_error_quark">
        <doc xml:space="preserve"
             filename="rsvg-base.c"
             line="43">The error domain for RSVG</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-base.c"
               line="48">The error domain</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="Handle"
           c:symbol-prefix="handle"
           c:type="RsvgHandle"
           parent="GObject.Object"
           glib:type-name="RsvgHandle"
           glib:get-type="rsvg_handle_get_type"
           glib:type-struct="HandleClass">
      <doc xml:space="preserve"
           filename="rsvg.h"
           line="89">Lets you load SVG data and render it.</doc>
      <source-position filename="rsvg.h" line="87"/>
      <constructor name="new" c:identifier="rsvg_handle_new">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="441">Returns a new rsvg handle.  Must be freed with @g_object_unref.  This
handle can be used for dynamically loading an image.  You need to feed it
data using @rsvg_handle_write, then call @rsvg_handle_close when done.
Afterwords, you can render it using Cairo or get a GdkPixbuf from it. When
finished, free with g_object_unref(). No more than one image can be loaded
with one handle.</doc>
        <source-position filename="rsvg.h" line="165"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="451">A new #RsvgHandle</doc>
          <type name="Handle" c:type="RsvgHandle*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_data"
                   c:identifier="rsvg_handle_new_from_data"
                   version="2.14"
                   throws="1">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="475">Loads the SVG specified by @data.</doc>
        <source-position filename="rsvg.h" line="224"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="483">A #RsvgHandle or %NULL if an error occurs.</doc>
          <type name="Handle" c:type="RsvgHandle*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="477">The SVG data</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="data_len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="478">The length of @data, in bytes</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_file"
                   c:identifier="rsvg_handle_new_from_file"
                   version="2.14"
                   throws="1">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="503">Loads the SVG specified by @file_name.</doc>
        <source-position filename="rsvg.h" line="225"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="510">A #RsvgHandle or %NULL if an error occurs.</doc>
          <type name="Handle" c:type="RsvgHandle*"/>
        </return-value>
        <parameters>
          <parameter name="file_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="505">The file name to load. If built with gnome-vfs, can be a URI.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_gfile_sync"
                   c:identifier="rsvg_handle_new_from_gfile_sync"
                   version="2.32"
                   throws="1">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="566">Creates a new #RsvgHandle for @file.

If @cancellable is not %NULL, then the operation can be cancelled by
triggering the cancellable object from another thread. If the
operation was cancelled, the error %G_IO_ERROR_CANCELLED will be
returned.</doc>
        <source-position filename="rsvg.h" line="213"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="580">a new #RsvgHandle on success, or %NULL with @error filled in</doc>
          <type name="Handle" c:type="RsvgHandle*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="568">a #GFile</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="569">flags from #RsvgHandleFlags</doc>
            <type name="HandleFlags" c:type="RsvgHandleFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="570">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_stream_sync"
                   c:identifier="rsvg_handle_new_from_stream_sync"
                   version="2.32"
                   throws="1">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="608">Creates a new #RsvgHandle for @stream.

If @cancellable is not %NULL, then the operation can be cancelled by
triggering the cancellable object from another thread. If the
operation was cancelled, the error %G_IO_ERROR_CANCELLED will be
returned.</doc>
        <source-position filename="rsvg.h" line="218"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="623">a new #RsvgHandle on success, or %NULL with @error filled in</doc>
          <type name="Handle" c:type="RsvgHandle*"/>
        </return-value>
        <parameters>
          <parameter name="input_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="610">a #GInputStream</doc>
            <type name="Gio.InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="base_file"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="611">a #GFile, or %NULL</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="612">flags from #RsvgHandleFlags</doc>
            <type name="HandleFlags" c:type="RsvgHandleFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="613">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_flags"
                   c:identifier="rsvg_handle_new_with_flags"
                   version="2.36">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="548">Creates a new #RsvgHandle with flags @flags.</doc>
        <source-position filename="rsvg.h" line="203"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="554">a new #RsvgHandle</doc>
          <type name="Handle" c:type="RsvgHandle*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="550">flags from #RsvgHandleFlags</doc>
            <type name="HandleFlags" c:type="RsvgHandleFlags"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="close" c:identifier="rsvg_handle_close" throws="1">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="716">Closes @handle, to indicate that loading the image is complete.  This will
return %TRUE if the loader closed successfully.  Note that @handle isn't
freed until @g_object_unref is called.</doc>
        <source-position filename="rsvg.h" line="168"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="725">%TRUE on success, or %FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="718">a #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_base_uri"
              c:identifier="rsvg_handle_get_base_uri"
              version="2.8">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="945">Gets the base uri for this #RsvgHandle.</doc>
        <source-position filename="rsvg.h" line="172"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="951">the base uri, possibly null</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="947">A #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dimensions"
              c:identifier="rsvg_handle_get_dimensions"
              version="2.14">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1135">Get the SVG's size. Do not call from within the size_func callback, because an infinite loop will occur.</doc>
        <source-position filename="rsvg.h" line="175"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1137">A #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="dimension_data"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1138">A place to store the SVG's size</doc>
            <type name="DimensionData" c:type="RsvgDimensionData*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_dimensions_sub"
              c:identifier="rsvg_handle_get_dimensions_sub"
              version="2.22"
              deprecated="1">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1199">Get the size of a subelement of the SVG file. Do not call from within the
size_func callback, because an infinite loop will occur.</doc>
        <doc-deprecated xml:space="preserve">Use rsvg_handle_get_geometry_sub() instead.</doc-deprecated>
        <source-position filename="rsvg.h" line="177"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1201">A #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="dimension_data"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1202">A place to store the SVG's size</doc>
            <type name="DimensionData" c:type="RsvgDimensionData*"/>
          </parameter>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1203">An element's id within the SVG, starting with "##", for
example, "##layer1"; or %NULL to use the whole SVG.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_geometry_sub"
              c:identifier="rsvg_handle_get_geometry_sub"
              version="2.46">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1239">Get the geometry of a subelement of the SVG file.

Note that unlike rsvg_handle_get_position_sub() and
rsvg_handle_get_dimensions_sub(), this function does not call the size_func.</doc>
        <source-position filename="rsvg.h" line="179"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1241">A #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="ink_rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1242">A place to store the SVG fragment's geometry.</doc>
            <type name="Rectangle" c:type="RsvgRectangle*"/>
          </parameter>
          <parameter name="logical_rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1243">A place to store the SVG fragment's logical geometry.</doc>
            <type name="Rectangle" c:type="RsvgRectangle*"/>
          </parameter>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1244">An element's id within the SVG, starting with "##", for
example, "##layer1"; or %NULL to use the whole SVG.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pixbuf" c:identifier="rsvg_handle_get_pixbuf">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1452">Returns the pixbuf loaded by @handle.  The pixbuf returned will be reffed, so
the caller of this function must assume that ref.  If insufficient data has
been read to create the pixbuf, or an error occurred in loading, then %NULL
will be returned.  Note that the pixbuf may not be complete until
@rsvg_handle_close has been called.</doc>
        <source-position filename="rsvg.h" line="169"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="1462">the pixbuf loaded by @handle, or %NULL.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1454">An #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pixbuf_sub"
              c:identifier="rsvg_handle_get_pixbuf_sub"
              version="2.14">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1390">Creates a #GdkPixbuf the same size as the entire SVG loaded into @handle, but
only renders the sub-element that has the specified @id (and all its
sub-sub-elements recursively).  If @id is #NULL, this function renders the
whole SVG.

If you need to render an image which is only big enough to fit a particular
sub-element of the SVG, consider using rsvg_handle_render_cairo_sub(), upon a
surface that is just the size returned by rsvg_handle_get_dimensions_sub().
You will need to offset the rendering by the amount returned in
rsvg_handle_get_position_sub().</doc>
        <source-position filename="rsvg.h" line="170"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="1407">a pixbuf, or %NULL if an error occurs
during rendering.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1392">An #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1393">An element's id within the SVG, starting with "##", for
example, "##layer1"; or %NULL to use the whole SVG.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_position_sub"
              c:identifier="rsvg_handle_get_position_sub"
              version="2.22"
              deprecated="1">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1323">Get the position of a subelement of the SVG file. Do not call from within
the size_func callback, because an infinite loop will occur.</doc>
        <doc-deprecated xml:space="preserve">Use rsvg_handle_get_geometry_sub() instead.</doc-deprecated>
        <source-position filename="rsvg.h" line="178"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1325">A #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="position_data"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1326">A place to store the SVG fragment's position.</doc>
            <type name="PositionData" c:type="RsvgPositionData*"/>
          </parameter>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1327">An element's id within the SVG, starting with "##", for
example, "##layer1"; or %NULL to use the whole SVG.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_sub" c:identifier="rsvg_handle_has_sub" version="2.22">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1367">Checks whether the element @id exists in the SVG document.</doc>
        <source-position filename="rsvg.h" line="181"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="1374">%TRUE if @id exists in the SVG document</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1369">a #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1370">an element's id within the SVG, starting with "##", for example, "##layer1".</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="internal_set_testing"
              c:identifier="rsvg_handle_internal_set_testing">
        <source-position filename="rsvg.h" line="227"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="testing" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_stream_sync"
              c:identifier="rsvg_handle_read_stream_sync"
              version="2.32"
              throws="1">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="768">Reads @stream and writes the data from it to @handle.

If @cancellable is not %NULL, then the operation can be cancelled by
triggering the cancellable object from another thread. If the
operation was cancelled, the error %G_IO_ERROR_CANCELLED will be
returned.</doc>
        <source-position filename="rsvg.h" line="208"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="782">%TRUE if reading @stream succeeded, or %FALSE otherwise
  with @error filled in</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="770">a #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="771">a #GInputStream</doc>
            <type name="Gio.InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="772">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="render_cairo"
              c:identifier="rsvg_handle_render_cairo"
              version="2.14">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1116">Draws a loaded SVG handle to a Cairo context.  Drawing will occur with
respect to the @cr's current transformation:  for example, if the @cr has a
rotated current transformation matrix, the whole SVG will be rotated in the
rendered version.</doc>
        <source-position filename="rsvg-cairo.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="1126">%TRUE if drawing succeeded; %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1118">A #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="cr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1119">A Cairo renderer</doc>
            <type name="cairo.Context" c:type="cairo_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="render_cairo_sub"
              c:identifier="rsvg_handle_render_cairo_sub"
              version="2.14">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1046">Draws a subset of a loaded SVG handle to a Cairo context.  Drawing will occur with
respect to the @cr's current transformation:  for example, if the @cr has a
rotated current transformation matrix, the whole SVG will be rotated in the
rendered version.</doc>
        <source-position filename="rsvg-cairo.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="1059">%TRUE if drawing succeeded; %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1048">A #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="cr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1049">A Cairo renderer</doc>
            <type name="cairo.Context" c:type="cairo_t*"/>
          </parameter>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1050">An element's id within the SVG, or %NULL to render
  the whole SVG. For example, if you have a layer called "layer1"
  that you wish to render, pass "##layer1" as the id.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_base_gfile"
              c:identifier="rsvg_handle_set_base_gfile"
              version="2.32">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="905">Set the base URI for @handle from @file.
Note: This function may only be called before rsvg_handle_write()
or rsvg_handle_read_stream_sync() has been called.</doc>
        <source-position filename="rsvg.h" line="205"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="907">a #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="base_file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="908">a #GFile</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_base_uri"
              c:identifier="rsvg_handle_set_base_uri"
              version="2.9">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="873">Set the base URI for this SVG. This can only be called before rsvg_handle_write()
has been called.</doc>
        <source-position filename="rsvg.h" line="173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="875">A #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="base_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="876">The base uri</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dpi" c:identifier="rsvg_handle_set_dpi" version="2.8">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1470">Sets the DPI for the outgoing pixbuf. Common values are
75, 90, and 300 DPI. Passing a number &lt;= 0 to @dpi will
reset the DPI to whatever the default value happens to be.</doc>
        <source-position filename="rsvg.h" line="162"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1472">An #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="dpi" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1473">Dots Per Inch (aka Pixels Per Inch)</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dpi_x_y"
              c:identifier="rsvg_handle_set_dpi_x_y"
              version="2.8">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="1487">Sets the DPI for the outgoing pixbuf. Common values are
75, 90, and 300 DPI. Passing a number &lt;= 0 to #dpi_x or @dpi_y will
reset the DPI to whatever the default value happens to be.</doc>
        <source-position filename="rsvg.h" line="163"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1489">An #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="dpi_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1490">Dots Per Inch (aka Pixels Per Inch)</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="dpi_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="1491">Dots Per Inch (aka Pixels Per Inch)</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="write" c:identifier="rsvg_handle_write" throws="1">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="654">Loads the next @count bytes of the image.  This will return %TRUE if the data
was loaded successful, and %FALSE if an error occurred.  In the latter case,
the loader will be closed, and will not accept further writes. If %FALSE is
returned, @error will be set to an error from the #RsvgError domain. Errors
from #GIOErrorEnum are also possible.</doc>
        <source-position filename="rsvg.h" line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-handle.c"
               line="667">%TRUE on success, or %FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="656">an #RsvgHandle</doc>
            <type name="Handle" c:type="RsvgHandle*"/>
          </instance-parameter>
          <parameter name="buf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="657">pointer to svg data</doc>
            <array length="1" zero-terminated="0" c:type="const guchar*">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="rsvg-handle.c"
                 line="658">length of the @buf buffer in bytes</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <property name="base-uri"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="desc"
                deprecated="1"
                deprecated-version="2.36"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="397">SVG's description</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="dpi-x"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="dpi-y"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="em" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="ex" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="flags"
                version="2.36"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="320">Flags from #RsvgHandleFlags.</doc>
        <type name="HandleFlags"/>
      </property>
      <property name="height" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="metadata"
                deprecated="1"
                deprecated-version="2.36"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="410">SVG's description</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                deprecated="1"
                deprecated-version="2.36"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="rsvg-handle.c"
             line="384">SVG's description</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="width" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="91">parent instance</doc>
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="HandlePrivate" c:type="RsvgHandlePrivate*"/>
      </field>
      <field name="_abi_padding" readable="0" private="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="15">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="HandleClass"
            c:type="RsvgHandleClass"
            glib:is-gtype-struct-for="Handle">
      <doc xml:space="preserve"
           filename="rsvg.h"
           line="76">Class structure for #RsvgHandle.</doc>
      <source-position filename="rsvg.h" line="87"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="78">parent class</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_abi_padding" readable="0" private="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="15">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <bitfield name="HandleFlags"
              glib:type-name="RsvgHandleFlags"
              glib:get-type="rsvg_handle_flags_get_type"
              c:type="RsvgHandleFlags">
      <member name="flags_none"
              value="0"
              c:identifier="RSVG_HANDLE_FLAGS_NONE"
              glib:nick="flags-none">
        <doc xml:space="preserve" filename="rsvg.h" line="187">none</doc>
      </member>
      <member name="flag_unlimited"
              value="1"
              c:identifier="RSVG_HANDLE_FLAG_UNLIMITED"
              glib:nick="flag-unlimited">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="188">Allow any SVG XML without size limitations.
  For security reasons, this should only be used for trusted input!
  Since: 2.40.3</doc>
      </member>
      <member name="flag_keep_image_data"
              value="2"
              c:identifier="RSVG_HANDLE_FLAG_KEEP_IMAGE_DATA"
              glib:nick="flag-keep-image-data">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="191">Keeps the image data when loading images,
 for use by cairo when painting to e.g. a PDF surface. This will make the
 resulting PDF file smaller and faster.
 Since: 2.40.3</doc>
      </member>
    </bitfield>
    <record name="HandlePrivate" c:type="RsvgHandlePrivate" disguised="1">
      <source-position filename="rsvg.h" line="70"/>
    </record>
    <constant name="MAJOR_VERSION" value="2" c:type="LIBRSVG_MAJOR_VERSION">
      <source-position filename="librsvg-features.h" line="8"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MICRO_VERSION" value="0" c:type="LIBRSVG_MICRO_VERSION">
      <source-position filename="librsvg-features.h" line="10"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION" value="45" c:type="LIBRSVG_MINOR_VERSION">
      <source-position filename="librsvg-features.h" line="9"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <record name="PositionData"
            c:type="RsvgPositionData"
            deprecated="1"
            deprecated-version="2.46">
      <doc xml:space="preserve"
           filename="rsvg.h"
           line="121">Position of an SVG fragment.</doc>
      <source-position filename="rsvg.h" line="133"/>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="123">position on the x axis</doc>
        <type name="gint" c:type="int"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="124">position on the y axis</doc>
        <type name="gint" c:type="int"/>
      </field>
    </record>
    <record name="Rectangle" c:type="RsvgRectangle" version="2.46">
      <doc xml:space="preserve"
           filename="rsvg.h"
           line="135">A data structure for holding a rectangle.</doc>
      <source-position filename="rsvg.h" line="151"/>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="137">X coordinate of the left side of the rectangle</doc>
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="138">Y coordinate of the the top side of the rectangle</doc>
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="width" writable="1">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="139">width of the rectangle</doc>
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="height" writable="1">
        <doc xml:space="preserve"
             filename="rsvg.h"
             line="140">height of the rectangle</doc>
        <type name="gdouble" c:type="double"/>
      </field>
    </record>
    <constant name="VERSION" value="2.45.0" c:type="LIBRSVG_VERSION">
      <source-position filename="librsvg-features.h" line="11"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function name="cleanup" c:identifier="rsvg_cleanup" version="2.36">
      <doc xml:space="preserve"
           filename="rsvg-base.c"
           line="133">This function should not be called from normal programs.
See xmlCleanupParser() for more information.</doc>
      <source-position filename="rsvg.h" line="154"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="error_quark"
              c:identifier="rsvg_error_quark"
              moved-to="Error.quark">
      <doc xml:space="preserve"
           filename="rsvg-base.c"
           line="43">The error domain for RSVG</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="rsvg-base.c"
             line="48">The error domain</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="set_default_dpi"
              c:identifier="rsvg_set_default_dpi"
              version="2.8"
              deprecated="1"
              deprecated-version="2.42.3">
      <doc xml:space="preserve"
           filename="rsvg-base.c"
           line="58">Do not use this function.  Create an #RsvgHandle and call
rsvg_handle_set_dpi() on it instead.</doc>
      <doc-deprecated xml:space="preserve">This function used to set a global default DPI.  However,
it only worked if it was called before any #RsvgHandle objects had been
created; it would not work after that.  To avoid global mutable state, please
use rsvg_handle_set_dpi() instead.</doc-deprecated>
      <source-position filename="rsvg.h" line="157"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="dpi" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-base.c"
               line="60">Dots Per Inch (aka Pixels Per Inch)</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_default_dpi_x_y"
              c:identifier="rsvg_set_default_dpi_x_y"
              version="2.8"
              deprecated="1"
              deprecated-version="2.42.3">
      <doc xml:space="preserve"
           filename="rsvg-base.c"
           line="78">Do not use this function.  Create an #RsvgHandle and call
rsvg_handle_set_dpi_x_y() on it instead.</doc>
      <doc-deprecated xml:space="preserve">This function used to set a global default DPI.  However,
it only worked if it was called before any #RsvgHandle objects had been
created; it would not work after that.  To avoid global mutable state, please
use rsvg_handle_set_dpi() instead.</doc-deprecated>
      <source-position filename="rsvg.h" line="160"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="dpi_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-base.c"
               line="80">Dots Per Inch (aka Pixels Per Inch)</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
        <parameter name="dpi_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="rsvg-base.c"
               line="81">Dots Per Inch (aka Pixels Per Inch)</doc>
          <type name="gdouble" c:type="double"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
