<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Atk" version="1.0"/>
  <include name="GLib" version="2.0"/>
  <include name="GModule" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gdk" version="3.0"/>
  <include name="GdkPixbuf" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="3.0"/>
  <include name="Pango" version="1.0"/>
  <include name="cairo" version="1.0"/>
  <include name="xlib" version="2.0"/>
  <namespace name="Gkbd"
             version="3.0"
             shared-library="libgnomekbd.so.7,libgnomekbdui.so.7"
             c:identifier-prefixes="Gkbd"
             c:symbol-prefixes="gkbd">
    <class name="Configuration"
           c:symbol-prefix="configuration"
           c:type="GkbdConfiguration"
           parent="GObject.Object"
           glib:type-name="GkbdConfiguration"
           glib:get-type="gkbd_configuration_get_type"
           glib:type-struct="ConfigurationClass">
      <function name="create_label_title"
                c:identifier="gkbd_configuration_create_label_title">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="group" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="ln2cnt_map" transfer-ownership="none">
            <type name="GLib.HashTable" c:type="GHashTable**">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="layout_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get" c:identifier="gkbd_configuration_get">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">singleton of GkbdConfiguration</doc>
          <type name="Configuration" c:type="GkbdConfiguration*"/>
        </return-value>
      </function>
      <method name="append_object"
              c:identifier="gkbd_configuration_append_object">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="obj" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="extract_layout_name"
              c:identifier="gkbd_configuration_extract_layout_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="group" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="free_images"
              c:identifier="gkbd_configuration_free_images"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="images" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_all_objects"
              c:identifier="gkbd_configuration_get_all_objects"
              introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">list of widgets/status icons/...</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="get_caps_lock_state"
              c:identifier="gkbd_configuration_get_caps_lock_state">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_current_group"
              c:identifier="gkbd_configuration_get_current_group">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_current_tooltip"
              c:identifier="gkbd_configuration_get_current_tooltip">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_group_name"
              c:identifier="gkbd_configuration_get_group_name">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">group name</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="group" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_group_names"
              c:identifier="gkbd_configuration_get_group_names">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">full group names</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_image_filename"
              c:identifier="gkbd_configuration_get_image_filename">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="group" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_indicator_config"
              c:identifier="gkbd_configuration_get_indicator_config">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">indicator config</doc>
          <type name="IndicatorConfig" c:type="GkbdIndicatorConfig*"/>
        </return-value>
      </method>
      <method name="get_keyboard_config"
              c:identifier="gkbd_configuration_get_keyboard_config">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">keyboard config</doc>
          <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
        </return-value>
      </method>
      <method name="get_num_lock_state"
              c:identifier="gkbd_configuration_get_num_lock_state">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_scroll_lock_state"
              c:identifier="gkbd_configuration_get_scroll_lock_state">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_short_group_names"
              c:identifier="gkbd_configuration_get_short_group_names">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">short group names</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_xkl_engine"
              c:identifier="gkbd_configuration_get_xkl_engine"
              introspectable="0">
        <return-value>
          <type c:type="XklEngine*"/>
        </return-value>
      </method>
      <method name="if_any_object_exists"
              c:identifier="gkbd_configuration_if_any_object_exists">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="if_flags_shown"
              c:identifier="gkbd_configuration_if_flags_shown">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="load_images" c:identifier="gkbd_configuration_load_images">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">list of images</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="GdkPixbuf.Pixbuf"/>
          </type>
        </return-value>
      </method>
      <method name="lock_group" c:identifier="gkbd_configuration_lock_group">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="group" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="lock_next_group"
              c:identifier="gkbd_configuration_lock_next_group">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="remove_object"
              c:identifier="gkbd_configuration_remove_object">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="obj" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_listen"
              c:identifier="gkbd_configuration_start_listen">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="stop_listen" c:identifier="gkbd_configuration_stop_listen">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ConfigurationPrivate" c:type="GkbdConfigurationPrivate*"/>
      </field>
      <glib:signal name="changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
      </glib:signal>
      <glib:signal name="group-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="indicators-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ConfigurationClass"
            c:type="GkbdConfigurationClass"
            glib:is-gtype-struct-for="Configuration">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ConfigurationPrivate"
            c:type="GkbdConfigurationPrivate"
            disguised="1">
    </record>
    <constant name="DESKTOP_SCHEMA"
              value="org.gnome.libgnomekbd.desktop"
              c:type="GKBD_DESKTOP_SCHEMA">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <record name="DesktopConfig" c:type="GkbdDesktopConfig">
      <field name="default_group" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="group_per_app" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="handle_indicators" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="layout_names_as_group_names" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="load_extra_items" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="settings" writable="1">
        <type name="Gio.Settings" c:type="GSettings*"/>
      </field>
      <field name="config_listener_id" writable="1">
        <type name="gint" c:type="int"/>
      </field>
      <field name="engine" introspectable="0" writable="1">
        <type c:type="XklEngine*"/>
      </field>
      <method name="activate" c:identifier="gkbd_desktop_config_activate">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="init"
              c:identifier="gkbd_desktop_config_init"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="engine" transfer-ownership="none">
            <type c:type="XklEngine*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="gkbd_desktop_config_load">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="load_group_descriptions"
              c:identifier="gkbd_desktop_config_load_group_descriptions"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="registry" transfer-ownership="none">
            <type c:type="XklConfigRegistry*"/>
          </parameter>
          <parameter name="layout_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="variant_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="short_group_names" transfer-ownership="none">
            <type name="utf8" c:type="gchar***"/>
          </parameter>
          <parameter name="full_group_names" transfer-ownership="none">
            <type name="utf8" c:type="gchar***"/>
          </parameter>
        </parameters>
      </method>
      <method name="lock_next_group"
              c:identifier="gkbd_desktop_config_lock_next_group">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="lock_prev_group"
              c:identifier="gkbd_desktop_config_lock_prev_group">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="restore_group"
              c:identifier="gkbd_desktop_config_restore_group">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="save" c:identifier="gkbd_desktop_config_save">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="start_listen"
              c:identifier="gkbd_desktop_config_start_listen">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1">
            <doc xml:whitespace="preserve">a function to call when settings are changed</doc>
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_listen"
              c:identifier="gkbd_desktop_config_stop_listen">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="term" c:identifier="gkbd_desktop_config_term">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <class name="Indicator"
           c:symbol-prefix="indicator"
           c:type="GkbdIndicator"
           parent="Gtk.Notebook"
           glib:type-name="GkbdIndicator"
           glib:get-type="gkbd_indicator_get_type"
           glib:type-struct="IndicatorClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gkbd_indicator_new">
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <function name="get_group_names"
                c:identifier="gkbd_indicator_get_group_names">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">List of group names</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </function>
      <function name="get_image_filename"
                c:identifier="gkbd_indicator_get_image_filename">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="group" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_max_width_height_ratio"
                c:identifier="gkbd_indicator_get_max_width_height_ratio">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
      </function>
      <function name="get_xkl_engine"
                c:identifier="gkbd_indicator_get_xkl_engine"
                introspectable="0">
        <return-value>
          <type c:type="XklEngine*"/>
        </return-value>
      </function>
      <virtual-method name="reinit_ui" invoker="reinit_ui">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="reinit_ui" c:identifier="gkbd_indicator_reinit_ui">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_angle" c:identifier="gkbd_indicator_set_angle">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="angle" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parent_tooltips"
              c:identifier="gkbd_indicator_set_parent_tooltips">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ifset" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gtk.Notebook" c:type="GtkNotebook"/>
      </field>
      <field name="priv">
        <type name="IndicatorPrivate" c:type="GkbdIndicatorPrivate*"/>
      </field>
      <glib:signal name="reinit-ui" when="last">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="IndicatorClass"
            c:type="GkbdIndicatorClass"
            glib:is-gtype-struct-for="Indicator">
      <field name="parent_class">
        <type name="Gtk.NotebookClass" c:type="GtkNotebookClass"/>
      </field>
      <field name="reinit_ui">
        <callback name="reinit_ui">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gki" transfer-ownership="none">
              <type name="Indicator" c:type="GkbdIndicator*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="IndicatorConfig" c:type="GkbdIndicatorConfig">
      <field name="secondary_groups_mask" writable="1">
        <type name="gint" c:type="int"/>
      </field>
      <field name="show_flags" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="font_family" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="font_size" writable="1">
        <type name="gint" c:type="int"/>
      </field>
      <field name="foreground_color" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="background_color" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="enabled_plugins" writable="1">
        <type name="utf8" c:type="gchar**"/>
      </field>
      <field name="settings" writable="1">
        <type name="Gio.Settings" c:type="GSettings*"/>
      </field>
      <field name="image_filenames" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="icon_theme" writable="1">
        <type name="Gtk.IconTheme" c:type="GtkIconTheme*"/>
      </field>
      <field name="config_listener_id" writable="1">
        <type name="gint" c:type="int"/>
      </field>
      <field name="engine" introspectable="0" writable="1">
        <type c:type="XklEngine*"/>
      </field>
      <method name="activate" c:identifier="gkbd_indicator_config_activate">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="free_image_filenames"
              c:identifier="gkbd_indicator_config_free_image_filenames">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_fg_color_for_widget"
              c:identifier="gkbd_indicator_config_get_fg_color_for_widget">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="widget" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_font_for_widget"
              c:identifier="gkbd_indicator_config_get_font_for_widget">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="widget" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="font_family" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="font_size" transfer-ownership="none">
            <type name="gint" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_images_file"
              c:identifier="gkbd_indicator_config_get_images_file">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kbd_config" transfer-ownership="none">
            <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
          </parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="init"
              c:identifier="gkbd_indicator_config_init"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="engine" transfer-ownership="none">
            <type c:type="XklEngine*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="gkbd_indicator_config_load">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="load_image_filenames"
              c:identifier="gkbd_indicator_config_load_image_filenames">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="kbd_config" transfer-ownership="none">
            <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_style"
              c:identifier="gkbd_indicator_config_refresh_style">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="save" c:identifier="gkbd_indicator_config_save">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="start_listen"
              c:identifier="gkbd_indicator_config_start_listen">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1">
            <doc xml:whitespace="preserve">a function to call when settings are changed</doc>
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_listen"
              c:identifier="gkbd_indicator_config_stop_listen">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="term" c:identifier="gkbd_indicator_config_term">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <record name="IndicatorPlugin" c:type="GkbdIndicatorPlugin">
      <field name="name" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="description" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="init_callback" writable="1">
        <type name="IndicatorPluginInitFunc"
              c:type="GkbdIndicatorPluginInitFunc"/>
      </field>
      <field name="term_callback" writable="1">
        <type name="IndicatorPluginTermFunc"
              c:type="GkbdIndicatorPluginTermFunc"/>
      </field>
      <field name="configure_properties_callback" writable="1">
        <type name="IndicatorPluginConfigureProperties"
              c:type="GkbdIndicatorPluginConfigureProperties"/>
      </field>
      <field name="group_changed_callback" writable="1">
        <type name="IndicatorPluginGroupChangedFunc"
              c:type="GkbdIndicatorPluginGroupChangedFunc"/>
      </field>
      <field name="window_created_callback" writable="1">
        <type name="IndicatorPluginWindowCreatedFunc"
              c:type="GkbdIndicatorPluginWindowCreatedFunc"/>
      </field>
      <field name="decorate_widget_callback" introspectable="0" writable="1">
        <type name="IndicatorPluginDecorateWidget"
              c:type="GkbdIndicatorPluginDecorateWidget"/>
      </field>
      <field name="config_changed_callback" writable="1">
        <type name="IndicatorPluginConfigChangedFunc"
              c:type="GkbdIndicatorPluginConfigChangedFunc"/>
      </field>
      <field name="create_widget_callback" introspectable="0" writable="1">
        <type name="IndicatorPluginCreateWidget"
              c:type="GkbdIndicatorPluginCreateWidget"/>
      </field>
      <function name="get_num_groups"
                c:identifier="gkbd_indicator_plugin_get_num_groups">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="pc" transfer-ownership="none">
            <type name="IndicatorPluginContainer"
                  c:type="GkbdIndicatorPluginContainer*"/>
          </parameter>
        </parameters>
      </function>
      <function name="load_localized_group_names"
                c:identifier="gkbd_indicator_plugin_load_localized_group_names">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">all group names</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="pc" transfer-ownership="none">
            <type name="IndicatorPluginContainer"
                  c:type="GkbdIndicatorPluginContainer*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <callback name="IndicatorPluginConfigChangedFunc"
              c:type="GkbdIndicatorPluginConfigChangedFunc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="from" transfer-ownership="none">
          <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
        </parameter>
        <parameter name="to" transfer-ownership="none">
          <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="IndicatorPluginConfigureProperties"
              c:type="GkbdIndicatorPluginConfigureProperties">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pc" transfer-ownership="none">
          <type name="IndicatorPluginContainer"
                c:type="GkbdIndicatorPluginContainer*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="IndicatorPluginContainer"
            c:type="GkbdIndicatorPluginContainer">
      <field name="settings" writable="1">
        <type name="Gio.Settings" c:type="GSettings*"/>
      </field>
      <method name="init" c:identifier="gkbd_indicator_plugin_container_init">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="reinit_ui"
              c:identifier="gkbd_indicator_plugin_container_reinit_ui">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="term" c:identifier="gkbd_indicator_plugin_container_term">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <callback name="IndicatorPluginCreateWidget"
              c:type="GkbdIndicatorPluginCreateWidget"
              introspectable="0">
      <return-value>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
    </callback>
    <callback name="IndicatorPluginDecorateWidget"
              c:type="GkbdIndicatorPluginDecorateWidget"
              introspectable="0">
      <return-value>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="group" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="group_description" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="config" transfer-ownership="none">
          <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="IndicatorPluginGetPluginFunc"
              c:type="GkbdIndicatorPluginGetPluginFunc">
      <return-value transfer-ownership="none">
        <type name="gpointer" c:type="gpointer*"/>
      </return-value>
    </callback>
    <callback name="IndicatorPluginGroupChangedFunc"
              c:type="GkbdIndicatorPluginGroupChangedFunc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="notebook" transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="new_group" transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="IndicatorPluginInitFunc"
              c:type="GkbdIndicatorPluginInitFunc">
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pc" transfer-ownership="none">
          <type name="IndicatorPluginContainer"
                c:type="GkbdIndicatorPluginContainer*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="IndicatorPluginManager" c:type="GkbdIndicatorPluginManager">
      <field name="all_plugin_recs" writable="1">
        <type name="GLib.HashTable" c:type="GHashTable*">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="inited_plugin_recs" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <method name="config_changed"
              c:identifier="gkbd_indicator_plugin_manager_config_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
          </parameter>
          <parameter name="to" transfer-ownership="none">
            <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="configure_plugin"
              c:identifier="gkbd_indicator_plugin_manager_configure_plugin">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pc" transfer-ownership="none">
            <type name="IndicatorPluginContainer"
                  c:type="GkbdIndicatorPluginContainer*"/>
          </parameter>
          <parameter name="full_path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </parameter>
        </parameters>
      </method>
      <method name="decorate_widget"
              c:identifier="gkbd_indicator_plugin_manager_decorate_widget">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">A widget to use</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="widget" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="group_description" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="demote_plugin"
              c:identifier="gkbd_indicator_plugin_manager_demote_plugin">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enabled_plugins" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="full_path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="disable_plugin"
              c:identifier="gkbd_indicator_plugin_manager_disable_plugin">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enabled_plugins" transfer-ownership="none">
            <type name="utf8" c:type="gchar***"/>
          </parameter>
          <parameter name="full_path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_plugin"
              c:identifier="gkbd_indicator_plugin_manager_enable_plugin">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enabled_plugins" transfer-ownership="none">
            <type name="utf8" c:type="gchar***"/>
          </parameter>
          <parameter name="full_path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_plugin"
              c:identifier="gkbd_indicator_plugin_manager_get_plugin">
        <return-value transfer-ownership="none">
          <type name="IndicatorPlugin" c:type="GkbdIndicatorPlugin*"/>
        </return-value>
        <parameters>
          <parameter name="full_path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="group_changed"
              c:identifier="gkbd_indicator_plugin_manager_group_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="notebook" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="new_group" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="gkbd_indicator_plugin_manager_init">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="init_enabled_plugins"
              c:identifier="gkbd_indicator_plugin_manager_init_enabled_plugins">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pc" transfer-ownership="none">
            <type name="IndicatorPluginContainer"
                  c:type="GkbdIndicatorPluginContainer*"/>
          </parameter>
          <parameter name="enabled_plugins" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="promote_plugin"
              c:identifier="gkbd_indicator_plugin_manager_promote_plugin">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enabled_plugins" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="full_path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="term" c:identifier="gkbd_indicator_plugin_manager_term">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="term_initialized_plugins"
              c:identifier="gkbd_indicator_plugin_manager_term_initialized_plugins">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="toggle_plugins"
              c:identifier="gkbd_indicator_plugin_manager_toggle_plugins">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pc" transfer-ownership="none">
            <type name="IndicatorPluginContainer"
                  c:type="GkbdIndicatorPluginContainer*"/>
          </parameter>
          <parameter name="enabled_plugins" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="window_created"
              c:identifier="gkbd_indicator_plugin_manager_window_created">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <parameter name="win" transfer-ownership="none">
            <type name="xlib.Window" c:type="Window"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="xlib.Window" c:type="Window"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="IndicatorPluginManagerRecord"
            c:type="GkbdIndicatorPluginManagerRecord">
      <field name="full_path" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="module" writable="1">
        <type name="GModule.Module" c:type="GModule*"/>
      </field>
      <field name="plugin" writable="1">
        <type name="IndicatorPlugin" c:type="GkbdIndicatorPlugin*"/>
      </field>
    </record>
    <callback name="IndicatorPluginTermFunc"
              c:type="GkbdIndicatorPluginTermFunc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </callback>
    <callback name="IndicatorPluginWindowCreatedFunc"
              c:type="GkbdIndicatorPluginWindowCreatedFunc">
      <return-value transfer-ownership="none">
        <type name="gint" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="win" transfer-ownership="none">
          <type name="xlib.Window" c:type="Window"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <type name="xlib.Window" c:type="Window"/>
        </parameter>
      </parameters>
    </callback>
    <record name="IndicatorPrivate"
            c:type="GkbdIndicatorPrivate"
            disguised="1">
    </record>
    <constant name="KEYBOARD_DRAWING_H"
              value="1"
              c:type="GKBD_KEYBOARD_DRAWING_H">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEYBOARD_SCHEMA"
              value="org.gnome.libgnomekbd.keyboard"
              c:type="GKBD_KEYBOARD_SCHEMA">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <record name="KeyboardConfig" c:type="GkbdKeyboardConfig">
      <field name="model" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="layouts_variants" writable="1">
        <type name="utf8" c:type="gchar**"/>
      </field>
      <field name="options" writable="1">
        <type name="utf8" c:type="gchar**"/>
      </field>
      <field name="settings" writable="1">
        <type name="Gio.Settings" c:type="GSettings*"/>
      </field>
      <field name="config_listener_id" writable="1">
        <type name="gint" c:type="int"/>
      </field>
      <field name="engine" introspectable="0" writable="1">
        <type c:type="XklEngine*"/>
      </field>
      <method name="activate" c:identifier="gkbd_keyboard_config_activate">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="equals" c:identifier="gkbd_keyboard_config_equals">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="kbd_config2" transfer-ownership="none">
            <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="init"
              c:identifier="gkbd_keyboard_config_init"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="engine" transfer-ownership="none">
            <type c:type="XklEngine*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="gkbd_keyboard_config_load">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="kbd_config_default" transfer-ownership="none">
            <type name="KeyboardConfig" c:type="GkbdKeyboardConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_from_x_current"
              c:identifier="gkbd_keyboard_config_load_from_x_current"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buf" transfer-ownership="none">
            <type c:type="XklConfigRec*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_from_x_initial"
              c:identifier="gkbd_keyboard_config_load_from_x_initial"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buf" transfer-ownership="none">
            <type c:type="XklConfigRec*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save" c:identifier="gkbd_keyboard_config_save">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="start_listen"
              c:identifier="gkbd_keyboard_config_start_listen">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1">
            <doc xml:whitespace="preserve">a function to call when settings are changed</doc>
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_listen"
              c:identifier="gkbd_keyboard_config_stop_listen">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="term" c:identifier="gkbd_keyboard_config_term">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="to_string" c:identifier="gkbd_keyboard_config_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <function name="add_default_switch_option_if_necessary"
                c:identifier="gkbd_keyboard_config_add_default_switch_option_if_necessary">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">List of options</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="layouts_list" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="options_list" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="was_appended" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </function>
      <function name="format_full_description"
                c:identifier="gkbd_keyboard_config_format_full_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="layout_descr" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="variant_descr" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_descriptions"
                c:identifier="gkbd_keyboard_config_get_descriptions"
                introspectable="0">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="config_registry" transfer-ownership="none">
            <type c:type="XklConfigRegistry*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="layout_short_descr" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="layout_descr" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="variant_short_descr" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="variant_descr" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </function>
      <function name="merge_items"
                c:identifier="gkbd_keyboard_config_merge_items">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="split_items"
                c:identifier="gkbd_keyboard_config_split_items">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="merged" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="KeyboardDrawing"
           c:symbol-prefix="keyboard_drawing"
           c:type="GkbdKeyboardDrawing"
           parent="Gtk.DrawingArea"
           glib:type-name="GkbdKeyboardDrawing"
           glib:get-type="gkbd_keyboard_drawing_get_type"
           glib:type-struct="KeyboardDrawingClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="dialog_new"
                   c:identifier="gkbd_keyboard_drawing_dialog_new">
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <constructor name="new" c:identifier="gkbd_keyboard_drawing_new">
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <function name="dialog_set_group"
                c:identifier="gkbd_keyboard_drawing_dialog_set_group"
                introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dialog" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="registry" transfer-ownership="none">
            <type c:type="XklConfigRegistry*"/>
          </parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <function name="dialog_set_layout"
                c:identifier="gkbd_keyboard_drawing_dialog_set_layout"
                introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dialog" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="registry" transfer-ownership="none">
            <type c:type="XklConfigRegistry*"/>
          </parameter>
          <parameter name="layout" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="bad_keycode">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="keycode" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_compat"
              c:identifier="gkbd_keyboard_drawing_get_compat">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_geometry"
              c:identifier="gkbd_keyboard_drawing_get_geometry">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_keycodes"
              c:identifier="gkbd_keyboard_drawing_get_keycodes">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_symbols"
              c:identifier="gkbd_keyboard_drawing_get_symbols">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_types" c:identifier="gkbd_keyboard_drawing_get_types">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="print" c:identifier="gkbd_keyboard_drawing_print">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="parent_window" transfer-ownership="none">
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="render" c:identifier="gkbd_keyboard_drawing_render">
        <doc xml:whitespace="preserve">Renders a keyboard layout to a cairo_t context.  @cr and @layout can be got
from e.g. a GtkWidget or a GtkPrintContext.  @cr and @layout may be modified
by the function but will not be unreffed.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE on success, %FALSE on failure</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cr" transfer-ownership="none">
            <doc xml:whitespace="preserve">Cairo context to render to</doc>
            <type name="cairo.Context" c:type="cairo_t*"/>
          </parameter>
          <parameter name="layout" transfer-ownership="none">
            <doc xml:whitespace="preserve">Pango layout to use to render text</doc>
            <type name="Pango.Layout" c:type="PangoLayout*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:whitespace="preserve">left coordinate (pixels) of region to render in</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:whitespace="preserve">top coordinate (pixels) of region to render in</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:whitespace="preserve">width (pixels) of region to render in</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:whitespace="preserve">height (pixels) of region to render in</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="dpi_x" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="dpi_y" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_groups_levels"
              c:identifier="gkbd_keyboard_drawing_set_groups_levels">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="groupLevels" transfer-ownership="none">
            <type name="KeyboardDrawingGroupLevel"
                  c:type="GkbdKeyboardDrawingGroupLevel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_keyboard"
              c:identifier="gkbd_keyboard_drawing_set_keyboard"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="names" transfer-ownership="none">
            <type c:type="XkbComponentNamesRec*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_layout"
              c:identifier="gkbd_keyboard_drawing_set_layout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_track_config"
              c:identifier="gkbd_keyboard_drawing_set_track_config">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_track_modifiers"
              c:identifier="gkbd_keyboard_drawing_set_track_modifiers">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent" readable="0" private="1">
        <type name="Gtk.DrawingArea" c:type="GtkDrawingArea"/>
      </field>
      <field name="xkb" introspectable="0" readable="0" private="1">
        <type c:type="XkbDescRec*"/>
      </field>
      <field name="xkbOnDisplay" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="l3mod" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="renderContext" readable="0" private="1">
        <type name="KeyboardDrawingRenderContext"
              c:type="GkbdKeyboardDrawingRenderContext*"/>
      </field>
      <field name="keys" readable="0" private="1">
        <type name="KeyboardDrawingKey" c:type="GkbdKeyboardDrawingKey*"/>
      </field>
      <field name="keyboard_items" readable="0" private="1">
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="colors" readable="0" private="1">
        <type name="Gdk.Color" c:type="GdkColor*"/>
      </field>
      <field name="timeout" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="groupLevels" readable="0" private="1">
        <type name="KeyboardDrawingGroupLevel"
              c:type="GkbdKeyboardDrawingGroupLevel**"/>
      </field>
      <field name="mods" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="display" readable="0" private="1">
        <type name="xlib.Display" c:type="Display*"/>
      </field>
      <field name="screen_num" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="xkb_event_type" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="physical_indicators" readable="0" private="1">
        <type name="KeyboardDrawingDoodad"
              c:type="GkbdKeyboardDrawingDoodad**"/>
      </field>
      <field name="physical_indicators_size" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="track_config" readable="0" bits="1" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="track_modifiers" readable="0" bits="1" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <glib:signal name="bad-keycode" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="KeyboardDrawingClass"
            c:type="GkbdKeyboardDrawingClass"
            glib:is-gtype-struct-for="KeyboardDrawing">
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
      <field name="bad_keycode">
        <callback name="bad_keycode">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drawing" transfer-ownership="none">
              <type name="KeyboardDrawing" c:type="GkbdKeyboardDrawing*"/>
            </parameter>
            <parameter name="keycode" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="KeyboardDrawingDoodad" c:type="GkbdKeyboardDrawingDoodad">
      <field name="type" readable="0" private="1">
        <type name="KeyboardDrawingItemType"
              c:type="GkbdKeyboardDrawingItemType"/>
      </field>
      <field name="origin_x" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="origin_y" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="angle" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="priority" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="doodad" introspectable="0" readable="0" private="1">
        <type c:type="XkbDoodadRec*"/>
      </field>
      <field name="on" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
    </record>
    <record name="KeyboardDrawingGroupLevel"
            c:type="GkbdKeyboardDrawingGroupLevel">
      <field name="group" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="level" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <enumeration name="KeyboardDrawingGroupLevelPosition"
                 c:type="GkbdKeyboardDrawingGroupLevelPosition">
      <member name="topleft"
              value="0"
              c:identifier="GKBD_KEYBOARD_DRAWING_POS_TOPLEFT"/>
      <member name="topright"
              value="1"
              c:identifier="GKBD_KEYBOARD_DRAWING_POS_TOPRIGHT"/>
      <member name="bottomleft"
              value="2"
              c:identifier="GKBD_KEYBOARD_DRAWING_POS_BOTTOMLEFT"/>
      <member name="bottomright"
              value="3"
              c:identifier="GKBD_KEYBOARD_DRAWING_POS_BOTTOMRIGHT"/>
      <member name="total"
              value="4"
              c:identifier="GKBD_KEYBOARD_DRAWING_POS_TOTAL"/>
      <member name="first"
              value="0"
              c:identifier="GKBD_KEYBOARD_DRAWING_POS_FIRST"/>
      <member name="last"
              value="3"
              c:identifier="GKBD_KEYBOARD_DRAWING_POS_LAST"/>
    </enumeration>
    <record name="KeyboardDrawingItem" c:type="GkbdKeyboardDrawingItem">
      <field name="type" readable="0" private="1">
        <type name="KeyboardDrawingItemType"
              c:type="GkbdKeyboardDrawingItemType"/>
      </field>
      <field name="origin_x" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="origin_y" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="angle" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="priority" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
    </record>
    <enumeration name="KeyboardDrawingItemType"
                 c:type="GkbdKeyboardDrawingItemType">
      <member name="invalid"
              value="0"
              c:identifier="GKBD_KEYBOARD_DRAWING_ITEM_TYPE_INVALID"/>
      <member name="key"
              value="1"
              c:identifier="GKBD_KEYBOARD_DRAWING_ITEM_TYPE_KEY"/>
      <member name="key_extra"
              value="2"
              c:identifier="GKBD_KEYBOARD_DRAWING_ITEM_TYPE_KEY_EXTRA"/>
      <member name="doodad"
              value="3"
              c:identifier="GKBD_KEYBOARD_DRAWING_ITEM_TYPE_DOODAD"/>
    </enumeration>
    <record name="KeyboardDrawingKey" c:type="GkbdKeyboardDrawingKey">
      <field name="type" readable="0" private="1">
        <type name="KeyboardDrawingItemType"
              c:type="GkbdKeyboardDrawingItemType"/>
      </field>
      <field name="origin_x" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="origin_y" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="angle" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="priority" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="xkbkey" introspectable="0" readable="0" private="1">
        <type c:type="XkbKeyRec*"/>
      </field>
      <field name="pressed" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="keycode" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
    </record>
    <record name="KeyboardDrawingRenderContext"
            c:type="GkbdKeyboardDrawingRenderContext">
      <field name="cr" writable="1">
        <type name="cairo.Context" c:type="cairo_t*"/>
      </field>
      <field name="angle" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="layout" writable="1">
        <type name="Pango.Layout" c:type="PangoLayout*"/>
      </field>
      <field name="font_desc" writable="1">
        <type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
      </field>
      <field name="scale_numerator" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="scale_denominator" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="dark_color" writable="1">
        <type name="Gdk.Color" c:type="GdkColor*"/>
      </field>
    </record>
    <class name="Status"
           c:symbol-prefix="status"
           c:type="GkbdStatus"
           parent="Gtk.StatusIcon"
           glib:type-name="GkbdStatus"
           glib:get-type="gkbd_status_get_type"
           glib:type-struct="StatusClass">
      <constructor name="new" c:identifier="gkbd_status_new">
        <return-value transfer-ownership="full">
          <type name="Gtk.StatusIcon" c:type="GtkStatusIcon*"/>
        </return-value>
      </constructor>
      <function name="get_group_names"
                c:identifier="gkbd_status_get_group_names">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">List of group names</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </function>
      <function name="get_image_filename"
                c:identifier="gkbd_status_get_image_filename">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="group" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_xkl_engine"
                c:identifier="gkbd_status_get_xkl_engine"
                introspectable="0">
        <return-value>
          <type c:type="XklEngine*"/>
        </return-value>
      </function>
      <method name="reinit_ui" c:identifier="gkbd_status_reinit_ui">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent">
        <type name="Gtk.StatusIcon" c:type="GtkStatusIcon"/>
      </field>
      <field name="priv">
        <type name="StatusPrivate" c:type="GkbdStatusPrivate*"/>
      </field>
    </class>
    <record name="StatusClass"
            c:type="GkbdStatusClass"
            glib:is-gtype-struct-for="Status">
      <field name="parent_class">
        <type name="Gtk.NotebookClass" c:type="GtkNotebookClass"/>
      </field>
    </record>
    <record name="StatusPrivate" c:type="GkbdStatusPrivate" disguised="1">
    </record>
    <function name="indicator_plugin_get_num_groups"
              c:identifier="gkbd_indicator_plugin_get_num_groups"
              moved-to="IndicatorPlugin.get_num_groups">
      <return-value transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="pc" transfer-ownership="none">
          <type name="IndicatorPluginContainer"
                c:type="GkbdIndicatorPluginContainer*"/>
        </parameter>
      </parameters>
    </function>
    <function name="indicator_plugin_load_localized_group_names"
              c:identifier="gkbd_indicator_plugin_load_localized_group_names"
              moved-to="IndicatorPlugin.load_localized_group_names">
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">all group names</doc>
        <array c:type="gchar**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="pc" transfer-ownership="none">
          <type name="IndicatorPluginContainer"
                c:type="GkbdIndicatorPluginContainer*"/>
        </parameter>
      </parameters>
    </function>
    <function name="install_glib_log_appender"
              c:identifier="gkbd_install_glib_log_appender">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="keyboard_config_add_default_switch_option_if_necessary"
              c:identifier="gkbd_keyboard_config_add_default_switch_option_if_necessary"
              moved-to="KeyboardConfig.add_default_switch_option_if_necessary">
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">List of options</doc>
        <array c:type="gchar**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="layouts_list" transfer-ownership="none">
          <type name="utf8" c:type="gchar**"/>
        </parameter>
        <parameter name="options_list" transfer-ownership="none">
          <type name="utf8" c:type="gchar**"/>
        </parameter>
        <parameter name="was_appended" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyboard_config_format_full_description"
              c:identifier="gkbd_keyboard_config_format_full_description"
              moved-to="KeyboardConfig.format_full_description">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="layout_descr" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="variant_descr" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyboard_config_merge_items"
              c:identifier="gkbd_keyboard_config_merge_items"
              moved-to="KeyboardConfig.merge_items">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="parent" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyboard_config_split_items"
              c:identifier="gkbd_keyboard_config_split_items"
              moved-to="KeyboardConfig.split_items">
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="merged" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <type name="utf8" c:type="gchar**"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <type name="utf8" c:type="gchar**"/>
        </parameter>
      </parameters>
    </function>
    <function name="preview_load_position"
              c:identifier="gkbd_preview_load_position">
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">A rectangle to use</doc>
        <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
      </return-value>
    </function>
    <function name="preview_save_position"
              c:identifier="gkbd_preview_save_position">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="rect" transfer-ownership="none">
          <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
        </parameter>
      </parameters>
    </function>
    <function name="strv_append" c:identifier="gkbd_strv_append">
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">Append string to strv array</doc>
        <array c:type="gchar**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="arr" transfer-ownership="none">
          <type name="utf8" c:type="gchar**"/>
        </parameter>
        <parameter name="element" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="strv_behead" c:identifier="gkbd_strv_behead">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="arr" transfer-ownership="none">
          <type name="utf8" c:type="gchar**"/>
        </parameter>
      </parameters>
    </function>
    <function name="strv_remove" c:identifier="gkbd_strv_remove">
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="arr" transfer-ownership="none">
          <type name="utf8" c:type="gchar**"/>
        </parameter>
        <parameter name="element" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
