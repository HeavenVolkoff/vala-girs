<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <c:include name="act/act.h"/>
  <namespace name="AccountsService"
             version="1.0"
             shared-library="libaccountsservice.so.0"
             c:identifier-prefixes="Act"
             c:symbol-prefixes="act">
    <class name="User"
           c:symbol-prefix="user"
           c:type="ActUser"
           parent="GObject.Object"
           glib:type-name="ActUser"
           glib:get-type="act_user_get_type"
           glib:type-struct="UserClass">
      <method name="collate" c:identifier="act_user_collate">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="user2" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_account_type" c:identifier="act_user_get_account_type">
        <doc xml:whitespace="preserve">Retrieves the account type of @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #ActUserAccountType</doc>
          <type name="UserAccountType" c:type="ActUserAccountType"/>
        </return-value>
      </method>
      <method name="get_automatic_login"
              c:identifier="act_user_get_automatic_login">
        <doc xml:whitespace="preserve">Returns whether or not #ActUser is automatically logged in at boot time.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_email" c:identifier="act_user_get_email">
        <doc xml:whitespace="preserve">Retrieves the email address set by @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to an array of characters which must not be modified or freed, or %NULL.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_home_dir" c:identifier="act_user_get_home_dir">
        <doc xml:whitespace="preserve">Retrieves the home directory for @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to an array of characters which must not be modified or freed, or %NULL.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon_file" c:identifier="act_user_get_icon_file">
        <doc xml:whitespace="preserve">Returns the path to the account icon belonging to @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a path to an icon</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_language" c:identifier="act_user_get_language">
        <doc xml:whitespace="preserve">Returns the path to the configured locale of @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a path to an icon</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_location" c:identifier="act_user_get_location">
        <doc xml:whitespace="preserve">Retrieves the location set by @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to an array of characters which must not be modified or freed, or %NULL.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_locked" c:identifier="act_user_get_locked">
        <doc xml:whitespace="preserve">Returns whether or not the #ActUser account is locked.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_login_frequency"
              c:identifier="act_user_get_login_frequency">
        <doc xml:whitespace="preserve">Returns the number of times @user has logged in.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the login frequency</doc>
          <type name="gint" c:type="int"/>
        </return-value>
      </method>
      <method name="get_num_sessions" c:identifier="act_user_get_num_sessions">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_object_path" c:identifier="act_user_get_object_path">
        <doc xml:whitespace="preserve">Returns the user accounts service object path of @user,
or %NULL if @user doesn't have an object path associated
with it.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the object path of the user</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_password_hint"
              c:identifier="act_user_get_password_hint">
        <doc xml:whitespace="preserve">Retrieves the password hint set by @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to an array of characters which must not be modified or freed, or %NULL.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_password_mode"
              c:identifier="act_user_get_password_mode">
        <doc xml:whitespace="preserve">Retrieves the password mode of @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #ActUserPasswordMode</doc>
          <type name="UserPasswordMode" c:type="ActUserPasswordMode"/>
        </return-value>
      </method>
      <method name="get_primary_session_id"
              c:identifier="act_user_get_primary_session_id">
        <doc xml:whitespace="preserve">Returns the primary ConsoleKit session id of @user, or %NULL if @user isn't
logged in.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the primary ConsoleKit session id of the user</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_real_name" c:identifier="act_user_get_real_name">
        <doc xml:whitespace="preserve">Retrieves the display name of @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to an array of characters which must not be modified or freed, or %NULL.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_shell" c:identifier="act_user_get_shell">
        <doc xml:whitespace="preserve">Retrieves the shell assigned to @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to an array of characters which must not be modified or freed, or %NULL.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_uid" c:identifier="act_user_get_uid">
        <doc xml:whitespace="preserve">Retrieves the ID of @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to an array of characters which must not be modified or freed, or %NULL.</doc>
          <type name="guint" c:type="uid_t"/>
        </return-value>
      </method>
      <method name="get_user_name" c:identifier="act_user_get_user_name">
        <doc xml:whitespace="preserve">Retrieves the login name of @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to an array of characters which must not be modified or freed, or %NULL.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_x_session" c:identifier="act_user_get_x_session">
        <doc xml:whitespace="preserve">Returns the path to the configured X session for @user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a path to an icon</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="is_loaded" c:identifier="act_user_is_loaded">
        <doc xml:whitespace="preserve">Determines whether or not the user object is loaded and ready to read from.
#ActUserManager:is-loaded property must be %TRUE before calling
act_user_manager_list_users()</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_logged_in" c:identifier="act_user_is_logged_in">
        <doc xml:whitespace="preserve">Returns whether or not #ActUser is currently logged in.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_system_account"
              c:identifier="act_user_is_system_account">
        <doc xml:whitespace="preserve">Returns whether or not #ActUser represents a 'system account' like
'root' or 'nobody'.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_account_type" c:identifier="act_user_set_account_type">
        <doc xml:whitespace="preserve">Changes the account type of @user.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="account_type" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #ActUserAccountType</doc>
            <type name="UserAccountType" c:type="ActUserAccountType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_automatic_login"
              c:identifier="act_user_set_automatic_login">
        <doc xml:whitespace="preserve">If enabled is set to %TRUE then this user will automatically be logged in
at boot up time.  Only one user can be configured to auto login at any given
time, so subsequent calls to act_user_set_automatic_login() override previous
calls.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:whitespace="preserve">whether or not to autologin for user.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_email" c:identifier="act_user_set_email">
        <doc xml:whitespace="preserve">Assigns a new email to @user.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="email" transfer-ownership="none">
            <doc xml:whitespace="preserve">an email address</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_file" c:identifier="act_user_set_icon_file">
        <doc xml:whitespace="preserve">Assigns a new icon for @user.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="icon_file" transfer-ownership="none">
            <doc xml:whitespace="preserve">path to an icon</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_language" c:identifier="act_user_set_language">
        <doc xml:whitespace="preserve">Assigns a new locale for @user.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="language" transfer-ownership="none">
            <doc xml:whitespace="preserve">a locale (e.g. en_US.utf8)</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_location" c:identifier="act_user_set_location">
        <doc xml:whitespace="preserve">Assigns a new location for @user.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:whitespace="preserve">a location</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locked" c:identifier="act_user_set_locked">
        <doc xml:whitespace="preserve">Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="locked" transfer-ownership="none">
            <doc xml:whitespace="preserve">whether or not the account is locked</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password" c:identifier="act_user_set_password">
        <doc xml:whitespace="preserve">Changes the password of @user to @password.
@hint is displayed to the user if they forget the password.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="password" transfer-ownership="none">
            <doc xml:whitespace="preserve">a password</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="hint" transfer-ownership="none">
            <doc xml:whitespace="preserve">a hint to help user recall password</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password_mode"
              c:identifier="act_user_set_password_mode">
        <doc xml:whitespace="preserve">Changes the password of @user.  If @password_mode is
ACT_USER_PASSWORD_MODE_SET_AT_LOGIN then the user will
be asked for a new password at the next login.  If @password_mode
is ACT_USER_PASSWORD_MODE_NONE then the user will not require
a password to log in.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="password_mode" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #ActUserPasswordMode</doc>
            <type name="UserPasswordMode" c:type="ActUserPasswordMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_real_name" c:identifier="act_user_set_real_name">
        <doc xml:whitespace="preserve">Assigns a new name for @user.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="real_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">a new name</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_name" c:identifier="act_user_set_user_name">
        <doc xml:whitespace="preserve">Assigns a new username for @user.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">a new user name</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_x_session" c:identifier="act_user_set_x_session">
        <doc xml:whitespace="preserve">Assigns a new x session for @user.

Note this function is synchronous and ignores errors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="x_session" transfer-ownership="none">
            <doc xml:whitespace="preserve">an x session (e.g. gnome)</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="account-type" transfer-ownership="none">
        <type name="gint"/>
      </property>
      <property name="automatic-login" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="email" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="home-directory" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="icon-file" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="is-loaded" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="language" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="location" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="locked" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="login-frequency" transfer-ownership="none">
        <type name="gint"/>
      </property>
      <property name="password-hint" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="password-mode" transfer-ownership="none">
        <type name="gint"/>
      </property>
      <property name="real-name" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="shell" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="system-account" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="uid" transfer-ownership="none">
        <type name="gint"/>
      </property>
      <property name="user-name" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="x-session" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <glib:signal name="changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
      </glib:signal>
      <glib:signal name="sessions-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
      </glib:signal>
    </class>
    <enumeration name="UserAccountType"
                 glib:type-name="ActUserAccountType"
                 glib:get-type="act_user_account_type_get_type"
                 c:type="ActUserAccountType">
      <member name="standard"
              value="0"
              c:identifier="ACT_USER_ACCOUNT_TYPE_STANDARD"
              glib:nick="standard"/>
      <member name="administrator"
              value="1"
              c:identifier="ACT_USER_ACCOUNT_TYPE_ADMINISTRATOR"
              glib:nick="administrator"/>
    </enumeration>
    <record name="UserClass"
            c:type="ActUserClass"
            disguised="1"
            glib:is-gtype-struct-for="User">
    </record>
    <class name="UserManager"
           c:symbol-prefix="user_manager"
           c:type="ActUserManager"
           parent="GObject.Object"
           glib:type-name="ActUserManager"
           glib:get-type="act_user_manager_get_type"
           glib:type-struct="UserManagerClass">
      <function name="get_default" c:identifier="act_user_manager_get_default">
        <doc xml:whitespace="preserve">Returns the user manager singleton instance.  Calling this function will
automatically being loading the user list if it isn't loaded already.
The #ActUserManager:is-loaded property will be set to %TRUE when the users
are finished loading and then act_user_manager_list_users() can be called.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">user manager object</doc>
          <type name="UserManager" c:type="ActUserManager*"/>
        </return-value>
      </function>
      <virtual-method name="user_added">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="user_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="user_is_logged_in_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="user_removed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="activate_user_session"
              c:identifier="act_user_manager_activate_user_session">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_switch" c:identifier="act_user_manager_can_switch">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="create_user"
              c:identifier="act_user_manager_create_user"
              throws="1">
        <doc xml:whitespace="preserve">Creates a user account on the system.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">user object</doc>
          <type name="User" c:type="ActUser*"/>
        </return-value>
        <parameters>
          <parameter name="username" transfer-ownership="none">
            <doc xml:whitespace="preserve">a unix user name</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="fullname" transfer-ownership="none">
            <doc xml:whitespace="preserve">a unix GECOS value</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="accounttype" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #ActUserAccountType</doc>
            <type name="UserAccountType" c:type="ActUserAccountType"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_user"
              c:identifier="act_user_manager_delete_user"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
          <parameter name="remove_files" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_user" c:identifier="act_user_manager_get_user">
        <doc xml:whitespace="preserve">Retrieves a pointer to the #ActUser object for the login @username
from @manager. Trying to use this object before its
#ActUser:is-loaded property is %TRUE will result in undefined
behavior.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">#ActUser object</doc>
          <type name="User" c:type="ActUser*"/>
        </return-value>
        <parameters>
          <parameter name="username" transfer-ownership="none">
            <doc xml:whitespace="preserve">the login name of the user to get.</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="goto_login_session"
              c:identifier="act_user_manager_goto_login_session">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="list_users" c:identifier="act_user_manager_list_users">
        <doc xml:whitespace="preserve">Get a list of system user accounts</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">List of #ActUser objects</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="User"/>
          </type>
        </return-value>
      </method>
      <property name="exclude-usernames-list"
                writable="1"
                transfer-ownership="none">
        <type name="gpointer"/>
      </property>
      <property name="has-multiple-users" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="include-usernames-list"
                writable="1"
                transfer-ownership="none">
        <type name="gpointer"/>
      </property>
      <property name="is-loaded" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="UserManagerPrivate" c:type="ActUserManagerPrivate*"/>
      </field>
      <glib:signal name="user-added" when="last">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="User"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="user-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="User"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="user-is-logged-in-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="User"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="user-removed" when="last">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="User"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="UserManagerClass"
            c:type="ActUserManagerClass"
            glib:is-gtype-struct-for="UserManager">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="user_added">
        <callback name="user_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="user_manager" transfer-ownership="none">
              <type name="UserManager" c:type="ActUserManager*"/>
            </parameter>
            <parameter name="user" transfer-ownership="none">
              <type name="User" c:type="ActUser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="user_removed">
        <callback name="user_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="user_manager" transfer-ownership="none">
              <type name="UserManager" c:type="ActUserManager*"/>
            </parameter>
            <parameter name="user" transfer-ownership="none">
              <type name="User" c:type="ActUser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="user_is_logged_in_changed">
        <callback name="user_is_logged_in_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="user_manager" transfer-ownership="none">
              <type name="UserManager" c:type="ActUserManager*"/>
            </parameter>
            <parameter name="user" transfer-ownership="none">
              <type name="User" c:type="ActUser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="user_changed">
        <callback name="user_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="user_manager" transfer-ownership="none">
              <type name="UserManager" c:type="ActUserManager*"/>
            </parameter>
            <parameter name="user" transfer-ownership="none">
              <type name="User" c:type="ActUser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="UserManagerError"
                 glib:type-name="ActUserManagerError"
                 glib:get-type="act_user_manager_error_get_type"
                 c:type="ActUserManagerError"
                 glib:error-domain="act_user_manager_error">
      <member name="general"
              value="0"
              c:identifier="ACT_USER_MANAGER_ERROR_GENERAL"
              glib:nick="general"/>
      <member name="key_not_found"
              value="1"
              c:identifier="ACT_USER_MANAGER_ERROR_KEY_NOT_FOUND"
              glib:nick="key-not-found"/>
      <function name="quark" c:identifier="act_user_manager_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="UserManagerPrivate"
            c:type="ActUserManagerPrivate"
            disguised="1">
    </record>
    <enumeration name="UserPasswordMode"
                 glib:type-name="ActUserPasswordMode"
                 glib:get-type="act_user_password_mode_get_type"
                 c:type="ActUserPasswordMode">
      <member name="regular"
              value="0"
              c:identifier="ACT_USER_PASSWORD_MODE_REGULAR"
              glib:nick="regular"/>
      <member name="set_at_login"
              value="1"
              c:identifier="ACT_USER_PASSWORD_MODE_SET_AT_LOGIN"
              glib:nick="set-at-login"/>
      <member name="none"
              value="2"
              c:identifier="ACT_USER_PASSWORD_MODE_NONE"
              glib:nick="none"/>
    </enumeration>
    <function name="user_manager_error_quark"
              c:identifier="act_user_manager_error_quark"
              moved-to="UserManagerError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
