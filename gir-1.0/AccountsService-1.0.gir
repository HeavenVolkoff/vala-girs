<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <c:include name="act/act.h"/>
  <namespace name="AccountsService"
             version="1.0"
             shared-library="libaccountsservice.so.0"
             c:identifier-prefixes="Act"
             c:symbol-prefixes="act">
    <class name="User"
           c:symbol-prefix="user"
           c:type="ActUser"
           parent="GObject.Object"
           glib:type-name="ActUser"
           glib:get-type="act_user_get_type"
           glib:type-struct="UserClass">
      <doc xml:space="preserve"
           filename="../src/libaccountsservice/act-user.c"
           line="46">Represents a user account on the system.</doc>
      <source-position filename="../src/libaccountsservice/act-user.h"
                       line="50"/>
      <method name="collate" c:identifier="act_user_collate">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="780">Organize the user by login frequency and names.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="787">negative if @user1 is before @user2, zero if equal
   or positive if @user1 is after @user2</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="user1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="782">a user</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="user2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="783">a user</doc>
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_account_type" c:identifier="act_user_get_account_type">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="563">Retrieves the account type of @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="569">a #ActUserAccountType</doc>
          <type name="UserAccountType" c:type="ActUserAccountType"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="565">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_automatic_login"
              c:identifier="act_user_get_automatic_login">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="917">Returns whether or not #ActUser is automatically logged in at boot time.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="923">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="919">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_email" c:identifier="act_user_get_email">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="661">Retrieves the email address set by @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="667">a pointer to an array of characters which must not be modified or
 freed, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="663">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_home_dir" c:identifier="act_user_get_home_dir">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="621">Retrieves the home directory for @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="627">a pointer to an array of characters which must not be modified or
 freed, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="623">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_file" c:identifier="act_user_get_icon_file">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="991">Returns the path to the account icon belonging to @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="997">a path to an icon</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="993">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_language" c:identifier="act_user_get_language">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1010">Returns the path to the configured locale of @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="1016">a path to an icon</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1012">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location" c:identifier="act_user_get_location">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="681">Retrieves the location set by @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="687">a pointer to an array of characters which must not be modified or
 freed, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="683">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locked" c:identifier="act_user_get_locked">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="898">Returns whether or not the #ActUser account is locked.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="904">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="900">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_login_frequency"
              c:identifier="act_user_get_login_frequency">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="722">Returns the number of times @user has logged in.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="728">the login frequency</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="724">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_login_history"
              c:identifier="act_user_get_login_history">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="760">Returns the login history for @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="766">a pointer to GVariant of type "a(xxa{sv})"
which must not be modified or freed, or %NULL.</doc>
          <type name="GLib.Variant" c:type="const GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="762">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_login_time" c:identifier="act_user_get_login_time">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="741">Returns the last login time for @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="747">the login time</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="743">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_num_sessions" c:identifier="act_user_get_num_sessions">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="197">Get the number of sessions for a user that are graphical and on the
same seat as the session of the calling process.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="204">the number of sessions</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="199">a user</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_num_sessions_anywhere"
              c:identifier="act_user_get_num_sessions_anywhere">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="212">Get the number of sessions for a user on any seat of any type.
See also act_user_get_num_sessions().

(Currently, this function is only implemented for systemd-logind.
For ConsoleKit, it is equivalent to act_user_get_num_sessions.)</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="222">the number of sessions</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="214">a user</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_object_path" c:identifier="act_user_get_object_path">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1086">Returns the user accounts service object path of @user,
or %NULL if @user doesn't have an object path associated
with it.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="1094">the object path of the user</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1088">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_password_expiration_policy"
              c:identifier="act_user_get_password_expiration_policy">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1271">Get the password expiration policy for a user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1273">the user object to query.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="expiration_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1274">location to write time users password expires</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="last_change_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1275">location to write time users password was last changed.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="min_days_between_changes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1276">location to write minimum number of days needed between password changes.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="max_days_between_changes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1277">location to write maximum number of days password can stay unchanged.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="days_to_warn" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1278">location to write number of days to warn user password is about to expire.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="days_after_expiration_until_lock"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1279">location to write number of days account will be locked after password expires.</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_password_hint"
              c:identifier="act_user_get_password_hint">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="601">Retrieves the password hint set by @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="607">a pointer to an array of characters which must not be modified or
 freed, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="603">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_password_mode"
              c:identifier="act_user_get_password_mode">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="582">Retrieves the password mode of @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="588">a #ActUserPasswordMode</doc>
          <type name="UserPasswordMode" c:type="ActUserPasswordMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="584">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_primary_session_id"
              c:identifier="act_user_get_primary_session_id">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1107">Returns the id of the primary session of @user, or %NULL if @user
has no primary session.  The primary session will always be
graphical and will be chosen from the sessions on the same seat as
the seat of the session of the calling process.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="1116">the id of the primary session of the user</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1109">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_real_name" c:identifier="act_user_get_real_name">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="535">Retrieves the display name of @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="541">a pointer to an array of characters which must not be modified or
 freed, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="537">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_saved" c:identifier="act_user_get_saved">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="879">Returns whether or not the #ActUser account has retained state in accountsservice.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="885">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="881">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_session" c:identifier="act_user_get_session">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1048">Returns the path to the configured session for @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="1054">a path to an icon</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1050">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_session_type" c:identifier="act_user_get_session_type">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1067">Returns the type of the configured session for @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="1073">a path to an icon</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1069">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_shell" c:identifier="act_user_get_shell">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="641">Retrieves the shell assigned to @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="647">a pointer to an array of characters which must not be modified or
 freed, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="643">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uid" c:identifier="act_user_get_uid">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="514">Retrieves the ID of @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="520">a pointer to an array of characters which must not be modified or
 freed, or %NULL.</doc>
          <type name="guint" c:type="uid_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="516">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_name" c:identifier="act_user_get_user_name">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="701">Retrieves the login name of @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="707">a pointer to an array of characters which must not be modified or
 freed, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="703">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_x_session" c:identifier="act_user_get_x_session">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1029">Returns the path to the configured X session for @user.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="1035">a path to an icon</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1031">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_loaded" c:identifier="act_user_is_loaded">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1255">Determines whether or not the user object is loaded and ready to read from.
#ActUserManager:is-loaded property must be %TRUE before calling
act_user_manager_list_users()</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="1263">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1257">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_local_account" c:identifier="act_user_is_local_account">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="956">Retrieves whether the user is a local account or not.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="962">%TRUE if the user is local</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="958">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_logged_in" c:identifier="act_user_is_logged_in">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="846">Returns whether or not #ActUser is currently graphically logged in
on the same seat as the seat of the session of the calling process.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="853">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="848">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_logged_in_anywhere"
              c:identifier="act_user_is_logged_in_anywhere">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="861">Returns whether or not #ActUser is currently logged in in any way
whatsoever.  See also act_user_is_logged_in().

(Currently, this function is only implemented for systemd-logind.
For ConsoleKit, it is equivalent to act_user_is_logged_in.)</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="871">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="863">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_nonexistent" c:identifier="act_user_is_nonexistent">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="975">Retrieves whether the user is nonexistent or not.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="981">%TRUE if the user is nonexistent</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="977">the user object to examine.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_system_account"
              c:identifier="act_user_is_system_account">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="936">Returns whether or not #ActUser represents a 'system account' like
'root' or 'nobody'.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user.c"
               line="943">%TRUE or %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="938">a #ActUser</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_account_type" c:identifier="act_user_set_account_type">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1565">Changes the account type of @user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1567">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="account_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1568">a #ActUserAccountType</doc>
            <type name="UserAccountType" c:type="ActUserAccountType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_automatic_login"
              c:identifier="act_user_set_automatic_login">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1737">If enabled is set to %TRUE then this user will automatically be logged in
at boot up time.  Only one user can be configured to auto login at any given
time, so subsequent calls to act_user_set_automatic_login() override previous
calls.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1739">the user object to alter</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1740">whether or not to autologin for user.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_email" c:identifier="act_user_set_email">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1313">Assigns a new email to @user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1315">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="email" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1316">an email address</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_file" c:identifier="act_user_set_icon_file">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1537">Assigns a new icon for @user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1539">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="icon_file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1540">path to an icon</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_language" c:identifier="act_user_set_language">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1341">Assigns a new locale for @user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1343">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1344">a locale (e.g. en_US.utf8)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_location" c:identifier="act_user_set_location">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1453">Assigns a new location for @user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1455">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1456">a location</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locked" c:identifier="act_user_set_locked">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1713">Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1715">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="locked" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1716">whether or not the account is locked</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password" c:identifier="act_user_set_password">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1622">Changes the password of @user to @password.
@hint is displayed to the user if they forget the password.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1624">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1625">a password</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="hint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1626">a hint to help user recall password</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password_hint"
              c:identifier="act_user_set_password_hint">
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="hint" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password_mode"
              c:identifier="act_user_set_password_mode">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1683">Changes the password of @user.  If @password_mode is
ACT_USER_PASSWORD_MODE_SET_AT_LOGIN then the user will
be asked for a new password at the next login.  If @password_mode
is ACT_USER_PASSWORD_MODE_NONE then the user will not require
a password to log in.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1685">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="password_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1686">a #ActUserPasswordMode</doc>
            <type name="UserPasswordMode" c:type="ActUserPasswordMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_real_name" c:identifier="act_user_set_real_name">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1509">Assigns a new name for @user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1511">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="real_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1512">a new name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_session" c:identifier="act_user_set_session">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1397">Assigns a new session for @user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1399">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1400">a session (e.g. gnome)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_session_type" c:identifier="act_user_set_session_type">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1425">Assigns a type to the session for @user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1427">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="session_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1428">a type of session (e.g. "wayland" or "x11")</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_name" c:identifier="act_user_set_user_name">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1481">Assigns a new username for @user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1483">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="user_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1484">a new user name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_x_session" c:identifier="act_user_set_x_session">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="1369">Assigns a new x session for @user.

Note this function is synchronous and ignores errors.</doc>
        <source-position filename="../src/libaccountsservice/act-user.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1371">the user object to alter.</doc>
            <type name="User" c:type="ActUser*"/>
          </instance-parameter>
          <parameter name="x_session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user.c"
                 line="1372">an x session (e.g. gnome)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="account-type" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="automatic-login" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="email" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="home-directory" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="icon-file" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="is-loaded" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="language" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="local-account" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="location" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="locked" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="login-frequency" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="login-history" transfer-ownership="none">
        <type name="GLib.Variant"/>
      </property>
      <property name="login-time" transfer-ownership="none">
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="nonexistent" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="password-hint" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="password-mode" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="real-name" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="shell" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="system-account" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="uid" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="user-name" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="x-session" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <glib:signal name="changed" when="last">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="443">Emitted when the user accounts changes in some way.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="sessions-changed" when="last">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="456">Emitted when the list of sessions for this user changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <enumeration name="UserAccountType"
                 glib:type-name="ActUserAccountType"
                 glib:get-type="act_user_account_type_get_type"
                 c:type="ActUserAccountType">
      <doc xml:space="preserve"
           filename="../src/libaccountsservice/act-user.c"
           line="52">Type of user account</doc>
      <member name="standard"
              value="0"
              c:identifier="ACT_USER_ACCOUNT_TYPE_STANDARD"
              glib:nick="standard">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="54">Normal non-administrative user</doc>
      </member>
      <member name="administrator"
              value="1"
              c:identifier="ACT_USER_ACCOUNT_TYPE_ADMINISTRATOR"
              glib:nick="administrator">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="55">Administrative user</doc>
      </member>
    </enumeration>
    <record name="UserClass"
            c:type="ActUserClass"
            disguised="1"
            glib:is-gtype-struct-for="User">
      <source-position filename="../src/libaccountsservice/act-user.h"
                       line="50"/>
    </record>
    <class name="UserManager"
           c:symbol-prefix="user_manager"
           c:type="ActUserManager"
           parent="GObject.Object"
           glib:type-name="ActUserManager"
           glib:get-type="act_user_manager_get_type"
           glib:type-struct="UserManagerClass">
      <doc xml:space="preserve"
           filename="../src/libaccountsservice/act-user-manager.c"
           line="70">A user manager object.</doc>
      <source-position filename="../src/libaccountsservice/act-user-manager.h"
                       line="61"/>
      <function name="get_default" c:identifier="act_user_manager_get_default">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3104">Returns the user manager singleton instance.  Calling this function will
automatically being loading the user list if it isn't loaded already.
The #ActUserManager:is-loaded property will be set to %TRUE when the users
are finished loading and then act_user_manager_list_users() can be called.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="3112">user manager object</doc>
          <type name="UserManager" c:type="ActUserManager*"/>
        </return-value>
      </function>
      <virtual-method name="user_added">
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user_manager" transfer-ownership="none">
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="user_changed">
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user_manager" transfer-ownership="none">
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="user_is_logged_in_changed">
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user_manager" transfer-ownership="none">
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="user_removed">
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="user_manager" transfer-ownership="none">
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="user" transfer-ownership="none">
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="activate_user_session"
              c:identifier="act_user_manager_activate_user_session">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="555">Activate the session for a given user.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="562">whether successfully activated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="557">the user manager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="558">the user to activate</doc>
            <type name="User" c:type="ActUser*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cache_user"
              c:identifier="act_user_manager_cache_user"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3294">Caches a user account so it shows up via act_user_manager_list_users().</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="109"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="3302">user object</doc>
          <type name="User" c:type="ActUser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3296">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="username" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3297">a user name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cache_user_async"
              c:identifier="act_user_manager_cache_user_async"
              version="0.6.27">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3333">Asynchronously caches a user account so it shows up via
act_user_manager_list_users().

For more details, see act_user_manager_cache_user(), which
is the synchronous version of this call.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3335">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="username" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3336">a unix user name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3337">optional #GCancellable object,
    %NULL to ignore</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3339">a #GAsyncReadyCallback to call
    when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3341">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="cache_user_finish"
              c:identifier="act_user_manager_cache_user_finish"
              version="0.6.27"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3376">Finishes an asynchronous user caching.

See act_user_manager_cache_user_async().</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="117"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="3386">user object</doc>
          <type name="User" c:type="ActUser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3378">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3379">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_switch" c:identifier="act_user_manager_can_switch">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="520">Check whether the user can switch to another session.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="526">whether we can switch to another session</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="522">the user manager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_user"
              c:identifier="act_user_manager_create_user"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3142">Creates a user account on the system.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="3152">user object</doc>
          <type name="User" c:type="ActUser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3144">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="username" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3145">a unix user name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="fullname" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3146">a unix GECOS value</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="accounttype" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3147">a #ActUserAccountType</doc>
            <type name="UserAccountType" c:type="ActUserAccountType"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_user_async"
              c:identifier="act_user_manager_create_user_async"
              version="0.6.27">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3200">Asynchronously creates a user account on the system.

For more details, see act_user_manager_create_user(), which
is the synchronous version of this call.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3202">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="username" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3203">a unix user name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="fullname" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3204">a unix GECOS value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="accounttype" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3205">a #ActUserAccountType</doc>
            <type name="UserAccountType" c:type="ActUserAccountType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3206">optional #GCancellable object,
    %NULL to ignore</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3208">a #GAsyncReadyCallback to call
    when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3210">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_user_finish"
              c:identifier="act_user_manager_create_user_finish"
              version="0.6.27"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3251">Finishes an asynchronous user creation.

See act_user_manager_create_user_async().</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="105"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="3261">user object</doc>
          <type name="User" c:type="ActUser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3253">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3254">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_user"
              c:identifier="act_user_manager_delete_user"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3541">Deletes a user account on the system.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="3550">%TRUE if the user account was successfully deleted</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3543">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3544">an #ActUser object</doc>
            <type name="User" c:type="ActUser*"/>
          </parameter>
          <parameter name="remove_files" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3545">%TRUE to delete the users home directory</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_user_async"
              c:identifier="act_user_manager_delete_user_async"
              version="0.6.27">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3579">Asynchronously deletes a user account from the system.

For more details, see act_user_manager_delete_user(), which
is the synchronous version of this call.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3581">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3582">a #ActUser object</doc>
            <type name="User" c:type="ActUser*"/>
          </parameter>
          <parameter name="remove_files" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3583">%TRUE to delete the users home directory</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3584">optional #GCancellable object,
    %NULL to ignore</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3586">a #GAsyncReadyCallback to call
    when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3588">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_user_finish"
              c:identifier="act_user_manager_delete_user_finish"
              version="0.6.27"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3624">Finishes an asynchronous user account deletion.

See act_user_manager_delete_user_async().</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="3634">%TRUE if the user account was successfully deleted</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3626">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3627">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_user" c:identifier="act_user_manager_get_user">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="2373">Retrieves a pointer to the #ActUser object for the login @username
from @manager. Trying to use this object before its
#ActUser:is-loaded property is %TRUE will result in undefined
behavior.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="2383">#ActUser object</doc>
          <type name="User" c:type="ActUser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="2375">the manager to query.</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="username" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="2376">the login name of the user to get.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_user_by_id"
              c:identifier="act_user_manager_get_user_by_id">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="2449">Retrieves a pointer to the #ActUser object for the user with the
given uid from @manager. Trying to use this object before its
#ActUser:is-loaded property is %TRUE will result in undefined
behavior.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="2459">#ActUser object</doc>
          <type name="User" c:type="ActUser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="2451">the manager to query.</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="2452">the uid of the user to get.</doc>
            <type name="guint" c:type="uid_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="goto_login_session"
              c:identifier="act_user_manager_goto_login_session">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="451">Switch the display to the login manager.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="457">whether successful or not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="453">the user manager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_users" c:identifier="act_user_manager_list_users">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="2498">Get a list of system user accounts</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="80"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="2504">List of #ActUser objects</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="User"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="2500">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="no_service" c:identifier="act_user_manager_no_service">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3127">Check whether or not the accounts service is running.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="3133">whether or not accounts service is running</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3129">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="uncache_user"
              c:identifier="act_user_manager_uncache_user"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3419">Releases all metadata about a user account, including icon,
language and session. If the user account is from a remote
server and the user has never logged in before, then that
account will no longer show up in ListCachedUsers() output.</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="3430">%TRUE if successful, otherwise %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3421">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="username" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3422">a user name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="uncache_user_async"
              c:identifier="act_user_manager_uncache_user_async">
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="username" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="uncache_user_finish"
              c:identifier="act_user_manager_uncache_user_finish"
              version="0.6.39"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="3501">Finishes an asynchronous user uncaching.

See act_user_manager_uncache_user_async().</doc>
        <source-position filename="../src/libaccountsservice/act-user-manager.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/libaccountsservice/act-user-manager.c"
               line="3511">%TRUE if the user account was successfully uncached</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3503">a #ActUserManager</doc>
            <type name="UserManager" c:type="ActUserManager*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="3504">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="exclude-usernames-list"
                writable="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="has-multiple-users"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="include-usernames-list"
                writable="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="is-loaded" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="deprecated" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <glib:signal name="user-added" when="last">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="2849">Emitted when a user is added to the user manager.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="2852">the #ActUser that was added</doc>
            <type name="User"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="user-changed" when="last">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="2894">One of the users has changed</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="2897">the #ActUser that changed</doc>
            <type name="User"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="user-is-logged-in-changed" when="last">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="2879">One of the users has logged in or out.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="2882">the #ActUser that changed login status</doc>
            <type name="User"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="user-removed" when="last">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="2864">Emitted when a user is removed from the user manager.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/libaccountsservice/act-user-manager.c"
                 line="2867">the #ActUser that was removed</doc>
            <type name="User"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="UserManagerClass"
            c:type="ActUserManagerClass"
            glib:is-gtype-struct-for="UserManager">
      <source-position filename="../src/libaccountsservice/act-user-manager.h"
                       line="61"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="user_added">
        <callback name="user_added">
          <source-position filename="../src/libaccountsservice/act-user-manager.h"
                           line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="user_manager" transfer-ownership="none">
              <type name="UserManager" c:type="ActUserManager*"/>
            </parameter>
            <parameter name="user" transfer-ownership="none">
              <type name="User" c:type="ActUser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="user_removed">
        <callback name="user_removed">
          <source-position filename="../src/libaccountsservice/act-user-manager.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="user_manager" transfer-ownership="none">
              <type name="UserManager" c:type="ActUserManager*"/>
            </parameter>
            <parameter name="user" transfer-ownership="none">
              <type name="User" c:type="ActUser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="user_is_logged_in_changed">
        <callback name="user_is_logged_in_changed">
          <source-position filename="../src/libaccountsservice/act-user-manager.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="user_manager" transfer-ownership="none">
              <type name="UserManager" c:type="ActUserManager*"/>
            </parameter>
            <parameter name="user" transfer-ownership="none">
              <type name="User" c:type="ActUser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="user_changed">
        <callback name="user_changed">
          <source-position filename="../src/libaccountsservice/act-user-manager.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="user_manager" transfer-ownership="none">
              <type name="UserManager" c:type="ActUserManager*"/>
            </parameter>
            <parameter name="user" transfer-ownership="none">
              <type name="User" c:type="ActUser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="UserManagerError"
                 glib:type-name="ActUserManagerError"
                 glib:get-type="act_user_manager_error_get_type"
                 c:type="ActUserManagerError"
                 glib:error-domain="act_user_manager_error">
      <doc xml:space="preserve"
           filename="../src/libaccountsservice/act-user-manager.c"
           line="82">Various error codes returned by the accounts service.</doc>
      <member name="failed"
              value="0"
              c:identifier="ACT_USER_MANAGER_ERROR_FAILED"
              glib:nick="failed">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="84">Generic failure</doc>
      </member>
      <member name="user_exists"
              value="1"
              c:identifier="ACT_USER_MANAGER_ERROR_USER_EXISTS"
              glib:nick="user-exists">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="85">The user already exists</doc>
      </member>
      <member name="user_does_not_exist"
              value="2"
              c:identifier="ACT_USER_MANAGER_ERROR_USER_DOES_NOT_EXIST"
              glib:nick="user-does-not-exist">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="86">The user does not exist</doc>
      </member>
      <member name="permission_denied"
              value="3"
              c:identifier="ACT_USER_MANAGER_ERROR_PERMISSION_DENIED"
              glib:nick="permission-denied">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="87">Permission denied</doc>
      </member>
      <member name="not_supported"
              value="4"
              c:identifier="ACT_USER_MANAGER_ERROR_NOT_SUPPORTED"
              glib:nick="not-supported">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user-manager.c"
             line="88">Operation not supported</doc>
      </member>
      <function name="quark" c:identifier="act_user_manager_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <enumeration name="UserPasswordMode"
                 glib:type-name="ActUserPasswordMode"
                 glib:get-type="act_user_password_mode_get_type"
                 c:type="ActUserPasswordMode">
      <doc xml:space="preserve"
           filename="../src/libaccountsservice/act-user.c"
           line="60">Mode for setting the user's password.</doc>
      <member name="regular"
              value="0"
              c:identifier="ACT_USER_PASSWORD_MODE_REGULAR"
              glib:nick="regular">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="62">Password set normally</doc>
      </member>
      <member name="set_at_login"
              value="1"
              c:identifier="ACT_USER_PASSWORD_MODE_SET_AT_LOGIN"
              glib:nick="set-at-login">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="63">Password will be chosen at next login</doc>
      </member>
      <member name="none"
              value="2"
              c:identifier="ACT_USER_PASSWORD_MODE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../src/libaccountsservice/act-user.c"
             line="64">No password set</doc>
      </member>
    </enumeration>
    <function name="user_manager_error_quark"
              c:identifier="act_user_manager_error_quark"
              moved-to="UserManagerError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
