<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <package name="libvirt-glib-1.0"/>
  <c:include name="libvirt-glib/libvirt-glib.h"/>
  <namespace name="LibvirtGLib"
             version="1.0"
             shared-library="libvirt-glib-1.0.so.0"
             c:identifier-prefixes="GVir"
             c:symbol-prefixes="gvir">
    <function name="error_new"
              c:identifier="gvir_error_new"
              introspectable="0">
      <doc xml:whitespace="preserve">Creates a new #GError with the given @domain and @code,
and a message formatted with @format.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">a new #GError</doc>
        <type name="GLib.Error" c:type="GError*"/>
      </return-value>
      <parameters>
        <parameter name="domain" transfer-ownership="none">
          <doc xml:whitespace="preserve">error domain</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <doc xml:whitespace="preserve">error code</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:whitespace="preserve">printf()-style format for error message</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="error_new_literal"
              c:identifier="gvir_error_new_literal"
              introspectable="0">
      <doc xml:whitespace="preserve">Creates a new #GError; unlike gvir_error_new(), @message is
not a printf()-style format string. Use this function if
@message contains text you don't have control over,
that could include printf() escape sequences.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">a new #GError</doc>
        <type name="GLib.Error" c:type="GError*"/>
      </return-value>
      <parameters>
        <parameter name="domain" transfer-ownership="none">
          <doc xml:whitespace="preserve">error domain</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <doc xml:whitespace="preserve">error code</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:whitespace="preserve">error message</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_new_valist"
              c:identifier="gvir_error_new_valist"
              introspectable="0">
      <doc xml:whitespace="preserve">Creates a new #GError with the given @domain and @code,
and a message formatted with @format.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">a new #GError</doc>
        <type name="GLib.Error" c:type="GError*"/>
      </return-value>
      <parameters>
        <parameter name="domain" transfer-ownership="none">
          <doc xml:whitespace="preserve">error domain</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <doc xml:whitespace="preserve">error code</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:whitespace="preserve">printf()-style format for error message</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="args" transfer-ownership="none">
          <doc xml:whitespace="preserve">#va_list of parameters for the message format</doc>
          <type name="va_list" c:type="va_list"/>
        </parameter>
      </parameters>
    </function>
    <function name="event_register" c:identifier="gvir_event_register">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="init" c:identifier="gvir_init">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="argc" transfer-ownership="none">
          <type name="gint" c:type="int*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <type name="utf8" c:type="char***"/>
        </parameter>
      </parameters>
    </function>
    <function name="init_check" c:identifier="gvir_init_check" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="argc" transfer-ownership="none">
          <type name="gint" c:type="int*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <type name="utf8" c:type="char***"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_error"
              c:identifier="gvir_set_error"
              introspectable="0">
      <doc xml:whitespace="preserve">If @error is NULL this does nothing. Otherwise it
creates a new #GError with the given @domain and @code,
and a message formatted with @format, and stores it
in @error.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <doc xml:whitespace="preserve">pointer to error location</doc>
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <doc xml:whitespace="preserve">error domain</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <doc xml:whitespace="preserve">error code</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:whitespace="preserve">printf()-style format for error message</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="set_error_literal"
              c:identifier="gvir_set_error_literal"
              introspectable="0">
      <doc xml:whitespace="preserve">If @error is NULL this does nothing. Otherwise it
creates a new #GError and stores it in @error; unlike
gvir_set_error(), @message is not a printf()-style
format string. Use this function if @message contains
text you don't have control over, that could include
printf() escape sequences.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <doc xml:whitespace="preserve">pointer to error location</doc>
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <doc xml:whitespace="preserve">error domain</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <doc xml:whitespace="preserve">error code</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:whitespace="preserve">error message</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_error_valist"
              c:identifier="gvir_set_error_valist"
              introspectable="0">
      <doc xml:whitespace="preserve">If @error is NULL this does nothing. Otherwise it
creates a new #GError with the given @domain and @code,
and a message formatted with @format, and stores it
in @error.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <doc xml:whitespace="preserve">pointer to error location</doc>
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <doc xml:whitespace="preserve">error domain</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <doc xml:whitespace="preserve">error code</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:whitespace="preserve">printf()-style format for error message</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="args" transfer-ownership="none">
          <doc xml:whitespace="preserve">#va_list of parameters for the message format</doc>
          <type name="va_list" c:type="va_list"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
