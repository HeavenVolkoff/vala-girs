<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gst" version="1.0"/>
  <include name="GstBase" version="1.0"/>
  <include name="GstVideo" version="1.0"/>
  <package name="gstreamer-vulkan-1.0"/>
  <c:include name="gst/vulkan/vulkan.h"/>
  <namespace name="GstVulkan"
             version="1.0"
             shared-library="libgstvulkan-1.0.so.0"
             c:identifier-prefixes="Gst"
             c:symbol-prefixes="gst">
    <constant name="CAPS_FEATURE_MEMORY_VULKAN_BUFFER"
              value="memory:VulkanBuffer"
              c:type="GST_CAPS_FEATURE_MEMORY_VULKAN_BUFFER">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="CAPS_FEATURE_MEMORY_VULKAN_IMAGE"
              value="memory:VulkanImage"
              c:type="GST_CAPS_FEATURE_MEMORY_VULKAN_IMAGE">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="IS_VULKAN_BUFFER_MEMORY_ALLOCATOR"
                    c:identifier="GST_IS_VULKAN_BUFFER_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_BUFFER_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_IS_VULKAN_BUFFER_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_BUFFER_POOL"
                    c:identifier="GST_IS_VULKAN_BUFFER_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_COMMAND_POOL"
                    c:identifier="GST_IS_VULKAN_COMMAND_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="29"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_COMMAND_POOL_CLASS"
                    c:identifier="GST_IS_VULKAN_COMMAND_POOL_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="30"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DEVICE"
                    c:identifier="GST_IS_VULKAN_DEVICE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DEVICE_CLASS"
                    c:identifier="GST_IS_VULKAN_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DISPLAY"
                    c:identifier="GST_IS_VULKAN_DISPLAY"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DISPLAY_CLASS"
                    c:identifier="GST_IS_VULKAN_DISPLAY_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_IMAGE_BUFFER_POOL"
                    c:identifier="GST_IS_VULKAN_IMAGE_BUFFER_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_IMAGE_MEMORY_ALLOCATOR"
                    c:identifier="GST_IS_VULKAN_IMAGE_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_IMAGE_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_IS_VULKAN_IMAGE_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_INSTANCE"
                    c:identifier="GST_IS_VULKAN_INSTANCE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_INSTANCE_CLASS"
                    c:identifier="GST_IS_VULKAN_INSTANCE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_MEMORY_ALLOCATOR"
                    c:identifier="GST_IS_VULKAN_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_IS_VULKAN_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_QUEUE"
                    c:identifier="GST_IS_VULKAN_QUEUE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="30"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_QUEUE_CLASS"
                    c:identifier="GST_IS_VULKAN_QUEUE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="31"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_SWAPPER"
                    c:identifier="GST_IS_VULKAN_SWAPPER"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_SWAPPER_CLASS"
                    c:identifier="GST_IS_VULKAN_SWAPPER_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_TRASH_LIST"
                    c:identifier="GST_IS_VULKAN_TRASH_LIST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="129"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_TRASH_LIST_CLASS"
                    c:identifier="GST_IS_VULKAN_TRASH_LIST_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="130"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_WINDOW"
                    c:identifier="GST_IS_VULKAN_WINDOW"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_WINDOW_CLASS"
                    c:identifier="GST_IS_VULKAN_WINDOW_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_BUFFER_MEMORY_ALLOCATOR"
                    c:identifier="GST_VULKAN_BUFFER_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_BUFFER_MEMORY_ALLOCATOR_CAST"
                    c:identifier="GST_VULKAN_BUFFER_MEMORY_ALLOCATOR_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_BUFFER_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_VULKAN_BUFFER_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_BUFFER_MEMORY_ALLOCATOR_GET_CLASS"
                    c:identifier="GST_VULKAN_BUFFER_MEMORY_ALLOCATOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_BUFFER_MEMORY_ALLOCATOR_NAME"
              value="VulkanBuffer"
              c:type="GST_VULKAN_BUFFER_MEMORY_ALLOCATOR_NAME">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_BUFFER_POOL"
                    c:identifier="GST_VULKAN_BUFFER_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_BUFFER_POOL_CAST"
                    c:identifier="GST_VULKAN_BUFFER_POOL_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_COMMAND_POOL"
                    c:identifier="GST_VULKAN_COMMAND_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="27"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_COMMAND_POOL_CLASS"
                    c:identifier="GST_VULKAN_COMMAND_POOL_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="28"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_COMMAND_POOL_GET_CLASS"
                    c:identifier="GST_VULKAN_COMMAND_POOL_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DEVICE"
                    c:identifier="GST_VULKAN_DEVICE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="30"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DEVICE_CLASS"
                    c:identifier="GST_VULKAN_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="31"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_DEVICE_CONTEXT_TYPE_STR"
              value="gst.vulkan.device"
              c:type="GST_VULKAN_DEVICE_CONTEXT_TYPE_STR">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_DEVICE_GET_CLASS"
                    c:identifier="GST_VULKAN_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DISPLAY"
                    c:identifier="GST_VULKAN_DISPLAY"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DISPLAY_CAST"
                    c:identifier="GST_VULKAN_DISPLAY_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DISPLAY_CLASS"
                    c:identifier="GST_VULKAN_DISPLAY_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_DISPLAY_CONTEXT_TYPE_STR"
              value="gst.vulkan.display"
              c:type="GST_VULKAN_DISPLAY_CONTEXT_TYPE_STR">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_DISPLAY_GET_CLASS"
                    c:identifier="GST_VULKAN_DISPLAY_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="37"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_FENCE_CAST"
                    c:identifier="GST_VULKAN_FENCE_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="32"/>
      <parameters>
        <parameter name="f">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_FENCE_FENCE"
                    c:identifier="GST_VULKAN_FENCE_FENCE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="33"/>
      <parameters>
        <parameter name="f">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_BUFFER_POOL"
                    c:identifier="GST_VULKAN_IMAGE_BUFFER_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_BUFFER_POOL_CAST"
                    c:identifier="GST_VULKAN_IMAGE_BUFFER_POOL_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_MEMORY_ALLOCATOR"
                    c:identifier="GST_VULKAN_IMAGE_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_MEMORY_ALLOCATOR_CAST"
                    c:identifier="GST_VULKAN_IMAGE_MEMORY_ALLOCATOR_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_VULKAN_IMAGE_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_MEMORY_ALLOCATOR_GET_CLASS"
                    c:identifier="GST_VULKAN_IMAGE_MEMORY_ALLOCATOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_IMAGE_MEMORY_ALLOCATOR_NAME"
              value="VulkanImage"
              c:type="GST_VULKAN_IMAGE_MEMORY_ALLOCATOR_NAME">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_INSTANCE"
                    c:identifier="GST_VULKAN_INSTANCE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="29"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_INSTANCE_CLASS"
                    c:identifier="GST_VULKAN_INSTANCE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="30"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_INSTANCE_CONTEXT_TYPE_STR"
              value="gst.vulkan.instance"
              c:type="GST_VULKAN_INSTANCE_CONTEXT_TYPE_STR">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_INSTANCE_GET_CLASS"
                    c:identifier="GST_VULKAN_INSTANCE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_MAX_COMPONENTS"
              value="4"
              c:type="GST_VULKAN_MAX_COMPONENTS">
      <source-position filename="../gst-libs/gst/vulkan/gstvkformat.h"
                       line="30"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="VULKAN_MEMORY_ALLOCATOR"
                    c:identifier="GST_VULKAN_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_MEMORY_ALLOCATOR_CAST"
                    c:identifier="GST_VULKAN_MEMORY_ALLOCATOR_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_VULKAN_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_MEMORY_ALLOCATOR_GET_CLASS"
                    c:identifier="GST_VULKAN_MEMORY_ALLOCATOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_MEMORY_ALLOCATOR_NAME"
              value="Vulkan"
              c:type="GST_VULKAN_MEMORY_ALLOCATOR_NAME">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_QUEUE"
                    c:identifier="GST_VULKAN_QUEUE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="28"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_QUEUE_CLASS"
                    c:identifier="GST_VULKAN_QUEUE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="29"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_QUEUE_CONTEXT_TYPE_STR"
              value="gst.vulkan.queue"
              c:type="GST_VULKAN_QUEUE_CONTEXT_TYPE_STR">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_QUEUE_GET_CLASS"
                    c:identifier="GST_VULKAN_QUEUE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_SWAPPER"
                    c:identifier="GST_VULKAN_SWAPPER"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_SWAPPER_CLASS"
                    c:identifier="GST_VULKAN_SWAPPER_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_SWAPPER_GET_CLASS"
                    c:identifier="GST_VULKAN_SWAPPER_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_SWAPPER_VIDEO_FORMATS"
              value=" { RGBA, BGRA, RGB, BGR } "
              c:type="GST_VULKAN_SWAPPER_VIDEO_FORMATS">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_TRASH_LIST"
                    c:identifier="GST_VULKAN_TRASH_LIST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="126"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_TRASH_LIST_CLASS"
                    c:identifier="GST_VULKAN_TRASH_LIST_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="127"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_TRASH_LIST_GET_CLASS"
                    c:identifier="GST_VULKAN_TRASH_LIST_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="128"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW"
                    c:identifier="GST_VULKAN_WINDOW"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW_CLASS"
                    c:identifier="GST_VULKAN_WINDOW_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW_GET_CLASS"
                    c:identifier="GST_VULKAN_WINDOW_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW_GET_LOCK"
                    c:identifier="GST_VULKAN_WINDOW_GET_LOCK"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="41"/>
      <parameters>
        <parameter name="w">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW_LOCK"
                    c:identifier="GST_VULKAN_WINDOW_LOCK"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="39"/>
      <parameters>
        <parameter name="w">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW_UNLOCK"
                    c:identifier="GST_VULKAN_WINDOW_UNLOCK"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="40"/>
      <parameters>
        <parameter name="w">
        </parameter>
      </parameters>
    </function-macro>
    <record name="VulkanBarrierBufferInfo" c:type="GstVulkanBarrierBufferInfo">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="54"/>
      <field name="parent" writable="1">
        <type name="VulkanBarrierMemoryInfo"
              c:type="GstVulkanBarrierMemoryInfo"/>
      </field>
      <field name="offset" introspectable="0" writable="1">
        <type c:type="VkDeviceSize"/>
      </field>
      <field name="size" introspectable="0" writable="1">
        <type c:type="VkDeviceSize"/>
      </field>
    </record>
    <enumeration name="VulkanBarrierFlags"
                 glib:type-name="GstVulkanBarrierFlags"
                 glib:get-type="gst_vulkan_barrier_flags_get_type"
                 c:type="GstVulkanBarrierFlags">
      <member name="none"
              value="0"
              c:identifier="GST_VULKAN_BARRIER_FLAG_NONE"
              glib:nick="none">
      </member>
    </enumeration>
    <record name="VulkanBarrierImageInfo" c:type="GstVulkanBarrierImageInfo">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="52"/>
      <field name="parent" writable="1">
        <type name="VulkanBarrierMemoryInfo"
              c:type="GstVulkanBarrierMemoryInfo"/>
      </field>
      <field name="image_layout" introspectable="0" writable="1">
        <type c:type="VkImageLayout"/>
      </field>
      <field name="subresource_range" introspectable="0" writable="1">
        <type c:type="VkImageSubresourceRange"/>
      </field>
    </record>
    <record name="VulkanBarrierMemoryInfo" c:type="GstVulkanBarrierMemoryInfo">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbarrier.h"
                       line="49"/>
      <field name="type" writable="1">
        <type name="VulkanBarrierType" c:type="GstVulkanBarrierType"/>
      </field>
      <field name="flags" writable="1">
        <type name="VulkanBarrierFlags" c:type="GstVulkanBarrierFlags"/>
      </field>
      <field name="queue" writable="1">
        <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
      </field>
      <field name="pipeline_stages" introspectable="0" writable="1">
        <type c:type="VkPipelineStageFlags"/>
      </field>
      <field name="access_flags" introspectable="0" writable="1">
        <type c:type="VkAccessFlags"/>
      </field>
    </record>
    <enumeration name="VulkanBarrierType"
                 glib:type-name="GstVulkanBarrierType"
                 glib:get-type="gst_vulkan_barrier_type_get_type"
                 c:type="GstVulkanBarrierType">
      <member name="none"
              value="0"
              c:identifier="GST_VULKAN_BARRIER_NONE"
              glib:nick="none">
      </member>
      <member name="type_memory"
              value="1"
              c:identifier="GST_VULKAN_BARRIER_TYPE_MEMORY"
              glib:nick="type-memory">
      </member>
      <member name="type_buffer"
              value="2"
              c:identifier="GST_VULKAN_BARRIER_TYPE_BUFFER"
              glib:nick="type-buffer">
      </member>
      <member name="type_image"
              value="3"
              c:identifier="GST_VULKAN_BARRIER_TYPE_IMAGE"
              glib:nick="type-image">
      </member>
    </enumeration>
    <record name="VulkanBufferMemory" c:type="GstVulkanBufferMemory">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="75"/>
      <field name="parent" writable="1">
        <type name="Gst.Memory" c:type="GstMemory"/>
      </field>
      <field name="device" writable="1">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="buffer" introspectable="0" writable="1">
        <type c:type="VkBuffer"/>
      </field>
      <field name="view" introspectable="0" writable="1">
        <type c:type="VkBufferView"/>
      </field>
      <field name="vk_mem" writable="1">
        <type name="VulkanMemory" c:type="GstVulkanMemory*"/>
      </field>
      <field name="requirements" introspectable="0" writable="1">
        <type c:type="VkMemoryRequirements"/>
      </field>
      <field name="usage" introspectable="0" writable="1">
        <type c:type="VkBufferUsageFlags"/>
      </field>
      <field name="barrier" writable="1">
        <type name="VulkanBarrierBufferInfo"
              c:type="GstVulkanBarrierBufferInfo"/>
      </field>
      <field name="lock" writable="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <field name="wrapped" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="notify" writable="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="user_data" writable="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <function name="alloc"
                c:identifier="gst_vulkan_buffer_memory_alloc"
                version="1.18"
                introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
             line="339">Allocate a new #GstVulkanBufferMemory.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                         line="103"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="349">a #GstMemory object backed by a vulkan buffer
         backed by vulkan device memory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="341">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="342">the format for the buffer</doc>
            <type c:type="VkFormat"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="343">size of the new buffer</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="usage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="344">buffer usage flags</doc>
            <type c:type="VkBufferUsageFlags"/>
          </parameter>
          <parameter name="mem_prop_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="345">memory properties flags for the backing memory</doc>
            <type c:type="VkMemoryPropertyFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="init_once"
                c:identifier="gst_vulkan_buffer_memory_init_once"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
             line="423">Initializes the Vulkan buffer memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanBufferMemory operation.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="wrapped"
                c:identifier="gst_vulkan_buffer_memory_wrapped"
                version="1.18"
                introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
             line="366">Allocated a new wrapped #GstVulkanBufferMemory with @buffer.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                         line="110"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="377">a #GstMemory object backed by a vulkan device memory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="368">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="369">a #VkBuffer</doc>
            <type c:type="VkBuffer"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="370">the #VkFormat of @buffer</doc>
            <type c:type="VkFormat"/>
          </parameter>
          <parameter name="usage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="371">usage flags of @buffer</doc>
            <type c:type="VkBufferUsageFlags"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="372">user data to call @notify with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="373">a #GDestroyNotify called when @buffer is no longer in use</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="VulkanBufferMemoryAllocator"
           c:symbol-prefix="vulkan_buffer_memory_allocator"
           c:type="GstVulkanBufferMemoryAllocator"
           parent="Gst.Allocator"
           glib:type-name="GstVulkanBufferMemoryAllocator"
           glib:get-type="gst_vulkan_buffer_memory_allocator_get_type"
           glib:type-struct="VulkanBufferMemoryAllocatorClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
           line="77">Opaque #GstVulkanBufferMemoryAllocator struct</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="95"/>
      <field name="parent">
        <type name="Gst.Allocator" c:type="GstAllocator"/>
      </field>
    </class>
    <record name="VulkanBufferMemoryAllocatorClass"
            c:type="GstVulkanBufferMemoryAllocatorClass"
            glib:is-gtype-struct-for="VulkanBufferMemoryAllocator">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
           line="87">The #GstVulkanBufferMemoryAllocatorClass only contains private data</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="95"/>
      <field name="parent_class">
        <type name="Gst.AllocatorClass" c:type="GstAllocatorClass"/>
      </field>
    </record>
    <class name="VulkanBufferPool"
           c:symbol-prefix="vulkan_buffer_pool"
           c:type="GstVulkanBufferPool"
           parent="Gst.BufferPool"
           glib:type-name="GstVulkanBufferPool"
           glib:get-type="gst_vulkan_buffer_pool_get_type"
           glib:type-struct="VulkanBufferPoolClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
           line="39">Opaque GstVulkanBufferPool struct</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                       line="61"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_buffer_pool_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                         line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbufferpool.c"
               line="196">a #GstBufferPool that allocates buffers with #GstGLMemory</doc>
          <type name="Gst.BufferPool" c:type="GstBufferPool*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbufferpool.c"
                 line="194">the #GstVulkanDevice to use</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="bufferpool">
        <type name="Gst.BufferPool" c:type="GstBufferPool"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="priv">
        <type name="VulkanBufferPoolPrivate"
              c:type="GstVulkanBufferPoolPrivate*"/>
      </field>
    </class>
    <record name="VulkanBufferPoolClass"
            c:type="GstVulkanBufferPoolClass"
            glib:is-gtype-struct-for="VulkanBufferPool">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
           line="53">The #GstVulkanBufferPoolClass structure contains only private data</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                       line="61"/>
      <field name="parent_class">
        <type name="Gst.BufferPoolClass" c:type="GstBufferPoolClass"/>
      </field>
    </record>
    <record name="VulkanBufferPoolPrivate"
            c:type="GstVulkanBufferPoolPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="63"/>
    </record>
    <class name="VulkanCommandPool"
           c:symbol-prefix="vulkan_command_pool"
           c:type="GstVulkanCommandPool"
           parent="Gst.Object"
           glib:type-name="GstVulkanCommandPool"
           glib:get-type="gst_vulkan_command_pool_get_type"
           glib:type-struct="VulkanCommandPoolClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="47"/>
      <method name="create"
              c:identifier="gst_vulkan_command_pool_create"
              version="1.18"
              introspectable="0"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                         line="53"/>
        <return-value>
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
               line="94">a new primary VkCommandBuffer</doc>
          <type c:type="VkCommandBuffer"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
                 line="91">a #GstVulkanCommandPool</doc>
            <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_queue"
              c:identifier="gst_vulkan_command_pool_get_queue"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                         line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
               line="77">the parent #GstVulkanQueue for this command pool</doc>
          <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
                 line="75">a #GstVulkanCommandPool</doc>
            <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="queue">
        <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
      </field>
      <field name="pool" introspectable="0">
        <type c:type="VkCommandPool"/>
      </field>
    </class>
    <record name="VulkanCommandPoolClass"
            c:type="GstVulkanCommandPoolClass"
            glib:is-gtype-struct-for="VulkanCommandPool">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="47"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="VulkanCommandPoolPrivate"
            c:type="GstVulkanCommandPoolPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="41"/>
    </record>
    <class name="VulkanDevice"
           c:symbol-prefix="vulkan_device"
           c:type="GstVulkanDevice"
           parent="Gst.Object"
           glib:type-name="GstVulkanDevice"
           glib:get-type="gst_vulkan_device_get_type"
           glib:type-struct="VulkanDeviceClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="66"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_device_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="77">a new #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </return-value>
        <parameters>
          <parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="75">the parent #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="handle_context_query"
                c:identifier="gst_vulkan_device_handle_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="560">If a #GstVulkanDevice is requested in @query, sets @device as the reply.

Intended for use with element query handlers to respond to #GST_QUERY_CONTEXT
for a #GstVulkanDevice.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="571">whether @query was responded to with @device</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="562">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="563">a #GstQuery of type #GST_QUERY_CONTEXT</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="564">the #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice**"/>
          </parameter>
        </parameters>
      </function>
      <function name="run_context_query"
                c:identifier="gst_vulkan_device_run_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="608">Attempt to retrieve a #GstVulkanDevice using #GST_QUERY_CONTEXT from the
surrounding elements of @element.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="616">whether @device contains a valid #GstVulkanDevice</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="610">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="device"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="611">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice**"/>
          </parameter>
        </parameters>
      </function>
      <method name="foreach_queue"
              c:identifier="gst_vulkan_device_foreach_queue"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="413">Iterate over each queue family available on #GstVulkanDevice</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="415">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="416">a #GstVulkanDeviceForEachQueueFunc to run for each #GstVulkanQueue</doc>
            <type name="VulkanDeviceForEachQueueFunc"
                  c:type="GstVulkanDeviceForEachQueueFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="0">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="417">user data to pass to each call of @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_instance"
              c:identifier="gst_vulkan_device_get_instance"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="472">the #GstVulkanInstance used to create this @device</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="470">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_physical_device"
              c:identifier="gst_vulkan_device_get_physical_device"
              version="1.18"
              introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="88"/>
        <return-value>
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="488">The VkPhysicalDevice used to create @device</doc>
          <type c:type="VkPhysicalDevice"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="486">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proc_address"
              c:identifier="gst_vulkan_device_get_proc_address"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="444">Performs vkGetDeviceProcAddr() with @device and @name</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="77"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="451">the function pointer for @name or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="446">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="447">name of the function to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_queue"
              c:identifier="gst_vulkan_device_get_queue"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="84"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="386">a new #GstVulkanQueue</doc>
          <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="382">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
          <parameter name="queue_family" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="383">a queue family to retrieve</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="queue_i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="384">index of the family to retrieve</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="gst_vulkan_device_open"
              version="1.18"
              throws="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="218">Attempts to create the internal #VkDevice object.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="225">whether a vulkan device could be created</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="220">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="instance"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="VulkanInstance"/>
      </property>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="instance">
        <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
      </field>
      <field name="device_index">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="device" introspectable="0">
        <type c:type="VkDevice"/>
      </field>
      <field name="gpu_props" introspectable="0">
        <type c:type="VkPhysicalDeviceProperties"/>
      </field>
      <field name="gpu_features" introspectable="0">
        <type c:type="VkPhysicalDeviceFeatures"/>
      </field>
      <field name="memory_properties" introspectable="0">
        <type c:type="VkPhysicalDeviceMemoryProperties"/>
      </field>
      <field name="queue_family_props" introspectable="0">
        <type c:type="VkQueueFamilyProperties*"/>
      </field>
      <field name="n_queue_families">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="queue_family_id">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="n_queues">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="priv">
        <type name="VulkanDevicePrivate" c:type="GstVulkanDevicePrivate*"/>
      </field>
    </class>
    <record name="VulkanDeviceClass"
            c:type="GstVulkanDeviceClass"
            glib:is-gtype-struct-for="VulkanDevice">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="66"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <callback name="VulkanDeviceForEachQueueFunc"
              c:type="GstVulkanDeviceForEachQueueFunc">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="40"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="queue" transfer-ownership="none">
          <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="VulkanDevicePrivate"
            c:type="GstVulkanDevicePrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="34"/>
    </record>
    <class name="VulkanDisplay"
           c:symbol-prefix="vulkan_display"
           c:type="GstVulkanDisplay"
           parent="Gst.Object"
           glib:type-name="GstVulkanDisplay"
           glib:get-type="gst_vulkan_display_get_type"
           glib:type-struct="VulkanDisplayClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
           line="68">The contents of a #GstVulkanDisplay are private and should only be accessed
through the provided API</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="99"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_display_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="215">a new #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
        </return-value>
        <parameters>
          <parameter name="instance" transfer-ownership="none">
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_type"
                   c:identifier="gst_vulkan_display_new_with_type"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="104"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="182">a new #GstVulkanDisplay or %NULL if e.g. @type is
unsupported</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
        </return-value>
        <parameters>
          <parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="179">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="180">the #GstVulkanDisplayType to create</doc>
            <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="choose_type"
                c:identifier="gst_vulkan_display_choose_type"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="433">This function will read the %GST_VULKAN_WINDOW environment variable for
a user choice or choose the first supported implementation.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="440">the default #GstVulkanDisplayType #GstVulkanInstance will choose
         on creation</doc>
          <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
        </return-value>
        <parameters>
          <parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="435">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
        </parameters>
      </function>
      <function name="handle_context_query"
                c:identifier="gst_vulkan_display_handle_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="539">If a #GstVulkanDisplay is requested in @query, sets @device as the reply.

Intended for use with element query handlers to respond to #GST_QUERY_CONTEXT
for a #GstVulkanDisplay.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="550">whether @query was responded to with @display</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="541">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="542">a #GstQuery of type #GST_QUERY_CONTEXT</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="543">the #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
          </parameter>
        </parameters>
      </function>
      <function name="run_context_query"
                c:identifier="gst_vulkan_display_run_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="587">Attempt to retrieve a #GstVulkanDisplay using #GST_QUERY_CONTEXT from the
surrounding elements of @element.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="595">whether @display contains a valid #GstVulkanDisplay</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="589">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="display"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="590">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="create_window"
                      invoker="create_window"
                      version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="98"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="287">a new #GstVulkanWindow for @display or %NULL.</doc>
          <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="285">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_handle" invoker="get_handle" version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="97"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="244">the winsys specific handle of @display</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="242">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="create_window"
              c:identifier="gst_vulkan_display_create_window"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="117"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="287">a new #GstVulkanWindow for @display or %NULL.</doc>
          <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="285">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_handle"
              c:identifier="gst_vulkan_display_get_handle"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="113"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="244">the winsys specific handle of @display</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="242">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_handle_type"
              c:identifier="gst_vulkan_display_get_handle_type"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="270">the #GstVulkanDisplayType of @display</doc>
          <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="268">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_window"
              c:identifier="gst_vulkan_display_remove_window"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="352">whether the window was successfully removed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="349">a #GstVUlkanDisplay:</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
          <parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="350">the #GstVulkanWindow to remove</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="type" readable="0" private="1">
        <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
      </field>
      <field name="instance" readable="0" private="1">
        <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
      </field>
      <field name="windows" readable="0" private="1">
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="main_context" readable="0" private="1">
        <type name="GLib.MainContext" c:type="GMainContext*"/>
      </field>
      <field name="main_loop" readable="0" private="1">
        <type name="GLib.MainLoop" c:type="GMainLoop*"/>
      </field>
      <field name="event_source" readable="0" private="1">
        <type name="GLib.Source" c:type="GSource*"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="VulkanDisplayPrivate" c:type="GstVulkanDisplayPrivate*"/>
      </field>
    </class>
    <record name="VulkanDisplayClass"
            c:type="GstVulkanDisplayClass"
            glib:is-gtype-struct-for="VulkanDisplay">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="99"/>
      <field name="object_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="get_handle">
        <callback name="get_handle">
          <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                           line="97"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="244">the winsys specific handle of @display</doc>
            <type name="gpointer" c:type="gpointer"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                   line="242">a #GstVulkanDisplay</doc>
              <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_window">
        <callback name="create_window">
          <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                           line="98"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="287">a new #GstVulkanWindow for @display or %NULL.</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                   line="285">a #GstVulkanDisplay</doc>
              <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="VulkanDisplayPrivate"
            c:type="GstVulkanDisplayPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="45"/>
    </record>
    <bitfield name="VulkanDisplayType"
              glib:type-name="GstVulkanDisplayType"
              glib:get-type="gst_vulkan_display_type_get_type"
              c:type="GstVulkanDisplayType">
      <member name="none"
              value="0"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="49">no display</doc>
      </member>
      <member name="xcb"
              value="1"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_XCB"
              glib:nick="xcb">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="50">XCB display</doc>
      </member>
      <member name="wayland"
              value="2"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_WAYLAND"
              glib:nick="wayland">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="51">wayland display</doc>
      </member>
      <member name="cocoa"
              value="4"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_COCOA"
              glib:nick="cocoa">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="52">cocoa display for macOS</doc>
      </member>
      <member name="ios"
              value="8"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_IOS"
              glib:nick="ios">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="53">ios display</doc>
      </member>
      <member name="win32"
              value="16"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_WIN32"
              glib:nick="win32">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="54">win32 display</doc>
      </member>
      <member name="any"
              value="4294967295"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_ANY"
              glib:nick="any">
      </member>
      <function name="to_extension_string"
                c:identifier="gst_vulkan_display_type_to_extension_string"
                version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="503">the Vulkan extension string required for creating a VkSurfaceKHR
using a window system handle or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="501">a #GstVulkanDisplayType</doc>
            <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <enumeration name="VulkanError"
                 glib:type-name="GstVulkanError"
                 glib:get-type="gst_vulkan_error_get_type"
                 c:type="GstVulkanError"
                 glib:error-domain="gst-vulkan-error">
      <member name="failed"
              value="0"
              c:identifier="GST_VULKAN_FAILED"
              glib:nick="failed">
      </member>
      <function name="quark" c:identifier="gst_vulkan_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <function name="to_g_error"
                c:identifier="gst_vulkan_error_to_g_error"
                version="1.18"
                introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkerror.c"
             line="77">if @result indicates an error condition, fills out #Gerror with details of
the error</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkerror.h"
                         line="42"/>
        <return-value>
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkerror.c"
               line="87">@result for easy chaining</doc>
          <type c:type="VkResult"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkerror.c"
                 line="79">a VkResult</doc>
            <type c:type="VkResult"/>
          </parameter>
          <parameter name="error"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkerror.c"
                 line="80">a #GError to fill</doc>
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkerror.c"
                 line="81">the printf-like format to write into the #GError</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkerror.c"
                 line="82">arguments for @format</doc>
            <varargs/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="VulkanFence"
            c:type="GstVulkanFence"
            glib:type-name="GstVulkanFence"
            glib:get-type="gst_vulkan_fence_get_type"
            c:symbol-prefix="vulkan_fence">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="42"/>
      <field name="parent" writable="1">
        <type name="Gst.MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="device" writable="1">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="fence" introspectable="0" writable="1">
        <type c:type="VkFence"/>
      </field>
      <constructor name="new"
                   c:identifier="gst_vulkan_fence_new"
                   version="1.18"
                   introspectable="0"
                   throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                         line="45"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkfence.c"
               line="72">whether a new #GstVulkanFence or %NULL on error</doc>
          <type name="VulkanFence" c:type="GstVulkanFence*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkfence.c"
                 line="68">the parent #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkfence.c"
                 line="69">set of flags to create the fence with</doc>
            <type c:type="VkFenceCreateFlags"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="is_signaled"
              c:identifier="gst_vulkan_fence_is_signaled"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkfence.c"
               line="112">whether @fence has been signalled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="fence" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkfence.c"
                 line="110">a #GstVulkanFence</doc>
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <bitfield name="VulkanFormatFlags"
              glib:type-name="GstVulkanFormatFlags"
              glib:get-type="gst_vulkan_format_flags_get_type"
              c:type="GstVulkanFormatFlags">
      <member name="yuv"
              value="1"
              c:identifier="GST_VULKAN_FORMAT_FLAG_YUV"
              glib:nick="yuv">
      </member>
      <member name="rgb"
              value="2"
              c:identifier="GST_VULKAN_FORMAT_FLAG_RGB"
              glib:nick="rgb">
      </member>
      <member name="alpha"
              value="4"
              c:identifier="GST_VULKAN_FORMAT_FLAG_ALPHA"
              glib:nick="alpha">
      </member>
      <member name="le"
              value="8"
              c:identifier="GST_VULKAN_FORMAT_FLAG_LE"
              glib:nick="le">
      </member>
      <member name="complex"
              value="16"
              c:identifier="GST_VULKAN_FORMAT_FLAG_COMPLEX"
              glib:nick="complex">
      </member>
    </bitfield>
    <record name="VulkanFormatInfo" c:type="GstVulkanFormatInfo">
      <source-position filename="../gst-libs/gst/vulkan/gstvkformat.h"
                       line="80"/>
      <field name="format" introspectable="0" writable="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkformat.h"
             line="54">the Vulkan format being described</doc>
        <type c:type="VkFormat"/>
      </field>
      <field name="name" writable="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkformat.h"
             line="55">name of this format</doc>
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="scaling" writable="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkformat.h"
             line="56">how raw data is interpreted and scaled
@n_components; number of components in this format</doc>
        <type name="VulkanFormatScaling" c:type="GstVulkanFormatScaling"/>
      </field>
      <field name="flags" writable="1">
        <type name="VulkanFormatFlags" c:type="GstVulkanFormatFlags"/>
      </field>
      <field name="bits" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="n_components" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="shift" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="depth" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="pixel_stride" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gint8" c:type="gint8"/>
        </array>
      </field>
      <field name="n_planes" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="plane" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="poffset" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="w_sub" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="h_sub" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
    </record>
    <enumeration name="VulkanFormatScaling"
                 glib:type-name="GstVulkanFormatScaling"
                 glib:get-type="gst_vulkan_format_scaling_get_type"
                 c:type="GstVulkanFormatScaling">
      <member name="unorm"
              value="1"
              c:identifier="GST_VULKAN_FORMAT_SCALING_UNORM"
              glib:nick="unorm">
      </member>
      <member name="snorm"
              value="2"
              c:identifier="GST_VULKAN_FORMAT_SCALING_SNORM"
              glib:nick="snorm">
      </member>
      <member name="uscaled"
              value="3"
              c:identifier="GST_VULKAN_FORMAT_SCALING_USCALED"
              glib:nick="uscaled">
      </member>
      <member name="sscaled"
              value="4"
              c:identifier="GST_VULKAN_FORMAT_SCALING_SSCALED"
              glib:nick="sscaled">
      </member>
      <member name="uint"
              value="5"
              c:identifier="GST_VULKAN_FORMAT_SCALING_UINT"
              glib:nick="uint">
      </member>
      <member name="sint"
              value="6"
              c:identifier="GST_VULKAN_FORMAT_SCALING_SINT"
              glib:nick="sint">
      </member>
      <member name="srgb"
              value="7"
              c:identifier="GST_VULKAN_FORMAT_SCALING_SRGB"
              glib:nick="srgb">
      </member>
    </enumeration>
    <class name="VulkanImageBufferPool"
           c:symbol-prefix="vulkan_image_buffer_pool"
           c:type="GstVulkanImageBufferPool"
           parent="Gst.BufferPool"
           glib:type-name="GstVulkanImageBufferPool"
           glib:get-type="gst_vulkan_image_buffer_pool_get_type"
           glib:type-struct="VulkanImageBufferPoolClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
           line="39">Opaque GstVulkanImageBufferPool struct</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                       line="61"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_image_buffer_pool_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                         line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.c"
               line="221">a #GstBufferPool that allocates buffers with #GstGLMemory</doc>
          <type name="Gst.BufferPool" c:type="GstBufferPool*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.c"
                 line="219">the #GstVulkanDevice to use</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="bufferpool">
        <type name="Gst.BufferPool" c:type="GstBufferPool"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="priv">
        <type name="VulkanImageBufferPoolPrivate"
              c:type="GstVulkanImageBufferPoolPrivate*"/>
      </field>
    </class>
    <record name="VulkanImageBufferPoolClass"
            c:type="GstVulkanImageBufferPoolClass"
            glib:is-gtype-struct-for="VulkanImageBufferPool">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
           line="53">The #GstVulkanImageBufferPoolClass structure contains only private data</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                       line="61"/>
      <field name="parent_class">
        <type name="Gst.BufferPoolClass" c:type="GstBufferPoolClass"/>
      </field>
    </record>
    <record name="VulkanImageBufferPoolPrivate"
            c:type="GstVulkanImageBufferPoolPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="71"/>
    </record>
    <record name="VulkanImageMemory" c:type="GstVulkanImageMemory">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="75"/>
      <field name="parent" writable="1">
        <type name="Gst.Memory" c:type="GstMemory"/>
      </field>
      <field name="device" writable="1">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="image" introspectable="0" writable="1">
        <type c:type="VkImage"/>
      </field>
      <field name="view" introspectable="0" writable="1">
        <type c:type="VkImageView"/>
      </field>
      <field name="vk_mem" writable="1">
        <type name="VulkanMemory" c:type="GstVulkanMemory*"/>
      </field>
      <field name="create_info" introspectable="0" writable="1">
        <type c:type="VkImageCreateInfo"/>
      </field>
      <field name="requirements" introspectable="0" writable="1">
        <type c:type="VkMemoryRequirements"/>
      </field>
      <field name="format_properties" introspectable="0" writable="1">
        <type c:type="VkImageFormatProperties"/>
      </field>
      <field name="usage" introspectable="0" writable="1">
        <type c:type="VkImageUsageFlags"/>
      </field>
      <field name="barrier" writable="1">
        <type name="VulkanBarrierImageInfo"
              c:type="GstVulkanBarrierImageInfo"/>
      </field>
      <field name="lock" writable="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <field name="wrapped" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="notify" writable="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="user_data" writable="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <method name="get_height"
              c:identifier="gst_vulkan_image_memory_get_height"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="537">the height of @image</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="535">a #GstVulkanImageMemory</doc>
            <type name="VulkanImageMemory" c:type="GstVulkanImageMemory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gst_vulkan_image_memory_get_width"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="520">the width of @image</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="518">a #GstVulkanImageMemory</doc>
            <type name="VulkanImageMemory" c:type="GstVulkanImageMemory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="alloc"
                c:identifier="gst_vulkan_image_memory_alloc"
                version="1.18"
                introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
             line="458">Allocated a new #GstVulkanImageMemory.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="103"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="470">a #GstMemory object backed by a vulkan device memory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="460">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="461">the VkFormat for the new image</doc>
            <type c:type="VkFormat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="462">width for the new image</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="463">height for the new image</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="tiling" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="464">tiling for the new image</doc>
            <type c:type="VkImageTiling"/>
          </parameter>
          <parameter name="usage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="465">usage flags for the new image</doc>
            <type c:type="VkImageUsageFlags"/>
          </parameter>
          <parameter name="mem_prop_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="466">VkDeviceMemory property flags for the new image</doc>
            <type c:type="VkMemoryPropertyFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="init_once"
                c:identifier="gst_vulkan_image_memory_init_once"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
             line="577">Initializes the Vulkan image memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanImageMemory operation.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="wrapped"
                c:identifier="gst_vulkan_image_memory_wrapped"
                version="1.18"
                introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="112"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="499">a new #GstVulkanImageMemory wrapping @image</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="489">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="490">a VkImage</doc>
            <type c:type="VkImage"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="491">the VkFormat for @image</doc>
            <type c:type="VkFormat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="492">width of @image</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="493">height of @image</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="tiling" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="494">tiling of @image</doc>
            <type c:type="VkImageTiling"/>
          </parameter>
          <parameter name="usage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="495">usage flags of @image</doc>
            <type c:type="VkImageUsageFlags"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="496">user data for @notify</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="497">a #DestroyNotify when @image is no longer needed</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="VulkanImageMemoryAllocator"
           c:symbol-prefix="vulkan_image_memory_allocator"
           c:type="GstVulkanImageMemoryAllocator"
           parent="Gst.Allocator"
           glib:type-name="GstVulkanImageMemoryAllocator"
           glib:get-type="gst_vulkan_image_memory_allocator_get_type"
           glib:type-struct="VulkanImageMemoryAllocatorClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
           line="77">Opaque #GstVulkanImageMemoryAllocator struct</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="95"/>
      <field name="parent">
        <type name="Gst.Allocator" c:type="GstAllocator"/>
      </field>
    </class>
    <record name="VulkanImageMemoryAllocatorClass"
            c:type="GstVulkanImageMemoryAllocatorClass"
            glib:is-gtype-struct-for="VulkanImageMemoryAllocator">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
           line="87">The #GstVulkanImageMemoryAllocatorClass only contains private data</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="95"/>
      <field name="parent_class">
        <type name="Gst.AllocatorClass" c:type="GstAllocatorClass"/>
      </field>
    </record>
    <class name="VulkanInstance"
           c:symbol-prefix="vulkan_instance"
           c:type="GstVulkanInstance"
           parent="Gst.Object"
           glib:type-name="GstVulkanInstance"
           glib:get-type="gst_vulkan_instance_get_type"
           glib:type-struct="VulkanInstanceClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="58"/>
      <constructor name="new" c:identifier="gst_vulkan_instance_new">
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
        </return-value>
      </constructor>
      <function name="handle_context_query"
                c:identifier="gst_vulkan_instance_handle_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkinstance.c"
             line="525">If a #GstVulkanInstance is requested in @query, sets @instance as the reply.

Intended for use with element query handlers to respond to #GST_QUERY_CONTEXT
for a #GstVulkanInstance.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="536">whether @query was responded to with @instance</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="527">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="528">a #GstQuery of type #GST_QUERY_CONTEXT</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
          <parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="529">the #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
          </parameter>
        </parameters>
      </function>
      <function name="run_context_query"
                c:identifier="gst_vulkan_instance_run_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkinstance.c"
             line="573">Attempt to retrieve a #GstVulkanInstance using #GST_QUERY_CONTEXT from the
surrounding elements of @element.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="581">whether @instance contains a valid #GstVulkanInstance</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="575">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="instance"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="576">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
          </parameter>
        </parameters>
      </function>
      <method name="create_device"
              c:identifier="gst_vulkan_instance_create_device"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="442">a new #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="440">a #GstVulkanIncstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proc_address"
              c:identifier="gst_vulkan_instance_get_proc_address"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkinstance.c"
             line="414">Performs vkGetInstanceProcAddr() with @instance and @name</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="67"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="421">the function pointer for @name or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="416">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="417">name of the function to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="gst_vulkan_instance_open"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="186">whether the instance vould be created</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="183">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="instance" introspectable="0">
        <type c:type="VkInstance"/>
      </field>
      <field name="physical_devices" introspectable="0">
        <type c:type="VkPhysicalDevice*"/>
      </field>
      <field name="n_physical_devices">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="msg_callback" introspectable="0">
        <type c:type="VkDebugReportCallbackEXT"/>
      </field>
      <field name="dbgCreateDebugReportCallback" introspectable="0">
        <type c:type="PFN_vkCreateDebugReportCallbackEXT"/>
      </field>
      <field name="dbgDestroyDebugReportCallback" introspectable="0">
        <type c:type="PFN_vkDestroyDebugReportCallbackEXT"/>
      </field>
      <field name="dbgReportMessage" introspectable="0">
        <type c:type="PFN_vkDebugReportMessageEXT"/>
      </field>
      <field name="priv">
        <type name="VulkanInstancePrivate" c:type="GstVulkanInstancePrivate*"/>
      </field>
      <glib:signal name="create-device" when="last" version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkinstance.c"
             line="106">Overrides the #GstVulkanDevice creation mechanism.
It can be called from any thread.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="113">the newly created #GstVulkanDevice.</doc>
          <type name="VulkanDevice"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="VulkanInstanceClass"
            c:type="GstVulkanInstanceClass"
            glib:is-gtype-struct-for="VulkanInstance">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="58"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="VulkanInstancePrivate"
            c:type="GstVulkanInstancePrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="30"/>
    </record>
    <record name="VulkanMemory" c:type="GstVulkanMemory">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="69"/>
      <field name="mem" writable="1">
        <type name="Gst.Memory" c:type="GstMemory"/>
      </field>
      <field name="device" writable="1">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="mem_ptr" introspectable="0" writable="1">
        <type c:type="VkDeviceMemory"/>
      </field>
      <field name="lock" writable="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <field name="map_count" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="notify" readable="0" private="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="user_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="alloc_info" introspectable="0" readable="0" private="1">
        <type c:type="VkMemoryAllocateInfo"/>
      </field>
      <field name="properties" introspectable="0" readable="0" private="1">
        <type c:type="VkMemoryPropertyFlags"/>
      </field>
      <field name="vk_offset" readable="0" private="1">
        <type name="guint64" c:type="guint64"/>
      </field>
      <field name="wrapped" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <function name="alloc"
                c:identifier="gst_vulkan_memory_alloc"
                version="1.18"
                introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkmemory.c"
             line="288">Allocated a new #GstVulkanMemory.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                         line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="297">a #GstMemory object backed by a vulkan device memory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="290">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="memory_type_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="291">the Vulkan memory type index</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="292">a #GstAllocationParams</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="293">the size to allocate</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="mem_prop_flags" transfer-ownership="none">
            <type c:type="VkMemoryPropertyFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="find_memory_type_index_with_type_properties"
                c:identifier="gst_vulkan_memory_find_memory_type_index_with_type_properties"
                version="1.18"
                introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="261">whether a valid memory type could be found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="256">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="type_bits" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="257">memory type bits to search for</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="properties" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="258">memory properties to search for</doc>
            <type c:type="VkMemoryPropertyFlags"/>
          </parameter>
          <parameter name="type_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="259">resulting index of the memory type</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </function>
      <function name="init_once"
                c:identifier="gst_vulkan_memory_init_once"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkmemory.c"
             line="338">Initializes the Vulkan memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanMemory operation.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
    </record>
    <class name="VulkanMemoryAllocator"
           c:symbol-prefix="vulkan_memory_allocator"
           c:type="GstVulkanMemoryAllocator"
           parent="Gst.Allocator"
           glib:type-name="GstVulkanMemoryAllocator"
           glib:get-type="gst_vulkan_memory_allocator_get_type"
           glib:type-struct="VulkanMemoryAllocatorClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkmemory.h"
           line="71">Opaque #GstVulkanMemoryAllocator struct</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="89"/>
      <field name="parent">
        <type name="Gst.Allocator" c:type="GstAllocator"/>
      </field>
    </class>
    <record name="VulkanMemoryAllocatorClass"
            c:type="GstVulkanMemoryAllocatorClass"
            glib:is-gtype-struct-for="VulkanMemoryAllocator">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkmemory.h"
           line="81">The #GstVulkanMemoryAllocatorClass only contains private data</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="89"/>
      <field name="parent_class">
        <type name="Gst.AllocatorClass" c:type="GstAllocatorClass"/>
      </field>
    </record>
    <class name="VulkanQueue"
           c:symbol-prefix="vulkan_queue"
           c:type="GstVulkanQueue"
           parent="Gst.Object"
           glib:type-name="GstVulkanQueue"
           glib:get-type="gst_vulkan_queue_get_type"
           glib:type-struct="VulkanQueueClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="52"/>
      <function name="handle_context_query"
                c:identifier="gst_vulkan_queue_handle_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkqueue.c"
             line="199">If a #GstVulkanQueue is requested in @query, sets @queue as the reply.

Intended for use with element query handlers to respond to #GST_QUERY_CONTEXT
for a #GstVulkanQueue.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="210">whether @query was responded to with @queue</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="201">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="202">a #GstQuery of type #GST_QUERY_CONTEXT</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
          <parameter name="queue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="203">the #GstVulkanQueue</doc>
            <type name="VulkanQueue" c:type="GstVulkanQueue**"/>
          </parameter>
        </parameters>
      </function>
      <function name="run_context_query"
                c:identifier="gst_vulkan_queue_run_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkqueue.c"
             line="247">Attempt to retrieve a #GstVulkanQueue using #GST_QUERY_CONTEXT from the
surrounding elements of @element.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="255">whether @queue contains a valid #GstVulkanQueue</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="249">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="queue"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="250">a #GstVulkanQueue</doc>
            <type name="VulkanQueue" c:type="GstVulkanQueue**"/>
          </parameter>
        </parameters>
      </function>
      <method name="create_command_pool"
              c:identifier="gst_vulkan_queue_create_command_pool"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                         line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="104">a new #GstVUlkanCommandPool or %NULL</doc>
          <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
        </return-value>
        <parameters>
          <instance-parameter name="queue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="101">a #GstVulkanQueue</doc>
            <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device"
              c:identifier="gst_vulkan_queue_get_device"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                         line="55"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="87">the #GstVulkanDevice for @queue</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="queue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="85">a #GstVulkanQueue</doc>
            <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="queue" introspectable="0">
        <type c:type="VkQueue"/>
      </field>
      <field name="family">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="index">
        <type name="guint32" c:type="guint32"/>
      </field>
    </class>
    <record name="VulkanQueueClass"
            c:type="GstVulkanQueueClass"
            glib:is-gtype-struct-for="VulkanQueue">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="52"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <class name="VulkanSwapper"
           c:symbol-prefix="vulkan_swapper"
           c:type="GstVulkanSwapper"
           parent="Gst.Object"
           glib:type-name="GstVulkanSwapper"
           glib:get-type="gst_vulkan_swapper_get_type"
           glib:type-struct="VulkanSwapperClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="60"/>
      <constructor name="new" c:identifier="gst_vulkan_swapper_new">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="choose_queue"
              c:identifier="gst_vulkan_swapper_choose_queue"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="swapper" transfer-ownership="none">
            <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
          </instance-parameter>
          <parameter name="available_queue" transfer-ownership="none">
            <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_supported_caps"
              c:identifier="gst_vulkan_swapper_get_supported_caps"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <instance-parameter name="swapper" transfer-ownership="none">
            <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="render_buffer"
              c:identifier="gst_vulkan_swapper_render_buffer"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="swapper" transfer-ownership="none">
            <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_caps"
              c:identifier="gst_vulkan_swapper_set_caps"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="swapper" transfer-ownership="none">
            <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
          </instance-parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <property name="force-aspect-ratio"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="pixel-aspect-ratio"
                writable="1"
                transfer-ownership="none">
        <type name="Gst.Fraction"/>
      </property>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="window">
        <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
      </field>
      <field name="queue">
        <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
      </field>
      <field name="cmd_pool">
        <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
      </field>
      <field name="priv">
        <type name="VulkanSwapperPrivate" c:type="GstVulkanSwapperPrivate*"/>
      </field>
    </class>
    <record name="VulkanSwapperClass"
            c:type="GstVulkanSwapperClass"
            glib:is-gtype-struct-for="VulkanSwapper">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="60"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="VulkanSwapperPrivate"
            c:type="GstVulkanSwapperPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="43"/>
    </record>
    <record name="VulkanTrash"
            c:type="GstVulkanTrash"
            glib:type-name="GstVulkanTrash"
            glib:get-type="gst_vulkan_trash_get_type"
            c:symbol-prefix="vulkan_trash">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="38"/>
      <field name="parent" writable="1">
        <type name="Gst.MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="fence" writable="1">
        <type name="VulkanFence" c:type="GstVulkanFence*"/>
      </field>
      <field name="notify" writable="1">
        <type name="VulkanTrashNotify" c:type="GstVulkanTrashNotify"/>
      </field>
      <field name="user_data" writable="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <constructor name="new" c:identifier="gst_vulkan_trash_new">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvktrash.c"
             line="57">Create and return a new #GstVulkanTrash object that will stores a callback
to call when @fence is signalled.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="78"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvktrash.c"
               line="66">a new #GstVulkanTrash</doc>
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.c"
                 line="59">a #GstVulkanFence</doc>
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.c"
                 line="60">a #GstVulkanTrashNotify</doc>
            <type name="VulkanTrashNotify" c:type="GstVulkanTrashNotify"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.c"
                 line="61">user data for @notify</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_command_buffer"
                   c:identifier="gst_vulkan_trash_new_free_command_buffer"
                   introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="108"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
          </parameter>
          <parameter name="command_buffer" transfer-ownership="none">
            <type c:type="VkCommandBuffer"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_descriptor_pool"
                   c:identifier="gst_vulkan_trash_new_free_descriptor_pool"
                   introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="83"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="descriptor_pool" transfer-ownership="none">
            <type c:type="VkDescriptorPool"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_descriptor_set"
                   c:identifier="gst_vulkan_trash_new_free_descriptor_set"
                   introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="112"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type c:type="VkDescriptorPool"/>
          </parameter>
          <parameter name="descriptor_set" transfer-ownership="none">
            <type c:type="VkDescriptorSet"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_descriptor_set_layout"
                   c:identifier="gst_vulkan_trash_new_free_descriptor_set_layout"
                   introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="86"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="descriptor_set_layout" transfer-ownership="none">
            <type c:type="VkDescriptorSetLayout"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_framebuffer"
                   c:identifier="gst_vulkan_trash_new_free_framebuffer"
                   introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="89"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="framebuffer" transfer-ownership="none">
            <type c:type="VkFramebuffer"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_pipeline"
                   c:identifier="gst_vulkan_trash_new_free_pipeline"
                   introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="92"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="pipeline" transfer-ownership="none">
            <type c:type="VkPipeline"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_pipeline_layout"
                   c:identifier="gst_vulkan_trash_new_free_pipeline_layout"
                   introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="95"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="pipeline_layout" transfer-ownership="none">
            <type c:type="VkPipelineLayout"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_render_pass"
                   c:identifier="gst_vulkan_trash_new_free_render_pass"
                   introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="98"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="render_pass" transfer-ownership="none">
            <type c:type="VkRenderPass"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_sampler"
                   c:identifier="gst_vulkan_trash_new_free_sampler"
                   introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="101"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="sampler" transfer-ownership="none">
            <type c:type="VkSampler"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_semaphore"
                   c:identifier="gst_vulkan_trash_new_free_semaphore"
                   introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="104"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="semaphore" transfer-ownership="none">
            <type c:type="VkSemaphore"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_mini_object_unref"
                   c:identifier="gst_vulkan_trash_new_mini_object_unref">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="120"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <type name="Gst.MiniObject" c:type="GstMiniObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_object_unref"
                   c:identifier="gst_vulkan_trash_new_object_unref">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="117"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <type name="Gst.Object" c:type="GstObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="ref"
              c:identifier="gst_vulkan_trash_ref"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvktrash.h"
             line="44">Increases the refcount of the given trash object by one.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvktrash.h"
               line="50">@trash</doc>
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.h"
                 line="46">a #GstVulkanTrash.</doc>
            <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gst_vulkan_trash_unref"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvktrash.h"
             line="59">Decreases the refcount of the trash object. If the refcount reaches 0, the
trash will be freed.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.h"
                 line="61">a #GstVulkanTrash.</doc>
            <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <class name="VulkanTrashFenceList"
           c:symbol-prefix="vulkan_trash_fence_list"
           c:type="GstVulkanTrashFenceList"
           parent="VulkanTrashList"
           glib:type-name="GstVulkanTrashFenceList"
           glib:get-type="gst_vulkan_trash_fence_list_get_type"
           glib:type-struct="VulkanTrashFenceListClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="166"/>
      <constructor name="new" c:identifier="gst_vulkan_trash_fence_list_new">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
        </return-value>
      </constructor>
    </class>
    <record name="VulkanTrashFenceListClass"
            c:type="GstVulkanTrashFenceListClass"
            glib:is-gtype-struct-for="VulkanTrashFenceList">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="166"/>
      <field name="parent_class">
        <type name="VulkanTrashListClass" c:type="GstVulkanTrashListClass"/>
      </field>
    </record>
    <class name="VulkanTrashList"
           c:symbol-prefix="vulkan_trash_list"
           c:type="GstVulkanTrashList"
           parent="Gst.Object"
           glib:type-name="GstVulkanTrashList"
           glib:get-type="gst_vulkan_trash_list_get_type"
           glib:type-struct="VulkanTrashListClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="154"/>
      <virtual-method name="add_func">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
          <parameter name="trash" transfer-ownership="none">
            <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="gc_func">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="wait_func">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add" c:identifier="gst_vulkan_trash_list_add">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="162"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
          <parameter name="trash" transfer-ownership="none">
            <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
          </parameter>
        </parameters>
      </method>
      <method name="gc" c:identifier="gst_vulkan_trash_list_gc">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="wait" c:identifier="gst_vulkan_trash_list_wait">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="159"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
    </class>
    <callback name="VulkanTrashListAdd" c:type="GstVulkanTrashListAdd">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="142"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="trash_list" transfer-ownership="none">
          <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
        </parameter>
        <parameter name="trash" transfer-ownership="none">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="VulkanTrashListClass"
            c:type="GstVulkanTrashListClass"
            glib:is-gtype-struct-for="VulkanTrashList">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="154"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="add_func">
        <type name="VulkanTrashListAdd" c:type="GstVulkanTrashListAdd"/>
      </field>
      <field name="gc_func">
        <type name="VulkanTrashListGC" c:type="GstVulkanTrashListGC"/>
      </field>
      <field name="wait_func">
        <type name="VulkanTrashListWait" c:type="GstVulkanTrashListWait"/>
      </field>
      <field name="_padding">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <callback name="VulkanTrashListGC" c:type="GstVulkanTrashListGC">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="141"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="trash_list" transfer-ownership="none">
          <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="VulkanTrashListWait" c:type="GstVulkanTrashListWait">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="143"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="trash_list" transfer-ownership="none">
          <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
        </parameter>
        <parameter name="timeout" transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="VulkanTrashNotify" c:type="GstVulkanTrashNotify">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="28"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="VulkanWindow"
           c:symbol-prefix="vulkan_window"
           c:type="GstVulkanWindow"
           parent="Gst.Object"
           abstract="1"
           glib:type-name="GstVulkanWindow"
           glib:get-type="gst_vulkan_window_get_type"
           glib:type-struct="VulkanWindowClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkwindow.h"
           line="54">#GstVulkanWindow is an opaque struct and should only be accessed through the
provided api.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="99"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_window_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="217">a new #GstVulkanWindow using @display's connection</doc>
          <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="215">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="close" invoker="close" version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="358">Attempt to close the window.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="360">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_presentation_support"
                      invoker="get_presentation_support"
                      version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="319">whether the given combination of @window, @device and
         @queue_family_idx supports presentation</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="315">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="316">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="queue_family_idx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="317">the queue family</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_surface"
                      invoker="get_surface"
                      version="1.18"
                      introspectable="0"
                      throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="86"/>
        <return-value>
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="297">the VkSurface for displaying into</doc>
          <type c:type="VkSurfaceKHR"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="294">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_surface_dimensions"
                      invoker="get_surface_dimensions">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open" invoker="open" version="1.18" throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="342">whether @window could be sucessfully opened</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="339">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_window_handle" invoker="set_window_handle">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="guintptr" c:type="guintptr"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="close"
              c:identifier="gst_vulkan_window_close"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="358">Attempt to close the window.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="360">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display"
              c:identifier="gst_vulkan_window_get_display"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="105"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="280">the #GstVulkanDisplay for @window</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="278">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_presentation_support"
              c:identifier="gst_vulkan_window_get_presentation_support"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="319">whether the given combination of @window, @device and
         @queue_family_idx supports presentation</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="315">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="316">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="queue_family_idx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="317">the queue family</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_surface"
              c:identifier="gst_vulkan_window_get_surface"
              version="1.18"
              introspectable="0"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="107"/>
        <return-value>
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="297">the VkSurface for displaying into</doc>
          <type c:type="VkSurfaceKHR"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="294">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_surface_dimensions"
              c:identifier="gst_vulkan_window_get_surface_dimensions">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="gst_vulkan_window_open"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="342">whether @window could be sucessfully opened</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="339">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="redraw"
              c:identifier="gst_vulkan_window_redraw"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="406">Ask the @window to redraw its contents</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="132"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="408">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="resize"
              c:identifier="gst_vulkan_window_resize"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="382">Resize the output surface.

Currently intended for subclasses to update internal state.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="384">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="385">the new width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="386">the new height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_window_handle"
              c:identifier="gst_vulkan_window_set_window_handle">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="guintptr" c:type="guintptr"/>
          </parameter>
        </parameters>
      </method>
      <property name="display" transfer-ownership="none">
        <type name="VulkanDisplay"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="display" readable="0" private="1">
        <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
      </field>
      <field name="lock" readable="0" private="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="VulkanWindowPrivate" c:type="GstVulkanWindowPrivate*"/>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <glib:signal name="close" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </glib:signal>
      <glib:signal name="draw" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="resize" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="VulkanWindowClass"
            c:type="GstVulkanWindowClass"
            glib:is-gtype-struct-for="VulkanWindow">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="99"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.h"
             line="75">Parent class</doc>
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="open">
        <callback name="open" throws="1">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="342">whether @window could be sucessfully opened</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="339">a #GstVulkanWindow</doc>
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close">
        <callback name="close">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="360">a #GstVulkanWindow</doc>
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_surface" introspectable="0">
        <callback name="get_surface" introspectable="0" throws="1">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="86"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="297">the VkSurface for displaying into</doc>
            <type c:type="VkSurfaceKHR"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="294">a #GstVulkanWindow</doc>
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_presentation_support">
        <callback name="get_presentation_support">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="319">whether the given combination of @window, @device and
         @queue_family_idx supports presentation</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="315">a #GstVulkanWindow</doc>
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="316">a #GstVulkanDevice</doc>
              <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
            </parameter>
            <parameter name="queue_family_idx" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="317">the queue family</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_window_handle">
        <callback name="set_window_handle">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
            <parameter name="handle" transfer-ownership="none">
              <type name="guintptr" c:type="guintptr"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_surface_dimensions">
        <callback name="get_surface_dimensions">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="guint" c:type="guint*"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="guint" c:type="guint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="VulkanWindowError"
                 glib:type-name="GstVulkanWindowError"
                 glib:get-type="gst_vulkan_window_error_get_type"
                 c:type="GstVulkanWindowError"
                 glib:error-domain="gst-gl-window-error-quark">
      <member name="failed"
              value="0"
              c:identifier="GST_VULKAN_WINDOW_ERROR_FAILED"
              glib:nick="failed">
      </member>
      <member name="old_libs"
              value="1"
              c:identifier="GST_VULKAN_WINDOW_ERROR_OLD_LIBS"
              glib:nick="old-libs">
      </member>
      <member name="resource_unavailable"
              value="2"
              c:identifier="GST_VULKAN_WINDOW_ERROR_RESOURCE_UNAVAILABLE"
              glib:nick="resource-unavailable">
      </member>
      <function name="quark" c:identifier="gst_vulkan_window_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="VulkanWindowPrivate"
            c:type="GstVulkanWindowPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="49"/>
    </record>
    <function name="context_get_vulkan_device"
              c:identifier="gst_context_get_vulkan_device"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="94"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="537">Whether @device was in @context</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="534">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="535">resulting #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice**"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_get_vulkan_display"
              c:identifier="gst_context_get_vulkan_display"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="120"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="409">Whether @display was in @context</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="406">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="407">resulting #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_get_vulkan_instance"
              c:identifier="gst_context_get_vulkan_instance"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="78"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkinstance.c"
             line="501">Whether @instance was in @context</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="498">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="instance" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="499">resulting #GstVulkanInstance</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_get_vulkan_queue"
              c:identifier="gst_context_get_vulkan_queue"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="65"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkqueue.c"
             line="176">Whether @queue was in @context</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="173">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="queue" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="174">resulting #GstVulkanQueue</doc>
          <type name="VulkanQueue" c:type="GstVulkanQueue**"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_set_vulkan_device"
              c:identifier="gst_context_set_vulkan_device"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkdevice.c"
           line="505">Sets @device on @context</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="91"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="507">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="508">a #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_set_vulkan_display"
              c:identifier="gst_context_set_vulkan_display"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
           line="376">Sets @display on @context</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="123"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="378">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="379">a #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_set_vulkan_instance"
              c:identifier="gst_context_set_vulkan_instance"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkinstance.c"
           line="468">Sets @instance on @context</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="75"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="470">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="instance" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="471">a #GstVulkanInstance</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_set_vulkan_queue"
              c:identifier="gst_context_set_vulkan_queue"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkqueue.c"
           line="144">Sets @queue on @context</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="62"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="146">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="queue" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="147">a #GstVulkanQueue</doc>
          <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_vulkan_buffer_memory"
              c:identifier="gst_is_vulkan_buffer_memory"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="100"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
             line="454">whether the memory at @mem is a #GstVulkanBufferMemory</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="452">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_vulkan_image_memory"
              c:identifier="gst_is_vulkan_image_memory"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="100"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
             line="608">whether the memory at @mem is a #GstVulkanImageMemory</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="606">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_vulkan_memory"
              c:identifier="gst_is_vulkan_memory"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="94"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkmemory.c"
             line="369">whether the memory at @mem is a #GstVulkanMemory</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="367">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_buffer_memory_init_once"
              c:identifier="gst_vulkan_buffer_memory_init_once"
              moved-to="VulkanBufferMemory.init_once"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
           line="423">Initializes the Vulkan buffer memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanBufferMemory operation.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="98"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="vulkan_display_type_to_extension_string"
              c:identifier="gst_vulkan_display_type_to_extension_string"
              moved-to="VulkanDisplayType.to_extension_string"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="109"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="503">the Vulkan extension string required for creating a VkSurfaceKHR
using a window system handle or %NULL</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="501">a #GstVulkanDisplayType</doc>
          <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_ensure_element_data"
              c:identifier="gst_vulkan_ensure_element_data"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkutils.c"
           line="227">Perform the steps necessary for retrieving a #GstVulkanInstance and
(optionally) an #GstVulkanDisplay from the surrounding elements or from
the application using the #GstContext mechanism.

If the contents of @display_ptr or @instance_ptr are not %NULL, then no
#GstContext query is necessary and no #GstVulkanInstance or #GstVulkanDisplay
retrieval is performed.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="29"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkutils.c"
             line="241">whether a #GstVulkanInstance exists in @instance_ptr and if
         @display_ptr is not %NULL, whether a #GstVulkanDisplay exists in
         @display_ptr</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="229">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="display_ptr"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full"
                   optional="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="230">the resulting #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
        </parameter>
        <parameter name="instance_ptr"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="231">the resulting #GstVulkanInstance</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_error_quark"
              c:identifier="gst_vulkan_error_quark"
              moved-to="VulkanError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="vulkan_error_to_g_error"
              c:identifier="gst_vulkan_error_to_g_error"
              moved-to="VulkanError.to_g_error"
              version="1.18"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkerror.c"
           line="77">if @result indicates an error condition, fills out #Gerror with details of
the error</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkerror.h"
                       line="42"/>
      <return-value>
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkerror.c"
             line="87">@result for easy chaining</doc>
        <type c:type="VkResult"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkerror.c"
               line="79">a VkResult</doc>
          <type c:type="VkResult"/>
        </parameter>
        <parameter name="error"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full"
                   optional="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkerror.c"
               line="80">a #GError to fill</doc>
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkerror.c"
               line="81">the printf-like format to write into the #GError</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkerror.c"
               line="82">arguments for @format</doc>
          <varargs/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_format_from_video_format"
              c:identifier="gst_vulkan_format_from_video_format"
              version="1.18"
              introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="128"/>
      <return-value>
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
             line="47">the VkFormat to use for @v_format and @plane</doc>
        <type c:type="VkFormat"/>
      </return-value>
      <parameters>
        <parameter name="v_format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="44">the #GstVideoFormat</doc>
          <type name="GstVideo.VideoFormat" c:type="GstVideoFormat"/>
        </parameter>
        <parameter name="plane" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="45">the plane</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_format_get_info"
              c:identifier="gst_vulkan_format_get_info"
              introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkformat.h"
                       line="83"/>
      <return-value transfer-ownership="none">
        <type name="VulkanFormatInfo" c:type="const GstVulkanFormatInfo*"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <type c:type="VkFormat"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_global_context_query"
              c:identifier="gst_vulkan_global_context_query"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkutils.c"
           line="140">Performs the steps necessary for executing a context query including
posting a message for the application to respond.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="45"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="142">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="context_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="143">the context type to query for</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_handle_context_query"
              c:identifier="gst_vulkan_handle_context_query"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="38"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkutils.c"
             line="386">Whether the @query was successfully responded to from the passed
         @display, @instance, and @device.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="380">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="query" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="381">a #GstQuery of type %GST_QUERY_CONTEXT</doc>
          <type name="Gst.Query" c:type="GstQuery*"/>
        </parameter>
        <parameter name="display"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="382">a #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
        </parameter>
        <parameter name="instance"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="383">a #GstVulkanInstance</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
        </parameter>
        <parameter name="device"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="384">a #GstVulkanInstance</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice**"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_handle_set_context"
              c:identifier="gst_vulkan_handle_set_context"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkutils.c"
           line="313">Helper function for implementing #GstElementClass.set_context() in
Vulkan capable elements.

Retrieve's the #GstVulkanDisplay or #GstVulkanInstance in @context and places
the result in @display or @instance respectively.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="33"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkutils.c"
             line="326">whether the @display or @instance could be set successfully</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="315">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="316">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="display"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full"
                   optional="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="317">location of a #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
        </parameter>
        <parameter name="instance"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="318">location of a #GstVulkanInstance</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_image_memory_init_once"
              c:identifier="gst_vulkan_image_memory_init_once"
              moved-to="VulkanImageMemory.init_once"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
           line="577">Initializes the Vulkan image memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanImageMemory operation.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="98"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="vulkan_local_context_query"
              c:identifier="gst_vulkan_local_context_query"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkutils.c"
           line="180">Performs the steps necessary for executing a context query between only
other elements in the pipeline</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="48"/>
      <return-value transfer-ownership="full">
        <type name="Gst.Query" c:type="GstQuery*"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="182">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="context_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="183">the context type to query for</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_memory_init_once"
              c:identifier="gst_vulkan_memory_init_once"
              moved-to="VulkanMemory.init_once"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkmemory.c"
           line="338">Initializes the Vulkan memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanMemory operation.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="92"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="vulkan_run_query"
              c:identifier="gst_vulkan_run_query"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="51"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkutils.c"
             line="77">whether @query was answered successfully</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="73">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="query" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="74">the #GstQuery to perform</doc>
          <type name="Gst.Query" c:type="GstQuery*"/>
        </parameter>
        <parameter name="direction" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="75">the #GstPadDirection to perform query on</doc>
          <type name="Gst.PadDirection" c:type="GstPadDirection"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_window_error_quark"
              c:identifier="gst_vulkan_window_error_quark"
              moved-to="VulkanWindowError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
