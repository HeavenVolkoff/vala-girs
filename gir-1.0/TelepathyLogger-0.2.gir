<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="TelepathyGLib" version="0.12"/>
  <namespace name="TelepathyLogger"
             version="0.2"
             shared-library="libtelepathy-logger.so.2"
             c:identifier-prefixes="Tpl"
             c:symbol-prefixes="tpl">
    <class name="CallEvent"
           c:symbol-prefix="call_event"
           c:type="TplCallEvent"
           parent="Event"
           glib:type-name="TplCallEvent"
           glib:get-type="tpl_call_event_get_type"
           glib:type-struct="CallEventClass">
      <doc xml:whitespace="preserve">An object representing a call log event.</doc>
      <method name="get_detailed_end_reason"
              c:identifier="tpl_call_event_get_detailed_end_reason">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same string as the #TplCallEvent:detailed-end-reason property</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_duration" c:identifier="tpl_call_event_get_duration">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same duration as the #TplCallEvent:duration property</doc>
          <type name="GLib.TimeSpan" c:type="GTimeSpan"/>
        </return-value>
      </method>
      <method name="get_end_actor" c:identifier="tpl_call_event_get_end_actor">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same #TplEntity as #TplCallEvent:end-actor property</doc>
          <type name="Entity" c:type="TplEntity*"/>
        </return-value>
      </method>
      <method name="get_end_reason"
              c:identifier="tpl_call_event_get_end_reason">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same #TpCallStateChangeReason as #TplCallEvent:end-reason property</doc>
          <type name="TelepathyGLib.CallStateChangeReason"
                c:type="TpCallStateChangeReason"/>
        </return-value>
      </method>
      <property name="detailed-end-reason"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="duration"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint64"/>
      </property>
      <property name="end-actor"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Entity"/>
      </property>
      <property name="end-reason"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint"/>
      </property>
    </class>
    <record name="CallEventClass"
            c:type="TplCallEventClass"
            disguised="1"
            glib:is-gtype-struct-for="CallEvent">
    </record>
    <record name="CallEventPriv" c:type="TplCallEventPriv" disguised="1">
    </record>
    <class name="Entity"
           c:symbol-prefix="entity"
           c:type="TplEntity"
           parent="GObject.Object"
           glib:type-name="TplEntity"
           glib:get-type="tpl_entity_get_type">
      <doc xml:whitespace="preserve">An object representing a contact or room.</doc>
      <constructor name="new" c:identifier="tpl_entity_new">
        <return-value transfer-ownership="full">
          <type name="Entity" c:type="TplEntity*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="EntityType" c:type="TplEntityType"/>
          </parameter>
          <parameter name="alias" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="avatar_token" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_room_id"
                   c:identifier="tpl_entity_new_from_room_id">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a TplEntity instance with identifier, alias copied from @room_id. It also sets %TPL_ENTITY_ROOM as type for the #TplEntity returned.</doc>
          <type name="Entity" c:type="TplEntity*"/>
        </return-value>
        <parameters>
          <parameter name="room_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">the room id which will be the identifier for the entity</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_tp_contact"
                   c:identifier="tpl_entity_new_from_tp_contact">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a TplEntity instance with identifier, alias and avatar's token copied. Type parameter is useful to differentiate between normal contact and self contact, thus only %TPL_ENTITY_CONTACT and %TPL_ENTITY_SELF are accepted. If contact is %NULL, an entity of type %TPL_ENTITY_UNKNOWN with id set to "unknown" is returned.</doc>
          <type name="Entity" c:type="TplEntity*"/>
        </return-value>
        <parameters>
          <parameter name="contact" transfer-ownership="none">
            <doc xml:whitespace="preserve">the TpContact instance to create the TplEntity from</doc>
            <type name="TelepathyGLib.Contact" c:type="TpContact*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:whitespace="preserve">the #TplEntity type</doc>
            <type name="EntityType" c:type="TplEntityType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_alias" c:identifier="tpl_entity_get_alias">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the alias of the entity, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_avatar_token"
              c:identifier="tpl_entity_get_avatar_token">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a token representing the avatar of the token, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_entity_type" c:identifier="tpl_entity_get_entity_type">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the type of the entity</doc>
          <type name="EntityType" c:type="TplEntityType"/>
        </return-value>
      </method>
      <method name="get_identifier" c:identifier="tpl_entity_get_identifier">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the identifier of the entity</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <property name="alias"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:whitespace="preserve">The entity's alias</doc>
        <type name="utf8"/>
      </property>
      <property name="avatar-token"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:whitespace="preserve">The entity's avatar token</doc>
        <type name="utf8"/>
      </property>
      <property name="identifier"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:whitespace="preserve">The entity's identifier</doc>
        <type name="utf8"/>
      </property>
      <property name="type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:whitespace="preserve">The entity's type (see #TplEntityType).</doc>
        <type name="gint"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="EntityPriv" c:type="TplEntityPriv*"/>
      </field>
    </class>
    <record name="EntityPriv" c:type="TplEntityPriv" disguised="1">
    </record>
    <enumeration name="EntityType" c:type="TplEntityType">
      <member name="unknown" value="0" c:identifier="TPL_ENTITY_UNKNOWN"/>
      <member name="contact" value="1" c:identifier="TPL_ENTITY_CONTACT"/>
      <member name="room" value="2" c:identifier="TPL_ENTITY_ROOM"/>
      <member name="self" value="3" c:identifier="TPL_ENTITY_SELF"/>
    </enumeration>
    <class name="Event"
           c:symbol-prefix="event"
           c:type="TplEvent"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="TplEvent"
           glib:get-type="tpl_event_get_type"
           glib:type-struct="EventClass">
      <doc xml:whitespace="preserve">An object representing a generic log event.</doc>
      <method name="equal" c:identifier="tpl_event_equal">
        <doc xml:whitespace="preserve">Checks if two instances of TplEvent represent the same data</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if @data is the same type of @self and they hold the same data, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:whitespace="preserve">an instance of the same TplEvent subclass of @self</doc>
            <type name="Event" c:type="TplEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_account" c:identifier="tpl_event_get_account">
        <doc xml:whitespace="preserve">&lt;!-- no more to say --&gt;</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same account as the #TplEvent:account property</doc>
          <type name="TelepathyGLib.Account" c:type="TpAccount*"/>
        </return-value>
      </method>
      <method name="get_account_path"
              c:identifier="tpl_event_get_account_path">
        <doc xml:whitespace="preserve">&lt;!-- no more to say --&gt;</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the path as the #TplEvent:account property</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_receiver" c:identifier="tpl_event_get_receiver">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same #TplEntity as the #TplEvent:receiver property</doc>
          <type name="Entity" c:type="TplEntity*"/>
        </return-value>
      </method>
      <method name="get_sender" c:identifier="tpl_event_get_sender">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same #TplEntity as the #TplEvent:sender property</doc>
          <type name="Entity" c:type="TplEntity*"/>
        </return-value>
      </method>
      <method name="get_timestamp" c:identifier="tpl_event_get_timestamp">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same timestamp as the #TplEvent:timestamp property</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <property name="account"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="TelepathyGLib.Account"/>
      </property>
      <property name="account-path" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="channel-path"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="receiver"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Entity"/>
      </property>
      <property name="sender"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Entity"/>
      </property>
      <property name="timestamp"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint64"/>
      </property>
    </class>
    <record name="EventClass"
            c:type="TplEventClass"
            disguised="1"
            glib:is-gtype-struct-for="Event">
    </record>
    <record name="EventPriv" c:type="TplEventPriv" disguised="1">
    </record>
    <bitfield name="EventTypeMask" c:type="TplEventTypeMask">
      <doc xml:whitespace="preserve">Mask used to filter type of #TplEvent returned.</doc>
      <member name="text" value="1" c:identifier="TPL_EVENT_MASK_TEXT"/>
      <member name="call" value="2" c:identifier="TPL_EVENT_MASK_CALL"/>
      <member name="any" value="65535" c:identifier="TPL_EVENT_MASK_ANY"/>
    </bitfield>
    <callback name="LogEventFilter" c:type="TplLogEventFilter">
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if @event should appear in the result</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="event" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #TplEvent to filter</doc>
          <type name="Event" c:type="TplEvent*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="1">
          <doc xml:whitespace="preserve">user-supplied data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="LogManager"
           c:symbol-prefix="log_manager"
           c:type="TplLogManager"
           parent="GObject.Object"
           glib:type-name="TplLogManager"
           glib:get-type="tpl_log_manager_get_type"
           glib:type-struct="LogManagerClass">
      <doc xml:whitespace="preserve">An object used to access logs</doc>
      <function name="dup_singleton"
                c:identifier="tpl_log_manager_dup_singleton">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new reference on the log manager</doc>
          <type name="LogManager" c:type="TplLogManager*"/>
        </return-value>
      </function>
      <function name="errors_quark"
                c:identifier="tpl_log_manager_errors_quark">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GQuark associated with the error domain of #TplLogManager</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <function name="search_free"
                c:identifier="tpl_log_manager_search_free"
                introspectable="0">
        <doc xml:whitespace="preserve">Free @hits and its content.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="hits" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GList of #TplLogSearchHit</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <method name="exists" c:identifier="tpl_log_manager_exists">
        <doc xml:whitespace="preserve">Checks if logs exist for @target.

It applies for any registered TplLogStore with the #TplLogStore:readable
property %TRUE.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE logs exist for @target, otherwise %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="account" transfer-ownership="none">
            <doc xml:whitespace="preserve">TpAccount</doc>
            <type name="TelepathyGLib.Account" c:type="TpAccount*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:whitespace="preserve">a non-NULL #TplEntity</doc>
            <type name="Entity" c:type="TplEntity*"/>
          </parameter>
          <parameter name="type_mask" transfer-ownership="none">
            <doc xml:whitespace="preserve">event type filter see #TplEventTypeMask</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_dates_async"
              c:identifier="tpl_log_manager_get_dates_async">
        <doc xml:whitespace="preserve">Retrieves a list of #GDate corresponding to each day where
at least one event exist for @target.

It applies for any registered TplLogStore with the #TplLogStore:readable
property %TRUE.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="account" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #TpAccount</doc>
            <type name="TelepathyGLib.Account" c:type="TpAccount*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:whitespace="preserve">a non-NULL #TplEntity</doc>
            <type name="Entity" c:type="TplEntity*"/>
          </parameter>
          <parameter name="type_mask" transfer-ownership="none">
            <doc xml:whitespace="preserve">event type filter see #TplEventTypeMask</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:whitespace="preserve">a callback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_dates_finish"
              c:identifier="tpl_log_manager_get_dates_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">#TRUE if the operation was successful, otherwise #FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="dates"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">a pointer to a #GList used to return the list of #GDate</doc>
            <type name="GLib.List" c:type="GList**">
              <type name="GLib.Date"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_entities_async"
              c:identifier="tpl_log_manager_get_entities_async">
        <doc xml:whitespace="preserve">Start a query looking for all entities for which you have logs in the @account.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="account" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #TpAccount</doc>
            <type name="TelepathyGLib.Account" c:type="TpAccount*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:whitespace="preserve">a callback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_entities_finish"
              c:identifier="tpl_log_manager_get_entities_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">#TRUE if the operation was successful, otherwise #FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="entities"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">a pointer to a #GList used to return the list of #TplEntity, to be freed using something like g_list_free_full (lst, g_object_unref)</doc>
            <type name="GLib.List" c:type="GList**">
              <type name="Entity"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_events_for_date_async"
              c:identifier="tpl_log_manager_get_events_for_date_async">
        <doc xml:whitespace="preserve">Retrieve a list of #TplEvent at @date with @target.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="account" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #TpAccount</doc>
            <type name="TelepathyGLib.Account" c:type="TpAccount*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:whitespace="preserve">a non-NULL #TplEntity</doc>
            <type name="Entity" c:type="TplEntity*"/>
          </parameter>
          <parameter name="type_mask" transfer-ownership="none">
            <doc xml:whitespace="preserve">event type filter see #TplEventTypeMask</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="date" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GDate</doc>
            <type name="GLib.Date" c:type="GDate*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:whitespace="preserve">a callback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_events_for_date_finish"
              c:identifier="tpl_log_manager_get_events_for_date_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">#TRUE if the operation was successful, otherwise #FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="events"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">a pointer to a #GList used to return the list of #TplEvent</doc>
            <type name="GLib.List" c:type="GList**">
              <type name="Event"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_filtered_events_async"
              c:identifier="tpl_log_manager_get_filtered_events_async">
        <doc xml:whitespace="preserve">Retrieve the most recent @num_event events exchanged with @target.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="account" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #TpAccount</doc>
            <type name="TelepathyGLib.Account" c:type="TpAccount*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:whitespace="preserve">a non-NULL #TplEntity</doc>
            <type name="Entity" c:type="TplEntity*"/>
          </parameter>
          <parameter name="type_mask" transfer-ownership="none">
            <doc xml:whitespace="preserve">event type filter see #TplEventTypeMask</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="num_events" transfer-ownership="none">
            <doc xml:whitespace="preserve">number of maximum events to fetch</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     allow-none="1"
                     scope="call"
                     closure="5">
            <doc xml:whitespace="preserve">an optional filter function</doc>
            <type name="LogEventFilter" c:type="TplLogEventFilter"/>
          </parameter>
          <parameter name="filter_user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">user data to pass to @filter</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     allow-none="1"
                     scope="async"
                     closure="7">
            <doc xml:whitespace="preserve">a callback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_filtered_events_finish"
              c:identifier="tpl_log_manager_get_filtered_events_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">#TRUE if the operation was successful, otherwise #FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="events"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">a pointer to a #GList used to return the list #TplEvent</doc>
            <type name="GLib.List" c:type="GList**">
              <type name="Event"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="search_async" c:identifier="tpl_log_manager_search_async">
        <doc xml:whitespace="preserve">Search for all the conversations containing @text.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="text" transfer-ownership="none">
            <doc xml:whitespace="preserve">the pattern to search</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type_mask" transfer-ownership="none">
            <doc xml:whitespace="preserve">event type filter see #TplEventTypeMask</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:whitespace="preserve">a callback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_finish"
              c:identifier="tpl_log_manager_search_finish"
              introspectable="0"
              throws="1">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">#TRUE if the operation was successful, otherwise #FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="hits"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">a pointer to a #GList used to return the list of #TplLogSearchHit</doc>
            <type name="GLib.List" c:type="GList**">
              <type name="SearchHit"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="gpointer" c:type="gpointer"/>
      </field>
    </class>
    <record name="LogManagerClass"
            c:type="TplLogManagerClass"
            glib:is-gtype-struct-for="LogManager">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="LogManagerError" c:type="TplLogManagerError">
      <member name="log_manager_error_add_event"
              value="0"
              c:identifier="TPL_LOG_MANAGER_ERROR_ADD_EVENT"/>
    </enumeration>
    <record name="LogSearchHit" c:type="TplLogSearchHit">
      <doc xml:whitespace="preserve">Represent the context where the search has results.</doc>
      <field name="account" writable="1">
        <type name="TelepathyGLib.Account" c:type="TpAccount*"/>
      </field>
      <field name="target" writable="1">
        <type name="Entity" c:type="TplEntity*"/>
      </field>
      <field name="date" writable="1">
        <type name="GLib.Date" c:type="GDate*"/>
      </field>
    </record>
    <class name="TextEvent"
           c:symbol-prefix="text_event"
           c:type="TplTextEvent"
           parent="Event"
           glib:type-name="TplTextEvent"
           glib:get-type="tpl_text_event_get_type"
           glib:type-struct="TextEventClass">
      <doc xml:whitespace="preserve">An object representing a text log event.</doc>
      <method name="get_edit_timestamp"
              c:identifier="tpl_text_event_get_edit_timestamp">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same value as the #TplTextEvent:edit-timestamp property</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <method name="get_message" c:identifier="tpl_text_event_get_message">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same message as the #TplTextEvent:message property</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_message_token"
              c:identifier="tpl_text_event_get_message_token">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same message as the #TplTextEvent:message-token property</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_message_type"
              c:identifier="tpl_text_event_get_message_type">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same message as the #TplTextEvent:message-type property</doc>
          <type name="TelepathyGLib.ChannelTextMessageType"
                c:type="TpChannelTextMessageType"/>
        </return-value>
      </method>
      <method name="get_supersedes"
              c:identifier="tpl_text_event_get_supersedes">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GList of #TplTextEvent that this event supersedes.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="TextEvent"/>
          </type>
        </return-value>
      </method>
      <method name="get_supersedes_token"
              c:identifier="tpl_text_event_get_supersedes_token">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the same message as the #TplTextEvent:supersedes-token property</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <property name="edit-timestamp"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint64"/>
      </property>
      <property name="message"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="message-token"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="message-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="supersedes-token"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
    </class>
    <record name="TextEventClass"
            c:type="TplTextEventClass"
            disguised="1"
            glib:is-gtype-struct-for="TextEvent">
    </record>
    <record name="TextEventPriv" c:type="TplTextEventPriv" disguised="1">
    </record>
  </namespace>
</repository>
