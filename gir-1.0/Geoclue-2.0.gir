<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="libgeoclue-2.0"/>
  <c:include name="geoclue.h"/>
  <namespace name="Geoclue"
             version="2.0"
             shared-library="libgeoclue-2.so.0"
             c:identifier-prefixes="GClue"
             c:symbol-prefixes="gclue">
    <enumeration name="AccuracyLevel"
                 glib:type-name="GClueAccuracyLevel"
                 glib:get-type="gclue_accuracy_level_get_type"
                 c:type="GClueAccuracyLevel">
      <member name="none"
              value="0"
              c:identifier="GCLUE_ACCURACY_LEVEL_NONE"
              glib:nick="none">
      </member>
      <member name="country"
              value="1"
              c:identifier="GCLUE_ACCURACY_LEVEL_COUNTRY"
              glib:nick="country">
      </member>
      <member name="city"
              value="4"
              c:identifier="GCLUE_ACCURACY_LEVEL_CITY"
              glib:nick="city">
      </member>
      <member name="neighborhood"
              value="5"
              c:identifier="GCLUE_ACCURACY_LEVEL_NEIGHBORHOOD"
              glib:nick="neighborhood">
      </member>
      <member name="street"
              value="6"
              c:identifier="GCLUE_ACCURACY_LEVEL_STREET"
              glib:nick="street">
      </member>
      <member name="exact"
              value="8"
              c:identifier="GCLUE_ACCURACY_LEVEL_EXACT"
              glib:nick="exact">
      </member>
    </enumeration>
    <function-macro name="CLIENT"
                    c:identifier="GCLUE_CLIENT"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="20"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_GET_IFACE"
                    c:identifier="GCLUE_CLIENT_GET_IFACE"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="22"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_PROXY"
                    c:identifier="GCLUE_CLIENT_PROXY"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="150"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_PROXY_CLASS"
                    c:identifier="GCLUE_CLIENT_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="151"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_PROXY_GET_CLASS"
                    c:identifier="GCLUE_CLIENT_PROXY_GET_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="152"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_SKELETON"
                    c:identifier="GCLUE_CLIENT_SKELETON"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="220"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_SKELETON_CLASS"
                    c:identifier="GCLUE_CLIENT_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="221"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_SKELETON_GET_CLASS"
                    c:identifier="GCLUE_CLIENT_SKELETON_GET_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="222"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <interface name="Client"
               c:symbol-prefix="client"
               c:type="GClueClient"
               glib:type-name="GClueClient"
               glib:get-type="gclue_client_get_type"
               glib:type-struct="ClientIface">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-client.c"
           line="421">Abstract interface type for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Client.top_of_page"&gt;org.freedesktop.GeoClue2.Client&lt;/link&gt;.</doc>
      <source-position filename="../libgeoclue/gclue-client.h" line="59"/>
      <function name="interface_info"
                c:identifier="gclue_client_interface_info">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="384">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Client.top_of_page"&gt;org.freedesktop.GeoClue2.Client&lt;/link&gt; D-Bus interface.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="389">A #GDBusInterfaceInfo. Do not free.</doc>
          <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
        </return-value>
      </function>
      <function name="override_properties"
                c:identifier="gclue_client_override_properties">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="397">Overrides all #GObject properties in the #GClueClient interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="405">The last property id.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="399">The class structure for a #GObject derived class.</doc>
            <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
          </parameter>
          <parameter name="property_id_begin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="400">The property id to assign to the first overridden property.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="get_active"
                      invoker="get_active"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="767">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.Active"&gt;"Active"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="775">The property value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="769">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_desktop_id"
                      invoker="get_desktop_id"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="685">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.DesktopId"&gt;"DesktopId"&lt;/link&gt; D-Bus property.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.

&lt;warning&gt;The returned value is only valid until the property changes so on the client-side it is only safe to use this function on the thread where @object was constructed. Use gclue_client_dup_desktop_id() if on another thread.&lt;/warning&gt;</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="44"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="695">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="687">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_distance_threshold"
                      invoker="get_distance_threshold"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="623">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.DistanceThreshold"&gt;"DistanceThreshold"&lt;/link&gt; D-Bus property.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="631">The property value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="625">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_location"
                      invoker="get_location"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="572">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.Location"&gt;"Location"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.

&lt;warning&gt;The returned value is only valid until the property changes so on the client-side it is only safe to use this function on the thread where @object was constructed. Use gclue_client_dup_location() if on another thread.&lt;/warning&gt;</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="48"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="582">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="574">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_requested_accuracy_level"
                      invoker="get_requested_accuracy_level"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="736">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.RequestedAccuracyLevel"&gt;"RequestedAccuracyLevel"&lt;/link&gt; D-Bus property.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="744">The property value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="738">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_time_threshold"
                      invoker="get_time_threshold"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="654">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.TimeThreshold"&gt;"TimeThreshold"&lt;/link&gt; D-Bus property.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="662">The property value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="656">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_start">
        <source-position filename="../libgeoclue/gclue-client.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_stop">
        <source-position filename="../libgeoclue/gclue-client.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="location_updated">
        <source-position filename="../libgeoclue/gclue-client.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="arg_old" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="arg_new" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="call_start" c:identifier="gclue_client_call_start">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="815">Asynchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Client.Start"&gt;Start()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_client_call_start_finish() to get the result of the operation.

See gclue_client_call_start_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="817">A #GClueClientProxy.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="818">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="819">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="820">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_start_finish"
              c:identifier="gclue_client_call_start_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="845">Finishes an operation started with gclue_client_call_start().</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="97"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="853">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="847">A #GClueClientProxy.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="848">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_client_call_start().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_start_sync"
              c:identifier="gclue_client_call_start_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="872">Synchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Client.Start"&gt;Start()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See gclue_client_call_start() for the asynchronous version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="102"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="882">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="874">A #GClueClientProxy.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="875">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_stop" c:identifier="gclue_client_call_stop">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="907">Asynchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Client.Stop"&gt;Stop()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_client_call_stop_finish() to get the result of the operation.

See gclue_client_call_stop_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="909">A #GClueClientProxy.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="910">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="911">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="912">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_stop_finish"
              c:identifier="gclue_client_call_stop_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="937">Finishes an operation started with gclue_client_call_stop().</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="113"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="945">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="939">A #GClueClientProxy.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="940">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_client_call_stop().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_stop_sync"
              c:identifier="gclue_client_call_stop_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="964">Synchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Client.Stop"&gt;Stop()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See gclue_client_call_stop() for the asynchronous version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="118"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="974">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="966">A #GClueClientProxy.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="967">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_start" c:identifier="gclue_client_complete_start">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="999">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Client.Start"&gt;Start()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1001">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1002">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_stop" c:identifier="gclue_client_complete_stop">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="1017">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Client.Stop"&gt;Stop()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1019">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1020">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_desktop_id"
              c:identifier="gclue_client_dup_desktop_id"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="703">Gets a copy of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.DesktopId"&gt;"DesktopId"&lt;/link&gt; D-Bus property.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="137"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="711">The property value or %NULL if the property is not set. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="705">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="dup_location"
              c:identifier="gclue_client_dup_location"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="590">Gets a copy of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.Location"&gt;"Location"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="127"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="598">The property value or %NULL if the property is not set. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="592">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="emit_location_updated"
              c:identifier="gclue_client_emit_location_updated">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="798">Emits the &lt;link linkend="gdbus-signal-org-freedesktop-GeoClue2-Client.LocationUpdated"&gt;"LocationUpdated"&lt;/link&gt; D-Bus signal.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="800">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="arg_old" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="801">Argument to pass with the signal.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="arg_new" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="802">Argument to pass with the signal.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_active"
              c:identifier="gclue_client_get_active"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="767">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.Active"&gt;"Active"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="775">The property value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="769">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_desktop_id"
              c:identifier="gclue_client_get_desktop_id"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="685">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.DesktopId"&gt;"DesktopId"&lt;/link&gt; D-Bus property.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.

&lt;warning&gt;The returned value is only valid until the property changes so on the client-side it is only safe to use this function on the thread where @object was constructed. Use gclue_client_dup_desktop_id() if on another thread.&lt;/warning&gt;</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="136"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="695">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="687">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_distance_threshold"
              c:identifier="gclue_client_get_distance_threshold"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="623">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.DistanceThreshold"&gt;"DistanceThreshold"&lt;/link&gt; D-Bus property.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="631">The property value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="625">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="gclue_client_get_location"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="572">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.Location"&gt;"Location"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.

&lt;warning&gt;The returned value is only valid until the property changes so on the client-side it is only safe to use this function on the thread where @object was constructed. Use gclue_client_dup_location() if on another thread.&lt;/warning&gt;</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="126"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="582">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="574">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_requested_accuracy_level"
              c:identifier="gclue_client_get_requested_accuracy_level"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="736">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.RequestedAccuracyLevel"&gt;"RequestedAccuracyLevel"&lt;/link&gt; D-Bus property.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="744">The property value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="738">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_time_threshold"
              c:identifier="gclue_client_get_time_threshold"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="654">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.TimeThreshold"&gt;"TimeThreshold"&lt;/link&gt; D-Bus property.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="662">The property value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="656">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_active"
              c:identifier="gclue_client_set_active"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="783">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.Active"&gt;"Active"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="785">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="786">The value to set.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_desktop_id"
              c:identifier="gclue_client_set_desktop_id"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="721">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.DesktopId"&gt;"DesktopId"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="138"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="723">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="724">The value to set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_distance_threshold"
              c:identifier="gclue_client_set_distance_threshold"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="639">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.DistanceThreshold"&gt;"DistanceThreshold"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="641">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="642">The value to set.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_location"
              c:identifier="gclue_client_set_location"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="608">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.Location"&gt;"Location"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="610">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="611">The value to set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_requested_accuracy_level"
              c:identifier="gclue_client_set_requested_accuracy_level"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="752">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.RequestedAccuracyLevel"&gt;"RequestedAccuracyLevel"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="754">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="755">The value to set.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_time_threshold"
              c:identifier="gclue_client_set_time_threshold"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="670">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.TimeThreshold"&gt;"TimeThreshold"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is both readable and writable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="672">A #GClueClient.</doc>
            <type name="Client" c:type="GClueClient*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="673">The value to set.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="active" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="561">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.Active"&gt;"Active"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="desktop-id" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="543">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.DesktopId"&gt;"DesktopId"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is both readable and writable, it is meaningful to both read from it and write to it on both the service- and client-side.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="distance-threshold"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="525">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.DistanceThreshold"&gt;"DistanceThreshold"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is both readable and writable, it is meaningful to both read from it and write to it on both the service- and client-side.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="location" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="516">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.Location"&gt;"Location"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="requested-accuracy-level"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="552">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.RequestedAccuracyLevel"&gt;"RequestedAccuracyLevel"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is both readable and writable, it is meaningful to both read from it and write to it on both the service- and client-side.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="time-threshold" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="534">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Client.TimeThreshold"&gt;"TimeThreshold"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is both readable and writable, it is meaningful to both read from it and write to it on both the service- and client-side.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <glib:signal name="handle-start" when="last">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="450">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Client.Start"&gt;Start()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call gclue_client_complete_start() or e.g. g_dbus_method_invocation_return_error() on it) and no order signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="459">%TRUE if the invocation was handled, %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="453">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-stop" when="last">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="472">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Client.Stop"&gt;Stop()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call gclue_client_complete_stop() or e.g. g_dbus_method_invocation_return_error() on it) and no order signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="481">%TRUE if the invocation was handled, %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="475">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="location-updated" when="last">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="495">On the client-side, this signal is emitted whenever the D-Bus signal &lt;link linkend="gdbus-signal-org-freedesktop-GeoClue2-Client.LocationUpdated"&gt;"LocationUpdated"&lt;/link&gt; is received.

On the service-side, this signal can be used with e.g. g_signal_emit_by_name() to make the object emit the D-Bus signal.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg_old" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="498">Argument.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="arg_new" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="499">Argument.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="ClientIface"
            c:type="GClueClientIface"
            glib:is-gtype-struct-for="Client">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-client.c"
           line="427">Virtual table for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Client.top_of_page"&gt;org.freedesktop.GeoClue2.Client&lt;/link&gt;.</doc>
      <source-position filename="../libgeoclue/gclue-client.h" line="59"/>
      <field name="parent_iface">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="429">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="handle_start">
        <callback name="handle_start">
          <source-position filename="../libgeoclue/gclue-client.h" line="34"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Client" c:type="GClueClient*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_stop">
        <callback name="handle_stop">
          <source-position filename="../libgeoclue/gclue-client.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Client" c:type="GClueClient*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_active">
        <callback name="get_active">
          <source-position filename="../libgeoclue/gclue-client.h" line="42"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="775">The property value.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-client.c"
                   line="769">A #GClueClient.</doc>
              <type name="Client" c:type="GClueClient*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_desktop_id">
        <callback name="get_desktop_id">
          <source-position filename="../libgeoclue/gclue-client.h" line="44"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="695">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-client.c"
                   line="687">A #GClueClient.</doc>
              <type name="Client" c:type="GClueClient*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_distance_threshold">
        <callback name="get_distance_threshold">
          <source-position filename="../libgeoclue/gclue-client.h" line="46"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="631">The property value.</doc>
            <type name="guint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-client.c"
                   line="625">A #GClueClient.</doc>
              <type name="Client" c:type="GClueClient*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_location">
        <callback name="get_location">
          <source-position filename="../libgeoclue/gclue-client.h" line="48"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="582">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-client.c"
                   line="574">A #GClueClient.</doc>
              <type name="Client" c:type="GClueClient*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_requested_accuracy_level">
        <callback name="get_requested_accuracy_level">
          <source-position filename="../libgeoclue/gclue-client.h" line="50"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="744">The property value.</doc>
            <type name="guint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-client.c"
                   line="738">A #GClueClient.</doc>
              <type name="Client" c:type="GClueClient*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_time_threshold">
        <callback name="get_time_threshold">
          <source-position filename="../libgeoclue/gclue-client.h" line="52"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="662">The property value.</doc>
            <type name="guint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-client.c"
                   line="656">A #GClueClient.</doc>
              <type name="Client" c:type="GClueClient*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="location_updated">
        <callback name="location_updated">
          <source-position filename="../libgeoclue/gclue-client.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Client" c:type="GClueClient*"/>
            </parameter>
            <parameter name="arg_old" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="arg_new" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="ClientProxy"
           c:symbol-prefix="client_proxy"
           c:type="GClueClientProxy"
           parent="Gio.DBusProxy"
           glib:type-name="GClueClientProxy"
           glib:get-type="gclue_client_proxy_get_type"
           glib:type-struct="ClientProxyClass">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-client.c"
           line="1037">The #GClueClientProxy structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="../libgeoclue/gclue-client.h" line="170"/>
      <implements name="Client"/>
      <implements name="Gio.AsyncInitable"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="Gio.Initable"/>
      <constructor name="new_finish"
                   c:identifier="gclue_client_proxy_new_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="1377">Finishes an operation started with gclue_client_proxy_new().</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="186"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="1384">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="ClientProxy" c:type="GClueClient*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1379">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_client_proxy_new().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_finish"
                   c:identifier="gclue_client_proxy_new_for_bus_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="1467">Finishes an operation started with gclue_client_proxy_new_for_bus().</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="205"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="1474">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="ClientProxy" c:type="GClueClient*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1469">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_client_proxy_new_for_bus().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_sync"
                   c:identifier="gclue_client_proxy_new_for_bus_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="1492">Like gclue_client_proxy_new_sync() but takes a #GBusType instead of a #GDBusConnection.

The calling thread is blocked until a reply is received.

See gclue_client_proxy_new_for_bus() for the asynchronous version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="208"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="1507">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="ClientProxy" c:type="GClueClient*"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1494">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1495">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1496">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1497">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1498">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="gclue_client_proxy_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="1402">Synchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Client.top_of_page"&gt;org.freedesktop.GeoClue2.Client&lt;/link&gt;. See g_dbus_proxy_new_sync() for more details.

The calling thread is blocked until a reply is received.

See gclue_client_proxy_new() for the asynchronous version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="189"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="1417">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="ClientProxy" c:type="GClueClient*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1404">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1405">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1406">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1407">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1408">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="create" c:identifier="gclue_client_proxy_create">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-helpers.c"
             line="231">A utility function to create a #GClueClientProxy without having to deal with
a #GClueManager. See also gclue_client_proxy_create_full() which improves
resource management.

This is identitcal to calling gclue_client_proxy_create_full() without any
flags set.

See #gclue_client_proxy_create_sync() for the synchronous, blocking version
of this function.</doc>
        <source-position filename="../libgeoclue/gclue-helpers.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="desktop_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="233">The desktop file id (the basename of the desktop file).</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="accuracy_level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="234">The requested accuracy level as #GClueAccuracyLevel.</doc>
            <type name="AccuracyLevel" c:type="GClueAccuracyLevel"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="235">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="236">A #GAsyncReadyCallback to call when the results are ready.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="237">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_finish"
                c:identifier="gclue_client_proxy_create_finish"
                throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-helpers.c"
             line="268">Finishes an operation started with gclue_client_proxy_create().</doc>
        <source-position filename="../libgeoclue/gclue-helpers.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-helpers.c"
               line="276">The constructed proxy
object or %NULL if @error is set.</doc>
          <type name="ClientProxy" c:type="GClueClient*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="270">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to
         gclue_client_proxy_create().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_full"
                c:identifier="gclue_client_proxy_create_full">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-helpers.c"
             line="319">A utility function to create a #GClueClientProxy without having to deal with
a #GClueManager.

By setting the #GCLUE_CLIENT_PROXY_CREATE_AUTO_DELETE flag you can ensure
that the client will be deleted again from the geoclue service when
it is destroyed. This flag should be used unless you are doing explicit
resource management.

See #gclue_client_proxy_create_full_sync() for the synchronous, blocking
version of this function.</doc>
        <source-position filename="../libgeoclue/gclue-helpers.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="desktop_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="321">The desktop file id (the basename of the desktop file).</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="accuracy_level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="322">The requested accuracy level as #GClueAccuracyLevel.</doc>
            <type name="AccuracyLevel" c:type="GClueAccuracyLevel"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="323">#GClueClientProxyCreateFlags to modify the creation.</doc>
            <type name="ClientProxyCreateFlags"
                  c:type="GClueClientProxyCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="324">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="325">A #GAsyncReadyCallback to call when the results are ready.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="326">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_full_finish"
                c:identifier="gclue_client_proxy_create_full_finish"
                throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-helpers.c"
             line="366">Finishes an operation started with gclue_client_proxy_create_full().</doc>
        <source-position filename="../libgeoclue/gclue-helpers.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-helpers.c"
               line="374">The constructed proxy
object or %NULL if @error is set.</doc>
          <type name="ClientProxy" c:type="GClueClient*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="368">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to
         gclue_client_proxy_create().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_full_sync"
                c:identifier="gclue_client_proxy_create_full_sync"
                throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-helpers.c"
             line="405">The synchronous and blocking version of #gclue_client_proxy_create_full().

By setting the #GCLUE_CLIENT_PROXY_CREATE_AUTO_DELETE flag you can ensure
that the client will be deleted again from the geoclue service when
it is destroyed. This flag should be used unless you are doing explicit
resource management.</doc>
        <source-position filename="../libgeoclue/gclue-helpers.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-helpers.c"
               line="420">The constructed proxy
object or %NULL if @error is set.</doc>
          <type name="ClientProxy" c:type="GClueClient*"/>
        </return-value>
        <parameters>
          <parameter name="desktop_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="407">The desktop file id (the basename of the desktop file).</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="accuracy_level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="408">The requested accuracy level as #GClueAccuracyLevel.</doc>
            <type name="AccuracyLevel" c:type="GClueAccuracyLevel"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="409">#GClueClientProxyCreateFlags to modify the creation.</doc>
            <type name="ClientProxyCreateFlags"
                  c:type="GClueClientProxyCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="410">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_sync"
                c:identifier="gclue_client_proxy_create_sync"
                throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-helpers.c"
             line="288">The synchronous and blocking version of #gclue_client_proxy_create().
See also gclue_client_proxy_create_full_sync() which improves resource
management.

This function is identical to calling gclue_client_proxy_create_full_sync()
without any flags set.</doc>
        <source-position filename="../libgeoclue/gclue-helpers.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-helpers.c"
               line="302">The constructed proxy
object or %NULL if @error is set.</doc>
          <type name="ClientProxy" c:type="GClueClient*"/>
        </return-value>
        <parameters>
          <parameter name="desktop_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="290">The desktop file id (the basename of the desktop file).</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="accuracy_level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="291">The requested accuracy level as #GClueAccuracyLevel.</doc>
            <type name="AccuracyLevel" c:type="GClueAccuracyLevel"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-helpers.c"
                 line="292">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </function>
      <function name="new" c:identifier="gclue_client_proxy_new">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="1347">Asynchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Client.top_of_page"&gt;org.freedesktop.GeoClue2.Client&lt;/link&gt;. See g_dbus_proxy_new() for more details.

When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_client_proxy_new_finish() to get the result of the operation.

See gclue_client_proxy_new_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="178"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1349">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1350">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1351">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1352">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1353">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1354">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1355">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_for_bus"
                c:identifier="gclue_client_proxy_new_for_bus">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="1437">Like gclue_client_proxy_new() but takes a #GBusType instead of a #GDBusConnection.

When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_client_proxy_new_for_bus_finish() to get the result of the operation.

See gclue_client_proxy_new_for_bus_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="197"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1439">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1440">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1441">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1442">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1443">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1444">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-client.c"
                 line="1445">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusProxy" c:type="GDBusProxy"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ClientProxyPrivate" c:type="GClueClientProxyPrivate*"/>
      </field>
    </class>
    <record name="ClientProxyClass"
            c:type="GClueClientProxyClass"
            glib:is-gtype-struct-for="ClientProxy">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-client.c"
           line="1043">Class structure for #GClueClientProxy.</doc>
      <source-position filename="../libgeoclue/gclue-client.h" line="170"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="1045">The parent class.</doc>
        <type name="Gio.DBusProxyClass" c:type="GDBusProxyClass"/>
      </field>
    </record>
    <bitfield name="ClientProxyCreateFlags"
              glib:type-name="GClueClientProxyCreateFlags"
              glib:get-type="gclue_client_proxy_create_flags_get_type"
              c:type="GClueClientProxyCreateFlags">
      <member name="none"
              value="0"
              c:identifier="GCLUE_CLIENT_PROXY_CREATE_NONE"
              glib:nick="none">
      </member>
      <member name="auto_delete"
              value="1"
              c:identifier="GCLUE_CLIENT_PROXY_CREATE_AUTO_DELETE"
              glib:nick="auto-delete">
      </member>
    </bitfield>
    <record name="ClientProxyPrivate"
            c:type="GClueClientProxyPrivate"
            disguised="1">
      <source-position filename="../libgeoclue/gclue-client.h" line="158"/>
    </record>
    <class name="ClientSkeleton"
           c:symbol-prefix="client_skeleton"
           c:type="GClueClientSkeleton"
           parent="Gio.DBusInterfaceSkeleton"
           glib:type-name="GClueClientSkeleton"
           glib:get-type="gclue_client_skeleton_get_type"
           glib:type-struct="ClientSkeletonClass">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-client.c"
           line="1529">The #GClueClientSkeleton structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="../libgeoclue/gclue-client.h" line="240"/>
      <implements name="Client"/>
      <implements name="Gio.DBusInterface"/>
      <constructor name="new" c:identifier="gclue_client_skeleton_new">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="2074">Creates a skeleton object for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Client.top_of_page"&gt;org.freedesktop.GeoClue2.Client&lt;/link&gt;.</doc>
        <source-position filename="../libgeoclue/gclue-client.h" line="248"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="2079">The skeleton object.</doc>
          <type name="ClientSkeleton" c:type="GClueClient*"/>
        </return-value>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusInterfaceSkeleton"
              c:type="GDBusInterfaceSkeleton"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ClientSkeletonPrivate"
              c:type="GClueClientSkeletonPrivate*"/>
      </field>
    </class>
    <record name="ClientSkeletonClass"
            c:type="GClueClientSkeletonClass"
            glib:is-gtype-struct-for="ClientSkeleton">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-client.c"
           line="1535">Class structure for #GClueClientSkeleton.</doc>
      <source-position filename="../libgeoclue/gclue-client.h" line="240"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="1537">The parent class.</doc>
        <type name="Gio.DBusInterfaceSkeletonClass"
              c:type="GDBusInterfaceSkeletonClass"/>
      </field>
    </record>
    <record name="ClientSkeletonPrivate"
            c:type="GClueClientSkeletonPrivate"
            disguised="1">
      <source-position filename="../libgeoclue/gclue-client.h" line="228"/>
    </record>
    <function-macro name="IS_CLIENT"
                    c:identifier="GCLUE_IS_CLIENT"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="21"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLIENT_PROXY"
                    c:identifier="GCLUE_IS_CLIENT_PROXY"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="153"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLIENT_PROXY_CLASS"
                    c:identifier="GCLUE_IS_CLIENT_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="154"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLIENT_SKELETON"
                    c:identifier="GCLUE_IS_CLIENT_SKELETON"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="223"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLIENT_SKELETON_CLASS"
                    c:identifier="GCLUE_IS_CLIENT_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-client.h" line="224"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LOCATION"
                    c:identifier="GCLUE_IS_LOCATION"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="21"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LOCATION_PROXY"
                    c:identifier="GCLUE_IS_LOCATION_PROXY"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="94"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LOCATION_PROXY_CLASS"
                    c:identifier="GCLUE_IS_LOCATION_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="95"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LOCATION_SKELETON"
                    c:identifier="GCLUE_IS_LOCATION_SKELETON"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="164"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LOCATION_SKELETON_CLASS"
                    c:identifier="GCLUE_IS_LOCATION_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="165"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MANAGER"
                    c:identifier="GCLUE_IS_MANAGER"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="21"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MANAGER_PROXY"
                    c:identifier="GCLUE_IS_MANAGER_PROXY"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="177"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MANAGER_PROXY_CLASS"
                    c:identifier="GCLUE_IS_MANAGER_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="178"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MANAGER_SKELETON"
                    c:identifier="GCLUE_IS_MANAGER_SKELETON"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="247"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MANAGER_SKELETON_CLASS"
                    c:identifier="GCLUE_IS_MANAGER_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="248"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SIMPLE"
                    c:identifier="GCLUE_IS_SIMPLE"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-simple.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SIMPLE_CLASS"
                    c:identifier="GCLUE_IS_SIMPLE_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-simple.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOCATION"
                    c:identifier="GCLUE_LOCATION"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="20"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOCATION_GET_IFACE"
                    c:identifier="GCLUE_LOCATION_GET_IFACE"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="22"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOCATION_PROXY"
                    c:identifier="GCLUE_LOCATION_PROXY"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="91"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOCATION_PROXY_CLASS"
                    c:identifier="GCLUE_LOCATION_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="92"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOCATION_PROXY_GET_CLASS"
                    c:identifier="GCLUE_LOCATION_PROXY_GET_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="93"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOCATION_SKELETON"
                    c:identifier="GCLUE_LOCATION_SKELETON"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="161"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOCATION_SKELETON_CLASS"
                    c:identifier="GCLUE_LOCATION_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="162"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOCATION_SKELETON_GET_CLASS"
                    c:identifier="GCLUE_LOCATION_SKELETON_GET_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-location.h" line="163"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <interface name="Location"
               c:symbol-prefix="location"
               c:type="GClueLocation"
               glib:type-name="GClueLocation"
               glib:get-type="gclue_location_get_type"
               glib:type-struct="LocationIface">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-location.c"
           line="346">Abstract interface type for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Location.top_of_page"&gt;org.freedesktop.GeoClue2.Location&lt;/link&gt;.</doc>
      <source-position filename="../libgeoclue/gclue-location.h" line="48"/>
      <function name="interface_info"
                c:identifier="gclue_location_interface_info">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="307">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Location.top_of_page"&gt;org.freedesktop.GeoClue2.Location&lt;/link&gt; D-Bus interface.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="312">A #GDBusInterfaceInfo. Do not free.</doc>
          <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
        </return-value>
      </function>
      <function name="override_properties"
                c:identifier="gclue_location_override_properties">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="320">Overrides all #GObject properties in the #GClueLocation interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="328">The last property id.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="322">The class structure for a #GObject derived class.</doc>
            <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
          </parameter>
          <parameter name="property_id_begin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="323">The property id to assign to the first overridden property.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="get_accuracy"
                      invoker="get_accuracy"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="510">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Accuracy"&gt;"Accuracy"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="518">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="512">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_altitude"
                      invoker="get_altitude"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="541">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Altitude"&gt;"Altitude"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="549">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="543">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_description"
                      invoker="get_description"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="634">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Description"&gt;"Description"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.

&lt;warning&gt;The returned value is only valid until the property changes so on the client-side it is only safe to use this function on the thread where @object was constructed. Use gclue_location_dup_description() if on another thread.&lt;/warning&gt;</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="36"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="644">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="636">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_heading"
                      invoker="get_heading"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="603">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Heading"&gt;"Heading"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="611">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="605">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_latitude"
                      invoker="get_latitude"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="448">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Latitude"&gt;"Latitude"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="456">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="450">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_longitude"
                      invoker="get_longitude"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="479">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Longitude"&gt;"Longitude"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="487">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="481">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_speed" invoker="get_speed" introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="572">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Speed"&gt;"Speed"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="580">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="574">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_timestamp"
                      invoker="get_timestamp"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="685">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Timestamp"&gt;"Timestamp"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.

&lt;warning&gt;The returned value is only valid until the property changes so on the client-side it is only safe to use this function on the thread where @object was constructed. Use gclue_location_dup_timestamp() if on another thread.&lt;/warning&gt;</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="46"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="695">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="687">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="dup_description"
              c:identifier="gclue_location_dup_description"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="652">Gets a copy of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Description"&gt;"Description"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="80"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="660">The property value or %NULL if the property is not set. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="654">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="dup_timestamp"
              c:identifier="gclue_location_dup_timestamp"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="703">Gets a copy of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Timestamp"&gt;"Timestamp"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="84"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="711">The property value or %NULL if the property is not set. The returned value should be freed with g_variant_unref().</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="705">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_accuracy"
              c:identifier="gclue_location_get_accuracy"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="510">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Accuracy"&gt;"Accuracy"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="518">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="512">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_altitude"
              c:identifier="gclue_location_get_altitude"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="541">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Altitude"&gt;"Altitude"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="549">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="543">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="gclue_location_get_description"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="634">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Description"&gt;"Description"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.

&lt;warning&gt;The returned value is only valid until the property changes so on the client-side it is only safe to use this function on the thread where @object was constructed. Use gclue_location_dup_description() if on another thread.&lt;/warning&gt;</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="79"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="644">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="636">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_heading"
              c:identifier="gclue_location_get_heading"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="603">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Heading"&gt;"Heading"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="611">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="605">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_latitude"
              c:identifier="gclue_location_get_latitude"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="448">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Latitude"&gt;"Latitude"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="456">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="450">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_longitude"
              c:identifier="gclue_location_get_longitude"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="479">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Longitude"&gt;"Longitude"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="487">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="481">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_speed"
              c:identifier="gclue_location_get_speed"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="572">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Speed"&gt;"Speed"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="580">The property value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="574">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp"
              c:identifier="gclue_location_get_timestamp"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="685">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Timestamp"&gt;"Timestamp"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.

&lt;warning&gt;The returned value is only valid until the property changes so on the client-side it is only safe to use this function on the thread where @object was constructed. Use gclue_location_dup_timestamp() if on another thread.&lt;/warning&gt;</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="83"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="695">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="687">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_accuracy"
              c:identifier="gclue_location_set_accuracy"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="526">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Accuracy"&gt;"Accuracy"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="528">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="529">The value to set.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_altitude"
              c:identifier="gclue_location_set_altitude"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="557">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Altitude"&gt;"Altitude"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="559">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="560">The value to set.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="gclue_location_set_description"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="670">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Description"&gt;"Description"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="672">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="673">The value to set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_heading"
              c:identifier="gclue_location_set_heading"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="619">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Heading"&gt;"Heading"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="621">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="622">The value to set.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_latitude"
              c:identifier="gclue_location_set_latitude"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="464">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Latitude"&gt;"Latitude"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="466">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="467">The value to set.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_longitude"
              c:identifier="gclue_location_set_longitude"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="495">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Longitude"&gt;"Longitude"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="497">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="498">The value to set.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_speed"
              c:identifier="gclue_location_set_speed"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="588">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Speed"&gt;"Speed"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="590">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="591">The value to set.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timestamp"
              c:identifier="gclue_location_set_timestamp"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="721">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Timestamp"&gt;"Timestamp"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="723">A #GClueLocation.</doc>
            <type name="Location" c:type="GClueLocation*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="724">The value to set.</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <property name="accuracy" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="392">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Accuracy"&gt;"Accuracy"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="altitude" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="401">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Altitude"&gt;"Altitude"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="description" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="428">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Description"&gt;"Description"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="heading" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="419">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Heading"&gt;"Heading"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="latitude" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="374">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Latitude"&gt;"Latitude"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="longitude" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="383">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Longitude"&gt;"Longitude"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="speed" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="410">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Speed"&gt;"Speed"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="timestamp" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="437">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Location.Timestamp"&gt;"Timestamp"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="GLib.Variant"/>
      </property>
    </interface>
    <record name="LocationIface"
            c:type="GClueLocationIface"
            glib:is-gtype-struct-for="Location">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-location.c"
           line="352">Virtual table for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Location.top_of_page"&gt;org.freedesktop.GeoClue2.Location&lt;/link&gt;.</doc>
      <source-position filename="../libgeoclue/gclue-location.h" line="48"/>
      <field name="parent_iface">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="354">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_accuracy">
        <callback name="get_accuracy">
          <source-position filename="../libgeoclue/gclue-location.h"
                           line="32"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="518">The property value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-location.c"
                   line="512">A #GClueLocation.</doc>
              <type name="Location" c:type="GClueLocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_altitude">
        <callback name="get_altitude">
          <source-position filename="../libgeoclue/gclue-location.h"
                           line="34"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="549">The property value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-location.c"
                   line="543">A #GClueLocation.</doc>
              <type name="Location" c:type="GClueLocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_description">
        <callback name="get_description">
          <source-position filename="../libgeoclue/gclue-location.h"
                           line="36"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="644">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-location.c"
                   line="636">A #GClueLocation.</doc>
              <type name="Location" c:type="GClueLocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_heading">
        <callback name="get_heading">
          <source-position filename="../libgeoclue/gclue-location.h"
                           line="38"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="611">The property value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-location.c"
                   line="605">A #GClueLocation.</doc>
              <type name="Location" c:type="GClueLocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_latitude">
        <callback name="get_latitude">
          <source-position filename="../libgeoclue/gclue-location.h"
                           line="40"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="456">The property value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-location.c"
                   line="450">A #GClueLocation.</doc>
              <type name="Location" c:type="GClueLocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_longitude">
        <callback name="get_longitude">
          <source-position filename="../libgeoclue/gclue-location.h"
                           line="42"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="487">The property value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-location.c"
                   line="481">A #GClueLocation.</doc>
              <type name="Location" c:type="GClueLocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_speed">
        <callback name="get_speed">
          <source-position filename="../libgeoclue/gclue-location.h"
                           line="44"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="580">The property value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-location.c"
                   line="574">A #GClueLocation.</doc>
              <type name="Location" c:type="GClueLocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_timestamp">
        <callback name="get_timestamp">
          <source-position filename="../libgeoclue/gclue-location.h"
                           line="46"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="695">The property value or %NULL if the property is not set. Do not free the returned value, it belongs to @object.</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-location.c"
                   line="687">A #GClueLocation.</doc>
              <type name="Location" c:type="GClueLocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="LocationProxy"
           c:symbol-prefix="location_proxy"
           c:type="GClueLocationProxy"
           parent="Gio.DBusProxy"
           glib:type-name="GClueLocationProxy"
           glib:get-type="gclue_location_proxy_get_type"
           glib:type-struct="LocationProxyClass">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-location.c"
           line="738">The #GClueLocationProxy structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="../libgeoclue/gclue-location.h" line="111"/>
      <implements name="Location"/>
      <implements name="Gio.AsyncInitable"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="Gio.Initable"/>
      <constructor name="new_finish"
                   c:identifier="gclue_location_proxy_new_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="1108">Finishes an operation started with gclue_location_proxy_new().</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="127"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="1115">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="LocationProxy" c:type="GClueLocation*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1110">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_location_proxy_new().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_finish"
                   c:identifier="gclue_location_proxy_new_for_bus_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="1198">Finishes an operation started with gclue_location_proxy_new_for_bus().</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="146"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="1205">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="LocationProxy" c:type="GClueLocation*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1200">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_location_proxy_new_for_bus().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_sync"
                   c:identifier="gclue_location_proxy_new_for_bus_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="1223">Like gclue_location_proxy_new_sync() but takes a #GBusType instead of a #GDBusConnection.

The calling thread is blocked until a reply is received.

See gclue_location_proxy_new_for_bus() for the asynchronous version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="149"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="1238">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="LocationProxy" c:type="GClueLocation*"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1225">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1226">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1227">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1228">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1229">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="gclue_location_proxy_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="1133">Synchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Location.top_of_page"&gt;org.freedesktop.GeoClue2.Location&lt;/link&gt;. See g_dbus_proxy_new_sync() for more details.

The calling thread is blocked until a reply is received.

See gclue_location_proxy_new() for the asynchronous version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="130"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="1148">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="LocationProxy" c:type="GClueLocation*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1135">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1136">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1137">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1138">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1139">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new" c:identifier="gclue_location_proxy_new">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="1078">Asynchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Location.top_of_page"&gt;org.freedesktop.GeoClue2.Location&lt;/link&gt;. See g_dbus_proxy_new() for more details.

When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_location_proxy_new_finish() to get the result of the operation.

See gclue_location_proxy_new_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1080">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1081">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1082">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1083">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1084">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1085">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1086">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_for_bus"
                c:identifier="gclue_location_proxy_new_for_bus">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="1168">Like gclue_location_proxy_new() but takes a #GBusType instead of a #GDBusConnection.

When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_location_proxy_new_for_bus_finish() to get the result of the operation.

See gclue_location_proxy_new_for_bus_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="138"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1170">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1171">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1172">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1173">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1174">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1175">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-location.c"
                 line="1176">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusProxy" c:type="GDBusProxy"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="LocationProxyPrivate" c:type="GClueLocationProxyPrivate*"/>
      </field>
    </class>
    <record name="LocationProxyClass"
            c:type="GClueLocationProxyClass"
            glib:is-gtype-struct-for="LocationProxy">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-location.c"
           line="744">Class structure for #GClueLocationProxy.</doc>
      <source-position filename="../libgeoclue/gclue-location.h" line="111"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="746">The parent class.</doc>
        <type name="Gio.DBusProxyClass" c:type="GDBusProxyClass"/>
      </field>
    </record>
    <record name="LocationProxyPrivate"
            c:type="GClueLocationProxyPrivate"
            disguised="1">
      <source-position filename="../libgeoclue/gclue-location.h" line="99"/>
    </record>
    <class name="LocationSkeleton"
           c:symbol-prefix="location_skeleton"
           c:type="GClueLocationSkeleton"
           parent="Gio.DBusInterfaceSkeleton"
           glib:type-name="GClueLocationSkeleton"
           glib:get-type="gclue_location_skeleton_get_type"
           glib:type-struct="LocationSkeletonClass">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-location.c"
           line="1260">The #GClueLocationSkeleton structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="../libgeoclue/gclue-location.h" line="181"/>
      <implements name="Location"/>
      <implements name="Gio.DBusInterface"/>
      <constructor name="new" c:identifier="gclue_location_skeleton_new">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="1804">Creates a skeleton object for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Location.top_of_page"&gt;org.freedesktop.GeoClue2.Location&lt;/link&gt;.</doc>
        <source-position filename="../libgeoclue/gclue-location.h" line="189"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="1809">The skeleton object.</doc>
          <type name="LocationSkeleton" c:type="GClueLocation*"/>
        </return-value>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusInterfaceSkeleton"
              c:type="GDBusInterfaceSkeleton"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="LocationSkeletonPrivate"
              c:type="GClueLocationSkeletonPrivate*"/>
      </field>
    </class>
    <record name="LocationSkeletonClass"
            c:type="GClueLocationSkeletonClass"
            glib:is-gtype-struct-for="LocationSkeleton">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-location.c"
           line="1266">Class structure for #GClueLocationSkeleton.</doc>
      <source-position filename="../libgeoclue/gclue-location.h" line="181"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="1268">The parent class.</doc>
        <type name="Gio.DBusInterfaceSkeletonClass"
              c:type="GDBusInterfaceSkeletonClass"/>
      </field>
    </record>
    <record name="LocationSkeletonPrivate"
            c:type="GClueLocationSkeletonPrivate"
            disguised="1">
      <source-position filename="../libgeoclue/gclue-location.h" line="169"/>
    </record>
    <function-macro name="MANAGER"
                    c:identifier="GCLUE_MANAGER"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="20"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MANAGER_GET_IFACE"
                    c:identifier="GCLUE_MANAGER_GET_IFACE"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="22"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MANAGER_PROXY"
                    c:identifier="GCLUE_MANAGER_PROXY"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="174"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MANAGER_PROXY_CLASS"
                    c:identifier="GCLUE_MANAGER_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="175"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MANAGER_PROXY_GET_CLASS"
                    c:identifier="GCLUE_MANAGER_PROXY_GET_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="176"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MANAGER_SKELETON"
                    c:identifier="GCLUE_MANAGER_SKELETON"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="244"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MANAGER_SKELETON_CLASS"
                    c:identifier="GCLUE_MANAGER_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="245"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MANAGER_SKELETON_GET_CLASS"
                    c:identifier="GCLUE_MANAGER_SKELETON_GET_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-manager.h" line="246"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <interface name="Manager"
               c:symbol-prefix="manager"
               c:type="GClueManager"
               glib:type-name="GClueManager"
               glib:get-type="gclue_manager_get_type"
               glib:type-struct="ManagerIface">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-manager.c"
           line="379">Abstract interface type for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Manager.top_of_page"&gt;org.freedesktop.GeoClue2.Manager&lt;/link&gt;.</doc>
      <source-position filename="../libgeoclue/gclue-manager.h" line="55"/>
      <function name="interface_info"
                c:identifier="gclue_manager_interface_info">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="346">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Manager.top_of_page"&gt;org.freedesktop.GeoClue2.Manager&lt;/link&gt; D-Bus interface.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="351">A #GDBusInterfaceInfo. Do not free.</doc>
          <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
        </return-value>
      </function>
      <function name="override_properties"
                c:identifier="gclue_manager_override_properties">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="359">Overrides all #GObject properties in the #GClueManager interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="367">The last property id.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="361">The class structure for a #GObject derived class.</doc>
            <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
          </parameter>
          <parameter name="property_id_begin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="362">The property id to assign to the first overridden property.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="get_available_accuracy_level"
                      invoker="get_available_accuracy_level"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="547">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Manager.AvailableAccuracyLevel"&gt;"AvailableAccuracyLevel"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="555">The property value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="549">A #GClueManager.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_in_use"
                      invoker="get_in_use"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="516">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Manager.InUse"&gt;"InUse"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="524">The property value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="518">A #GClueManager.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_add_agent">
        <source-position filename="../libgeoclue/gclue-manager.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="arg_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_create_client">
        <source-position filename="../libgeoclue/gclue-manager.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_delete_client">
        <source-position filename="../libgeoclue/gclue-manager.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="arg_client" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_get_client">
        <source-position filename="../libgeoclue/gclue-manager.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="call_add_agent"
              c:identifier="gclue_manager_call_add_agent">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="872">Asynchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.AddAgent"&gt;AddAgent()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_manager_call_add_agent_finish() to get the result of the operation.

See gclue_manager_call_add_agent_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="143"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="874">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="arg_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="875">Argument to pass with the method invocation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="876">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="877">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="878">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_add_agent_finish"
              c:identifier="gclue_manager_call_add_agent_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="905">Finishes an operation started with gclue_manager_call_add_agent().</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="150"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="913">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="907">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="908">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_manager_call_add_agent().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_add_agent_sync"
              c:identifier="gclue_manager_call_add_agent_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="932">Synchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.AddAgent"&gt;AddAgent()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See gclue_manager_call_add_agent() for the asynchronous version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="155"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="943">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="934">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="arg_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="935">Argument to pass with the method invocation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="936">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_create_client"
              c:identifier="gclue_manager_call_create_client">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="676">Asynchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.CreateClient"&gt;CreateClient()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_manager_call_create_client_finish() to get the result of the operation.

See gclue_manager_call_create_client_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="678">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="679">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="680">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="681">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_create_client_finish"
              c:identifier="gclue_manager_call_create_client_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="706">Finishes an operation started with gclue_manager_call_create_client().</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="113"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="715">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="708">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="out_client"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="709">Return location for return parameter or %NULL to ignore.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="710">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_manager_call_create_client().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_create_client_sync"
              c:identifier="gclue_manager_call_create_client_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="736">Synchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.CreateClient"&gt;CreateClient()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See gclue_manager_call_create_client() for the asynchronous version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="119"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="747">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="738">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="out_client"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="739">Return location for return parameter or %NULL to ignore.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="740">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_delete_client"
              c:identifier="gclue_manager_call_delete_client">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="774">Asynchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.DeleteClient"&gt;DeleteClient()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_manager_call_delete_client_finish() to get the result of the operation.

See gclue_manager_call_delete_client_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="776">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="arg_client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="777">Argument to pass with the method invocation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="778">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="779">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="780">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_delete_client_finish"
              c:identifier="gclue_manager_call_delete_client_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="807">Finishes an operation started with gclue_manager_call_delete_client().</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="132"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="815">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="809">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="810">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_manager_call_delete_client().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_delete_client_sync"
              c:identifier="gclue_manager_call_delete_client_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="834">Synchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.DeleteClient"&gt;DeleteClient()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See gclue_manager_call_delete_client() for the asynchronous version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="137"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="845">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="836">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="arg_client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="837">Argument to pass with the method invocation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="838">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_get_client"
              c:identifier="gclue_manager_call_get_client">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="578">Asynchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.GetClient"&gt;GetClient()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_manager_call_get_client_finish() to get the result of the operation.

See gclue_manager_call_get_client_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="580">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="581">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="582">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="583">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_get_client_finish"
              c:identifier="gclue_manager_call_get_client_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="608">Finishes an operation started with gclue_manager_call_get_client().</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="95"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="617">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="610">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="out_client"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="611">Return location for return parameter or %NULL to ignore.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="612">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_manager_call_get_client().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_get_client_sync"
              c:identifier="gclue_manager_call_get_client_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="638">Synchronously invokes the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.GetClient"&gt;GetClient()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See gclue_manager_call_get_client() for the asynchronous version of this method.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="101"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="649">%TRUE if the call succeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="640">A #GClueManagerProxy.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="out_client"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="641">Return location for return parameter or %NULL to ignore.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="642">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_add_agent"
              c:identifier="gclue_manager_complete_add_agent">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1030">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.AddAgent"&gt;AddAgent()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1032">A #GClueManager.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1033">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_create_client"
              c:identifier="gclue_manager_complete_create_client">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="991">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.CreateClient"&gt;CreateClient()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="993">A #GClueManager.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="994">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="995">Parameter to return.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_delete_client"
              c:identifier="gclue_manager_complete_delete_client">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1012">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.DeleteClient"&gt;DeleteClient()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1014">A #GClueManager.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1015">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_get_client"
              c:identifier="gclue_manager_complete_get_client">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="970">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.GetClient"&gt;GetClient()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="972">A #GClueManager.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="973">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="974">Parameter to return.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_available_accuracy_level"
              c:identifier="gclue_manager_get_available_accuracy_level"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="547">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Manager.AvailableAccuracyLevel"&gt;"AvailableAccuracyLevel"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="167"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="555">The property value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="549">A #GClueManager.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_in_use"
              c:identifier="gclue_manager_get_in_use"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="516">Gets the value of the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Manager.InUse"&gt;"InUse"&lt;/link&gt; D-Bus property.

Since this D-Bus property is readable, it is meaningful to use this function on both the client- and service-side.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="164"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="524">The property value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="518">A #GClueManager.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_available_accuracy_level"
              c:identifier="gclue_manager_set_available_accuracy_level"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="563">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Manager.AvailableAccuracyLevel"&gt;"AvailableAccuracyLevel"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="565">A #GClueManager.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="566">The value to set.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_in_use"
              c:identifier="gclue_manager_set_in_use"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="532">Sets the &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Manager.InUse"&gt;"InUse"&lt;/link&gt; D-Bus property to @value.

Since this D-Bus property is not writable, it is only meaningful to use this function on the service-side.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="165"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="534">A #GClueManager.</doc>
            <type name="Manager" c:type="GClueManager*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="535">The value to set.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="available-accuracy-level"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="505">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Manager.AvailableAccuracyLevel"&gt;"AvailableAccuracyLevel"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="in-use" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="496">Represents the D-Bus property &lt;link linkend="gdbus-property-org-freedesktop-GeoClue2-Manager.InUse"&gt;"InUse"&lt;/link&gt;.

Since the D-Bus property for this #GObject property is readable but not writable, it is meaningful to read from it on both the client- and service-side. It is only meaningful, however, to write to it on the service-side.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <glib:signal name="handle-add-agent" when="last">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="472">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.AddAgent"&gt;AddAgent()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call gclue_manager_complete_add_agent() or e.g. g_dbus_method_invocation_return_error() on it) and no order signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="482">%TRUE if the invocation was handled, %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="475">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
          <parameter name="arg_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="476">Argument passed by remote caller.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-create-client" when="last">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="427">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.CreateClient"&gt;CreateClient()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call gclue_manager_complete_create_client() or e.g. g_dbus_method_invocation_return_error() on it) and no order signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="436">%TRUE if the invocation was handled, %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="430">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-delete-client" when="last">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="449">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.DeleteClient"&gt;DeleteClient()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call gclue_manager_complete_delete_client() or e.g. g_dbus_method_invocation_return_error() on it) and no order signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="459">%TRUE if the invocation was handled, %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="452">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
          <parameter name="arg_client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="453">Argument passed by remote caller.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-get-client" when="last">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="405">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-freedesktop-GeoClue2-Manager.GetClient"&gt;GetClient()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call gclue_manager_complete_get_client() or e.g. g_dbus_method_invocation_return_error() on it) and no order signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="414">%TRUE if the invocation was handled, %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="408">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="ManagerIface"
            c:type="GClueManagerIface"
            glib:is-gtype-struct-for="Manager">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-manager.c"
           line="385">Virtual table for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Manager.top_of_page"&gt;org.freedesktop.GeoClue2.Manager&lt;/link&gt;.</doc>
      <source-position filename="../libgeoclue/gclue-manager.h" line="55"/>
      <field name="parent_iface">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="387">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="handle_add_agent">
        <callback name="handle_add_agent">
          <source-position filename="../libgeoclue/gclue-manager.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Manager" c:type="GClueManager*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
            <parameter name="arg_id" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_create_client">
        <callback name="handle_create_client">
          <source-position filename="../libgeoclue/gclue-manager.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Manager" c:type="GClueManager*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_delete_client">
        <callback name="handle_delete_client">
          <source-position filename="../libgeoclue/gclue-manager.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Manager" c:type="GClueManager*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
            <parameter name="arg_client" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_get_client">
        <callback name="handle_get_client">
          <source-position filename="../libgeoclue/gclue-manager.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Manager" c:type="GClueManager*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_available_accuracy_level">
        <callback name="get_available_accuracy_level">
          <source-position filename="../libgeoclue/gclue-manager.h" line="51"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="555">The property value.</doc>
            <type name="guint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-manager.c"
                   line="549">A #GClueManager.</doc>
              <type name="Manager" c:type="GClueManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_in_use">
        <callback name="get_in_use">
          <source-position filename="../libgeoclue/gclue-manager.h" line="53"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="524">The property value.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../libgeoclue/gclue-manager.c"
                   line="518">A #GClueManager.</doc>
              <type name="Manager" c:type="GClueManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="ManagerProxy"
           c:symbol-prefix="manager_proxy"
           c:type="GClueManagerProxy"
           parent="Gio.DBusProxy"
           glib:type-name="GClueManagerProxy"
           glib:get-type="gclue_manager_proxy_get_type"
           glib:type-struct="ManagerProxyClass">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-manager.c"
           line="1050">The #GClueManagerProxy structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="../libgeoclue/gclue-manager.h" line="194"/>
      <implements name="Manager"/>
      <implements name="Gio.AsyncInitable"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="Gio.Initable"/>
      <constructor name="new_finish"
                   c:identifier="gclue_manager_proxy_new_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1326">Finishes an operation started with gclue_manager_proxy_new().</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="210"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="1333">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="ManagerProxy" c:type="GClueManager*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1328">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_manager_proxy_new().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_finish"
                   c:identifier="gclue_manager_proxy_new_for_bus_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1416">Finishes an operation started with gclue_manager_proxy_new_for_bus().</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="229"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="1423">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="ManagerProxy" c:type="GClueManager*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1418">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to gclue_manager_proxy_new_for_bus().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_sync"
                   c:identifier="gclue_manager_proxy_new_for_bus_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1441">Like gclue_manager_proxy_new_sync() but takes a #GBusType instead of a #GDBusConnection.

The calling thread is blocked until a reply is received.

See gclue_manager_proxy_new_for_bus() for the asynchronous version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="232"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="1456">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="ManagerProxy" c:type="GClueManager*"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1443">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1444">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1445">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1446">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1447">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="gclue_manager_proxy_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1351">Synchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Manager.top_of_page"&gt;org.freedesktop.GeoClue2.Manager&lt;/link&gt;. See g_dbus_proxy_new_sync() for more details.

The calling thread is blocked until a reply is received.

See gclue_manager_proxy_new() for the asynchronous version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="213"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="1366">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="ManagerProxy" c:type="GClueManager*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1353">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1354">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1355">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1356">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1357">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new" c:identifier="gclue_manager_proxy_new">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1296">Asynchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Manager.top_of_page"&gt;org.freedesktop.GeoClue2.Manager&lt;/link&gt;. See g_dbus_proxy_new() for more details.

When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_manager_proxy_new_finish() to get the result of the operation.

See gclue_manager_proxy_new_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="202"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1298">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1299">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1300">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1301">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1302">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1303">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1304">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_for_bus"
                c:identifier="gclue_manager_proxy_new_for_bus">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1386">Like gclue_manager_proxy_new() but takes a #GBusType instead of a #GDBusConnection.

When the operation is finished, @callback will be invoked in the &lt;link linkend="g-main-context-push-thread-default"&gt;thread-default main loop&lt;/link&gt; of the thread you are calling this method from.
You can then call gclue_manager_proxy_new_for_bus_finish() to get the result of the operation.

See gclue_manager_proxy_new_for_bus_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="221"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1388">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1389">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1390">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1391">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1392">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1393">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-manager.c"
                 line="1394">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusProxy" c:type="GDBusProxy"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ManagerProxyPrivate" c:type="GClueManagerProxyPrivate*"/>
      </field>
    </class>
    <record name="ManagerProxyClass"
            c:type="GClueManagerProxyClass"
            glib:is-gtype-struct-for="ManagerProxy">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-manager.c"
           line="1056">Class structure for #GClueManagerProxy.</doc>
      <source-position filename="../libgeoclue/gclue-manager.h" line="194"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1058">The parent class.</doc>
        <type name="Gio.DBusProxyClass" c:type="GDBusProxyClass"/>
      </field>
    </record>
    <record name="ManagerProxyPrivate"
            c:type="GClueManagerProxyPrivate"
            disguised="1">
      <source-position filename="../libgeoclue/gclue-manager.h" line="182"/>
    </record>
    <class name="ManagerSkeleton"
           c:symbol-prefix="manager_skeleton"
           c:type="GClueManagerSkeleton"
           parent="Gio.DBusInterfaceSkeleton"
           glib:type-name="GClueManagerSkeleton"
           glib:get-type="gclue_manager_skeleton_get_type"
           glib:type-struct="ManagerSkeletonClass">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-manager.c"
           line="1478">The #GClueManagerSkeleton structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="../libgeoclue/gclue-manager.h" line="264"/>
      <implements name="Manager"/>
      <implements name="Gio.DBusInterface"/>
      <constructor name="new" c:identifier="gclue_manager_skeleton_new">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1944">Creates a skeleton object for the D-Bus interface &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Manager.top_of_page"&gt;org.freedesktop.GeoClue2.Manager&lt;/link&gt;.</doc>
        <source-position filename="../libgeoclue/gclue-manager.h" line="272"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="1949">The skeleton object.</doc>
          <type name="ManagerSkeleton" c:type="GClueManager*"/>
        </return-value>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusInterfaceSkeleton"
              c:type="GDBusInterfaceSkeleton"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ManagerSkeletonPrivate"
              c:type="GClueManagerSkeletonPrivate*"/>
      </field>
    </class>
    <record name="ManagerSkeletonClass"
            c:type="GClueManagerSkeletonClass"
            glib:is-gtype-struct-for="ManagerSkeleton">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-manager.c"
           line="1484">Class structure for #GClueManagerSkeleton.</doc>
      <source-position filename="../libgeoclue/gclue-manager.h" line="264"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="1486">The parent class.</doc>
        <type name="Gio.DBusInterfaceSkeletonClass"
              c:type="GDBusInterfaceSkeletonClass"/>
      </field>
    </record>
    <record name="ManagerSkeletonPrivate"
            c:type="GClueManagerSkeletonPrivate"
            disguised="1">
      <source-position filename="../libgeoclue/gclue-manager.h" line="252"/>
    </record>
    <function-macro name="SIMPLE"
                    c:identifier="GCLUE_SIMPLE"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-simple.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SIMPLE_CLASS"
                    c:identifier="GCLUE_SIMPLE_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-simple.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SIMPLE_GET_CLASS"
                    c:identifier="GCLUE_SIMPLE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../libgeoclue/gclue-simple.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Simple"
           c:symbol-prefix="simple"
           c:type="GClueSimple"
           parent="GObject.Object"
           glib:type-name="GClueSimple"
           glib:get-type="gclue_simple_get_type"
           glib:type-struct="SimpleClass">
      <source-position filename="../libgeoclue/gclue-simple.h" line="57"/>
      <implements name="Gio.AsyncInitable"/>
      <constructor name="new_finish"
                   c:identifier="gclue_simple_new_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-simple.c"
             line="686">Finishes an operation started with #gclue_simple_new().</doc>
        <source-position filename="../libgeoclue/gclue-simple.h" line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-simple.c"
               line="694">The constructed proxy
object or %NULL if @error is set.</doc>
          <type name="Simple" c:type="GClueSimple*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="688">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to
         #gclue_simple_new().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="gclue_simple_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-simple.c"
             line="739">The synchronous and blocking version of #gclue_simple_new().</doc>
        <source-position filename="../libgeoclue/gclue-simple.h" line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-simple.c"
               line="748">The new #GClueSimple object or
%NULL if @error is set.</doc>
          <type name="Simple" c:type="GClueSimple*"/>
        </return-value>
        <parameters>
          <parameter name="desktop_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="741">The desktop file id (the basename of the desktop file).</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="accuracy_level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="742">The requested accuracy level as #GClueAccuracyLevel.</doc>
            <type name="AccuracyLevel" c:type="GClueAccuracyLevel"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="743">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new" c:identifier="gclue_simple_new">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-simple.c"
             line="655">Asynchronously creates a #GClueSimple instance. Use
#gclue_simple_new_finish() to get the created #GClueSimple instance.

See #gclue_simple_new_sync() for the synchronous, blocking version
of this function.</doc>
        <source-position filename="../libgeoclue/gclue-simple.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="desktop_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="657">The desktop file id (the basename of the desktop file).</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="accuracy_level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="658">The requested accuracy level as #GClueAccuracyLevel.</doc>
            <type name="AccuracyLevel" c:type="GClueAccuracyLevel"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="659">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="660">A #GAsyncReadyCallback to call when the results are ready.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="661">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_client" c:identifier="gclue_simple_get_client">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-simple.c"
             line="782">Gets the client proxy, or %NULL if @simple is not using a client proxy.</doc>
        <source-position filename="../libgeoclue/gclue-simple.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-simple.c"
               line="788">The client object.</doc>
          <type name="ClientProxy" c:type="GClueClient*"/>
        </return-value>
        <parameters>
          <instance-parameter name="simple" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="784">A #GClueSimple object.</doc>
            <type name="Simple" c:type="GClueSimple*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location" c:identifier="gclue_simple_get_location">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-simple.c"
             line="798">Gets the current location.</doc>
        <source-position filename="../libgeoclue/gclue-simple.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-simple.c"
               line="804">The last known location
as #GClueLocation.</doc>
          <type name="Location" c:type="GClueLocation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="simple" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../libgeoclue/gclue-simple.c"
                 line="800">A #GClueSimple object.</doc>
            <type name="Simple" c:type="GClueSimple*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="accuracy-level"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-simple.c"
             line="189">The requested maximum accuracy level.</doc>
        <type name="AccuracyLevel"/>
      </property>
      <property name="client" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-simple.c"
             line="205">The client proxy.</doc>
        <type name="ClientProxy"/>
      </property>
      <property name="desktop-id"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-simple.c"
             line="174">The Desktop ID of the application.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="location" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-simple.c"
             line="219">The current location.</doc>
        <type name="LocationProxy"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="SimplePrivate" c:type="GClueSimplePrivate*"/>
      </field>
    </class>
    <record name="SimpleClass"
            c:type="GClueSimpleClass"
            glib:is-gtype-struct-for="Simple">
      <source-position filename="../libgeoclue/gclue-simple.h" line="57"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="SimplePrivate" c:type="GClueSimplePrivate" disguised="1">
      <source-position filename="../libgeoclue/gclue-simple.h" line="44"/>
    </record>
    <function name="client_interface_info"
              c:identifier="gclue_client_interface_info"
              moved-to="Client.interface_info">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-client.c"
           line="384">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Client.top_of_page"&gt;org.freedesktop.GeoClue2.Client&lt;/link&gt; D-Bus interface.</doc>
      <source-position filename="../libgeoclue/gclue-client.h" line="67"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="389">A #GDBusInterfaceInfo. Do not free.</doc>
        <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
      </return-value>
    </function>
    <function name="client_override_properties"
              c:identifier="gclue_client_override_properties"
              moved-to="Client.override_properties">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-client.c"
           line="397">Overrides all #GObject properties in the #GClueClient interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
      <source-position filename="../libgeoclue/gclue-client.h" line="68"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-client.c"
             line="405">The last property id.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="klass" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="399">The class structure for a #GObject derived class.</doc>
          <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
        </parameter>
        <parameter name="property_id_begin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-client.c"
               line="400">The property id to assign to the first overridden property.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="location_interface_info"
              c:identifier="gclue_location_interface_info"
              moved-to="Location.interface_info">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-location.c"
           line="307">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Location.top_of_page"&gt;org.freedesktop.GeoClue2.Location&lt;/link&gt; D-Bus interface.</doc>
      <source-position filename="../libgeoclue/gclue-location.h" line="56"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="312">A #GDBusInterfaceInfo. Do not free.</doc>
        <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
      </return-value>
    </function>
    <function name="location_override_properties"
              c:identifier="gclue_location_override_properties"
              moved-to="Location.override_properties">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-location.c"
           line="320">Overrides all #GObject properties in the #GClueLocation interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
      <source-position filename="../libgeoclue/gclue-location.h" line="57"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-location.c"
             line="328">The last property id.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="klass" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="322">The class structure for a #GObject derived class.</doc>
          <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
        </parameter>
        <parameter name="property_id_begin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-location.c"
               line="323">The property id to assign to the first overridden property.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="manager_interface_info"
              c:identifier="gclue_manager_interface_info"
              moved-to="Manager.interface_info">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-manager.c"
           line="346">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-freedesktop-GeoClue2-Manager.top_of_page"&gt;org.freedesktop.GeoClue2.Manager&lt;/link&gt; D-Bus interface.</doc>
      <source-position filename="../libgeoclue/gclue-manager.h" line="63"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="351">A #GDBusInterfaceInfo. Do not free.</doc>
        <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
      </return-value>
    </function>
    <function name="manager_override_properties"
              c:identifier="gclue_manager_override_properties"
              moved-to="Manager.override_properties">
      <doc xml:space="preserve"
           filename="../libgeoclue/gclue-manager.c"
           line="359">Overrides all #GObject properties in the #GClueManager interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
      <source-position filename="../libgeoclue/gclue-manager.h" line="64"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../libgeoclue/gclue-manager.c"
             line="367">The last property id.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="klass" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="361">The class structure for a #GObject derived class.</doc>
          <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
        </parameter>
        <parameter name="property_id_begin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../libgeoclue/gclue-manager.c"
               line="362">The property id to assign to the first overridden property.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
