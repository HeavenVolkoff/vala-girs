<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="gusb"/>
  <c:include name="gusb.h"/>
  <namespace name="GUsb"
             version="1.0"
             shared-library="libgusb.so.2"
             c:identifier-prefixes="GUsb"
             c:symbol-prefixes="g_usb">
    <function-macro name="CHECK_VERSION"
                    c:identifier="G_USB_CHECK_VERSION"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="../gusb/gusb-version.h"
           line="45">Check whether a gusb version equal to or greater than
major.minor.micro.</doc>
      <source-position filename="../gusb/gusb-version.h" line="51"/>
      <parameters>
        <parameter name="major">
        </parameter>
        <parameter name="minor">
        </parameter>
        <parameter name="micro">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONTEXT"
                    c:identifier="G_USB_CONTEXT"
                    introspectable="0">
      <source-position filename="../gusb/gusb-context.h" line="17"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Context"
           c:symbol-prefix="context"
           c:type="GUsbContext"
           parent="GObject.Object"
           glib:type-name="GUsbContext"
           glib:get-type="g_usb_context_get_type"
           glib:type-struct="ContextClass">
      <source-position filename="../gusb/gusb-context.h" line="44"/>
      <implements name="Gio.Initable"/>
      <constructor name="new"
                   c:identifier="g_usb_context_new"
                   version="0.1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="1211">Creates a new context for accessing USB devices.</doc>
        <source-position filename="../gusb/gusb-context.h" line="65"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="1217">a new %GUsbContext object or %NULL on error.</doc>
          <type name="Context" c:type="GUsbContext*"/>
        </return-value>
      </constructor>
      <function name="error_quark"
                c:identifier="g_usb_context_error_quark"
                version="0.1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="109">Our personal error quark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <virtual-method name="device_added">
        <source-position filename="../gusb/gusb-context.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GUsbDevice*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="device_removed">
        <source-position filename="../gusb/gusb-context.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GUsbDevice*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="enumerate"
              c:identifier="g_usb_context_enumerate"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="597">Enumerates all the USB devices and adds them to the context.

You only need to call this function once, and any subsequent calls
are silently ignored.</doc>
        <source-position filename="../gusb/gusb-context.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="599">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="find_by_bus_address"
              c:identifier="g_usb_context_find_by_bus_address"
              version="0.2.2"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="832">Finds a device based on its bus and address values.</doc>
        <source-position filename="../gusb/gusb-context.h" line="87"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="841">a new #GUsbDevice, or %NULL if not found.</doc>
          <type name="Device" c:type="GUsbDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="834">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="bus" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="835">a bus number</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="836">a bus address</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_by_platform_id"
              c:identifier="g_usb_context_find_by_platform_id"
              version="0.2.4"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="881">Finds a device based on its platform id value.</doc>
        <source-position filename="../gusb/gusb-context.h" line="96"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="889">a new #GUsbDevice, or %NULL if not found.</doc>
          <type name="Device" c:type="GUsbDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="883">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="platform_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="884">a platform id, e.g. "usb:00:03:03:02"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_by_vid_pid"
              c:identifier="g_usb_context_find_by_vid_pid"
              version="0.2.2"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="927">Finds a device based on its bus and address values.</doc>
        <source-position filename="../gusb/gusb-context.h" line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="936">a new #GUsbDevice, or %NULL if not found.</doc>
          <type name="Device" c:type="GUsbDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="929">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="vid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="930">a vendor ID</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="pid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="931">a product ID</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices"
              c:identifier="g_usb_context_get_devices"
              version="0.2.2">
        <source-position filename="../gusb/gusb-context.h" line="85"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="1124">a new #GPtrArray of #GUsbDevice's.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="1122">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="g_usb_context_get_flags"
              version="0.2.11">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="648">Sets the flags to use for the context.</doc>
        <source-position filename="../gusb/gusb-context.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="654">the #GUsbContextFlags, e.g. %G_USB_CONTEXT_FLAGS_AUTO_OPEN_DEVICES</doc>
          <type name="ContextFlags" c:type="GUsbContextFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="650">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hotplug_poll_interval"
              c:identifier="g_usb_context_get_hotplug_poll_interval"
              version="0.3.10">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="549">Gets the poll interval for platforms like Windows that do not support `LIBUSB_CAP_HAS_HOTPLUG`.</doc>
        <source-position filename="../gusb/gusb-context.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="555">interval in ms</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="551">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_main_context"
              c:identifier="g_usb_context_get_main_context"
              version="0.2.5">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="491">Gets the internal GMainContext to use for synchronous methods.
By default the value is set to the value of g_main_context_default()</doc>
        <source-position filename="../gusb/gusb-context.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="498">the #GMainContext</doc>
          <type name="GLib.MainContext" c:type="GMainContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="493">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="g_usb_context_get_source"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="770">This function does nothing.</doc>
        <source-position filename="../gusb/gusb-context.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="777">the #GUsbSource.</doc>
          <type name="Source" c:type="GUsbSource*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="772">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="main_ctx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="773">a #GMainContext, or %NULL</doc>
            <type name="GLib.MainContext" c:type="GMainContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_debug"
              c:identifier="g_usb_context_set_debug"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="788">Sets the debug flags which control what is logged to the console.

Using %G_LOG_LEVEL_INFO will output to standard out, and everything
else logs to standard error.</doc>
        <source-position filename="../gusb/gusb-context.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="790">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="791">a GLogLevelFlags such as %G_LOG_LEVEL_ERROR | %G_LOG_LEVEL_INFO, or 0</doc>
            <type name="GLib.LogLevelFlags" c:type="GLogLevelFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="g_usb_context_set_flags"
              version="0.2.11">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="632">Sets the flags to use for the context. These should be set before
g_usb_context_enumerate() is called.</doc>
        <source-position filename="../gusb/gusb-context.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="634">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="635">some #GUsbContextFlags, e.g. %G_USB_CONTEXT_FLAGS_AUTO_OPEN_DEVICES</doc>
            <type name="ContextFlags" c:type="GUsbContextFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_hotplug_poll_interval"
              c:identifier="g_usb_context_set_hotplug_poll_interval"
              version="0.3.10">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="567">Sets the poll interval for platforms like Windows that do not support `LIBUSB_CAP_HAS_HOTPLUG`.
This defaults to 1000ms and can be changed before or after g_usb_context_enumerate() has been
called.</doc>
        <source-position filename="../gusb/gusb-context.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="569">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="hotplug_poll_interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="570">the interval in ms</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_main_context"
              c:identifier="g_usb_context_set_main_context"
              version="0.2.5">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="511">Sets the internal GMainContext to use for synchronous methods.</doc>
        <source-position filename="../gusb/gusb-context.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="513">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="main_ctx" transfer-ownership="none">
            <type name="GLib.MainContext" c:type="GMainContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="wait_for_replug"
              c:identifier="g_usb_context_wait_for_replug"
              version="0.2.9"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="1147">Waits for the device to be replugged.
It may come back with a different VID:PID.

Warning: This is synchronous and blocks until the device comes
back or the timeout triggers.</doc>
        <source-position filename="../gusb/gusb-context.h" line="100"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-context.c"
               line="1160">a new #GUsbDevice, or %NULL for invalid</doc>
          <type name="Device" c:type="GUsbDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="1149">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="1150">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </parameter>
          <parameter name="timeout_ms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="1151">timeout to wait</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="debug-level" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="libusb-context" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ContextPrivate" c:type="GUsbContextPrivate*"/>
      </field>
      <glib:signal name="device-added" when="last">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="219">This signal is emitted when a USB device is added.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="222">A #GUsbDevice</doc>
            <type name="Device"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-removed" when="last">
        <doc xml:space="preserve"
             filename="../gusb/gusb-context.c"
             line="237">This signal is emitted when a USB device is removed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-context.c"
                 line="240">A #GUsbDevice</doc>
            <type name="Device"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ContextClass"
            c:type="GUsbContextClass"
            glib:is-gtype-struct-for="Context">
      <source-position filename="../gusb/gusb-context.h" line="44"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="device_added">
        <callback name="device_added">
          <source-position filename="../gusb/gusb-context.h" line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="Context" c:type="GUsbContext*"/>
            </parameter>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="GUsbDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="device_removed">
        <callback name="device_removed">
          <source-position filename="../gusb/gusb-context.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="Context" c:type="GUsbContext*"/>
            </parameter>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="GUsbDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gusb_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="62">
          <type name="gchar" c:type="gchar"/>
        </array>
      </field>
    </record>
    <enumeration name="ContextError" c:type="GUsbContextError">
      <source-position filename="../gusb/gusb-context.h" line="48"/>
      <member name="context_error_internal"
              value="0"
              c:identifier="G_USB_CONTEXT_ERROR_INTERNAL">
      </member>
    </enumeration>
    <bitfield name="ContextFlags" c:type="GUsbContextFlags">
      <doc xml:space="preserve"
           filename="../gusb/gusb-context.h"
           line="50">The flags to use for the context.</doc>
      <source-position filename="../gusb/gusb-context.h" line="60"/>
      <member name="none" value="0" c:identifier="G_USB_CONTEXT_FLAGS_NONE">
      </member>
      <member name="auto_open_devices"
              value="1"
              c:identifier="G_USB_CONTEXT_FLAGS_AUTO_OPEN_DEVICES">
      </member>
    </bitfield>
    <record name="ContextPrivate" c:type="GUsbContextPrivate" disguised="1">
      <doc xml:space="preserve"
           filename="../gusb/gusb-context.c"
           line="39">Private #GUsbContext data</doc>
      <source-position filename="../gusb/gusb-context.h" line="21"/>
    </record>
    <function-macro name="DEVICE"
                    c:identifier="G_USB_DEVICE"
                    introspectable="0">
      <source-position filename="../gusb/gusb-device.h" line="19"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEVICE_LIST"
                    c:identifier="G_USB_DEVICE_LIST"
                    introspectable="0">
      <source-position filename="../gusb/gusb-device-list.h" line="16"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="GUsbDevice"
           parent="GObject.Object"
           glib:type-name="GUsbDevice"
           glib:get-type="g_usb_device_get_type"
           glib:type-struct="DeviceClass">
      <source-position filename="../gusb/gusb-device.h" line="146"/>
      <implements name="Gio.Initable"/>
      <function name="error_quark"
                c:identifier="g_usb_device_error_quark"
                version="0.1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="62">Our personal error quark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <method name="bulk_transfer"
              c:identifier="g_usb_device_bulk_transfer"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1077">Perform a USB bulk transfer.

Warning: this function is synchronous, and cannot be cancelled.</doc>
        <source-position filename="../gusb/gusb-device.h" line="242"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1095">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1079">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1080">the address of a valid endpoint to communicate with</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1081">a suitably-sized data buffer for
either input or output</doc>
            <array length="2" zero-terminated="0" c:type="guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1083">the length field for the setup packet.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="actual_length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1084">the actual number of bytes sent, or %NULL</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1085">timeout timeout (in milliseconds) that this function should wait
before giving up due to no response being received. For an unlimited
timeout, use 0.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1088">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="bulk_transfer_async"
              c:identifier="g_usb_device_bulk_transfer_async"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1437">Do an async bulk transfer</doc>
        <source-position filename="../gusb/gusb-device.h" line="279"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1439">a #GUsbDevice instance.</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1440">the address of a valid endpoint to communicate with</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1441">a suitably-sized data buffer for
either input or output</doc>
            <array length="2" zero-terminated="0" c:type="guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1443">the length field for the setup packet.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1444">timeout timeout (in milliseconds) that this function should wait
before giving up due to no response being received. For an unlimited
timeout, use 0.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1447">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1448">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1449">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="bulk_transfer_finish"
              c:identifier="g_usb_device_bulk_transfer_finish"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1517">Gets the result from the asynchronous function.</doc>
        <source-position filename="../gusb/gusb-device.h" line="287"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1525">the actual number of bytes sent, or -1 on error.</doc>
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1519">a #GUsbDevice instance.</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1520">the #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="claim_interface"
              c:identifier="g_usb_device_claim_interface"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="758">Claim an interface of the device.</doc>
        <source-position filename="../gusb/gusb-device.h" line="201"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="767">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="760">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="761">bInterfaceNumber of the interface you wish to claim</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="762">#GUsbDeviceClaimInterfaceFlags</doc>
            <type name="DeviceClaimInterfaceFlags"
                  c:type="GUsbDeviceClaimInterfaceFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="close"
              c:identifier="g_usb_device_close"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="613">Closes the device when it is no longer required.</doc>
        <source-position filename="../gusb/gusb-device.h" line="189"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="620">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="615">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="control_transfer"
              c:identifier="g_usb_device_control_transfer"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1007">Perform a USB control transfer.

Warning: this function is synchronous, and cannot be cancelled.</doc>
        <source-position filename="../gusb/gusb-device.h" line="228"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1028">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1009">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="DeviceDirection" c:type="GUsbDeviceDirection"/>
          </parameter>
          <parameter name="request_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1010">the request type field for the setup packet</doc>
            <type name="DeviceRequestType" c:type="GUsbDeviceRequestType"/>
          </parameter>
          <parameter name="recipient" transfer-ownership="none">
            <type name="DeviceRecipient" c:type="GUsbDeviceRecipient"/>
          </parameter>
          <parameter name="request" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1011">the request field for the setup packet</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1012">the value field for the setup packet</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="idx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1013">the index field for the setup packet</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1014">a suitably-sized data buffer for
either input or output</doc>
            <array length="7" zero-terminated="0" c:type="guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1016">the length field for the setup packet.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="actual_length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1017">the actual number of bytes sent, or %NULL</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1018">timeout timeout (in milliseconds) that this function should wait
before giving up due to no response being received. For an unlimited
timeout, use 0.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1021">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="control_transfer_async"
              c:identifier="g_usb_device_control_transfer_async"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1316">Do an async control transfer</doc>
        <source-position filename="../gusb/gusb-device.h" line="262"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1318">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="DeviceDirection" c:type="GUsbDeviceDirection"/>
          </parameter>
          <parameter name="request_type" transfer-ownership="none">
            <type name="DeviceRequestType" c:type="GUsbDeviceRequestType"/>
          </parameter>
          <parameter name="recipient" transfer-ownership="none">
            <type name="DeviceRecipient" c:type="GUsbDeviceRecipient"/>
          </parameter>
          <parameter name="request" transfer-ownership="none">
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="idx" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1319">a suitably-sized data buffer for
either input or output</doc>
            <array length="7" zero-terminated="0" c:type="guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1321">the length field for the setup packet.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1322">timeout timeout (in milliseconds) that this function should wait
before giving up due to no response being received. For an unlimited
timeout, use 0.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1325">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="11">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1326">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1327">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="control_transfer_finish"
              c:identifier="g_usb_device_control_transfer_finish"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1413">Gets the result from the asynchronous function.</doc>
        <source-position filename="../gusb/gusb-device.h" line="275"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1421">the actual number of bytes sent, or -1 on error.</doc>
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1415">a #GUsbDevice instance.</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1416">the #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_address"
              c:identifier="g_usb_device_get_address"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1743">Gets the USB address for the device.</doc>
        <source-position filename="../gusb/gusb-device.h" line="156"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1749">The 8-bit address</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1745">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bus"
              c:identifier="g_usb_device_get_bus"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1725">Gets the USB bus number for the device.</doc>
        <source-position filename="../gusb/gusb-device.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1731">The 8-bit bus number</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1727">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="g_usb_device_get_children"
              version="0.2.4">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1692">Gets the device children if any exist.</doc>
        <source-position filename="../gusb/gusb-device.h" line="153"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1698">an array of #GUsbDevice</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1694">a #GUsbDevice instance</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_configuration"
              c:identifier="g_usb_device_get_configuration"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="677">Get the bConfigurationValue for the active configuration of the device.

Warning: this function is synchronous.</doc>
        <source-position filename="../gusb/gusb-device.h" line="195"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="686">The bConfigurationValue of the active config, or -1 on error</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="679">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_configuration_index"
              c:identifier="g_usb_device_get_configuration_index"
              version="0.3.5">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1890">Get the index for the active Configuration string descriptor
ie, iConfiguration.</doc>
        <source-position filename="../gusb/gusb-device.h" line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1897">a string descriptor index.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1892">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_custom_index"
              c:identifier="g_usb_device_get_custom_index"
              version="0.2.5"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="448">Gets the string index from the vendor class interface descriptor.</doc>
        <source-position filename="../gusb/gusb-device.h" line="173"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="458">a non-zero index, or 0x00 for failure</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="450">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="class_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="451">a device class, e.g. 0xff for VENDOR</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="subclass_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="452">a device subclass</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="protocol_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="453">a protocol number</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_class"
              c:identifier="g_usb_device_get_device_class"
              version="0.1.7">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1938">Gets the device class, typically a #GUsbDeviceClassCode.</doc>
        <source-position filename="../gusb/gusb-device.h" line="165"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1944">a device class number, e.g. 0x09 is a USB hub.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1940">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_protocol"
              c:identifier="g_usb_device_get_device_protocol"
              version="0.2.4">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1975">Gets the device protocol qualified by the class and subclass numbers.
See g_usb_device_get_device_class() and g_usb_device_get_device_subclass().</doc>
        <source-position filename="../gusb/gusb-device.h" line="167"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1982">a device protocol number.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1977">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_subclass"
              c:identifier="g_usb_device_get_device_subclass"
              version="0.2.4">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1956">Gets the device subclass qualified by the class number.
See g_usb_device_get_device_class().</doc>
        <source-position filename="../gusb/gusb-device.h" line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1963">a device subclass number.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1958">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interface"
              c:identifier="g_usb_device_get_interface"
              version="0.2.8"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="506">Gets the first interface that matches the vendor class interface descriptor.
If you want to find all the interfaces that match (there may be other
'alternate' interfaces you have to use g_usb_device_get_interfaces() and
check each one manally.</doc>
        <source-position filename="../gusb/gusb-device.h" line="179"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="519">a #GUsbInterface or %NULL for not found</doc>
          <type name="Interface" c:type="GUsbInterface*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="508">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="class_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="509">a device class, e.g. 0xff for VENDOR</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="subclass_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="510">a device subclass</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="protocol_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="511">a protocol number</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interfaces"
              c:identifier="g_usb_device_get_interfaces"
              version="0.2.8"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="570">Gets all the interfaces exported by the device.</doc>
        <source-position filename="../gusb/gusb-device.h" line="184"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="577">an array of interfaces or %NULL for error</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Interface"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="572">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_manufacturer_index"
              c:identifier="g_usb_device_get_manufacturer_index"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1920">Gets the index for the Manufacturer string descriptor.</doc>
        <source-position filename="../gusb/gusb-device.h" line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1926">a string descriptor index.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1922">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent"
              c:identifier="g_usb_device_get_parent"
              version="0.2.4">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1666">Gets the device parent if one exists.</doc>
        <source-position filename="../gusb/gusb-device.h" line="152"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1672">#GUsbDevice or %NULL</doc>
          <type name="Device" c:type="GUsbDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1668">a #GUsbDevice instance</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pid"
              c:identifier="g_usb_device_get_pid"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1796">Gets the product ID for the device.</doc>
        <source-position filename="../gusb/gusb-device.h" line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1802">an ID.</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1798">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pid_as_str"
              c:identifier="g_usb_device_get_pid_as_str"
              version="0.2.4">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1870">Gets the product ID for the device as a string.</doc>
        <source-position filename="../gusb/gusb-device.h" line="164"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1876">an string ID, or %NULL if not available.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1872">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_platform_id"
              c:identifier="g_usb_device_get_platform_id"
              version="0.1.1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1645">Gets the platform identifier for the device.

When the device is removed and then replugged, this value is not expected to
be different.</doc>
        <source-position filename="../gusb/gusb-device.h" line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1654">The platform ID, e.g. "usb:02:00:03:01"</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1647">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_port_number"
              c:identifier="g_usb_device_get_port_number"
              version="0.2.4">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1761">Gets the USB port number for the device.</doc>
        <source-position filename="../gusb/gusb-device.h" line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1767">The 8-bit port number</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1763">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_product_index"
              c:identifier="g_usb_device_get_product_index"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1994">Gets the index for the Product string descriptor.</doc>
        <source-position filename="../gusb/gusb-device.h" line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="2000">a string descriptor index.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1996">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_release"
              c:identifier="g_usb_device_get_release"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1814">Gets the BCD firmware version number for the device.</doc>
        <source-position filename="../gusb/gusb-device.h" line="161"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1820">a version number in BCD format.</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1816">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_serial_number_index"
              c:identifier="g_usb_device_get_serial_number_index"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="2012">Gets the index for the Serial Number string descriptor.</doc>
        <source-position filename="../gusb/gusb-device.h" line="172"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="2018">a string descriptor index.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="2014">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_spec"
              c:identifier="g_usb_device_get_spec"
              version="0.3.1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1832">Gets the BCD specification revision for the device. For example,
`0x0110` indicates USB 1.1 and 0x0320 indicates USB 3.2</doc>
        <source-position filename="../gusb/gusb-device.h" line="162"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1839">a specification revision in BCD format.</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1834">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string_descriptor"
              c:identifier="g_usb_device_get_string_descriptor"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="877">Get a string descriptor from the device. The returned string should be freed
with g_free() when no longer needed.</doc>
        <source-position filename="../gusb/gusb-device.h" line="214"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="885">a newly-allocated string holding the descriptor, or NULL on error.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="desc_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="879">the index for the string descriptor to retrieve</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string_descriptor_bytes"
              c:identifier="g_usb_device_get_string_descriptor_bytes"
              version="0.3.6"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="959">Get a raw string descriptor from the device. The returned string should be freed
with g_bytes_unref() when no longer needed.
The descriptor will be at most 128 btes in length, if you need to
issue a request with either a smaller or larger descriptor, you can
use g_usb_device_get_string_descriptor_bytes_full instead.</doc>
        <source-position filename="../gusb/gusb-device.h" line="217"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="971">a possibly UTF-16 string, or NULL on error.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="desc_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="961">the index for the string descriptor to retrieve</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="langid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="962">the language ID</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string_descriptor_bytes_full"
              c:identifier="g_usb_device_get_string_descriptor_bytes_full"
              version="0.3.8"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="916">Get a raw string descriptor from the device. The returned string should be freed
with g_bytes_unref() when no longer needed.</doc>
        <source-position filename="../gusb/gusb-device.h" line="221"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="926">a possibly UTF-16 string, or NULL on error.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="desc_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="918">the index for the string descriptor to retrieve</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="langid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="919">the language ID</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="920">size of the request data buffer</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_vid"
              c:identifier="g_usb_device_get_vid"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1778">Gets the vendor ID for the device.</doc>
        <source-position filename="../gusb/gusb-device.h" line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1784">an ID.</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1780">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vid_as_str"
              c:identifier="g_usb_device_get_vid_as_str"
              version="0.2.4">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1851">Gets the vendor ID for the device as a string.</doc>
        <source-position filename="../gusb/gusb-device.h" line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1857">an string ID, or %NULL if not available.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1853">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="interrupt_transfer"
              c:identifier="g_usb_device_interrupt_transfer"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1134">Perform a USB interrupt transfer.

Warning: this function is synchronous, and cannot be cancelled.</doc>
        <source-position filename="../gusb/gusb-device.h" line="251"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1152">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1136">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1137">the address of a valid endpoint to communicate with</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1138">a suitably-sized data buffer for
either input or output</doc>
            <array length="2" zero-terminated="0" c:type="guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1140">the length field for the setup packet.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="actual_length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1141">the actual number of bytes sent, or %NULL</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1142">timeout timeout (in milliseconds) that this function should wait
before giving up due to no response being received. For an unlimited
timeout, use 0.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1145">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="interrupt_transfer_async"
              c:identifier="g_usb_device_interrupt_transfer_async"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1541">Do an async interrupt transfer</doc>
        <source-position filename="../gusb/gusb-device.h" line="291"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1543">a #GUsbDevice instance.</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1544">the address of a valid endpoint to communicate with</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1545">a suitably-sized data buffer for
either input or output</doc>
            <array length="2" zero-terminated="0" c:type="guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1547">the length field for the setup packet.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1548">timeout timeout (in milliseconds) that this function should wait
before giving up due to no response being received. For an unlimited
timeout, use 0.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1551">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1552">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1553">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="interrupt_transfer_finish"
              c:identifier="g_usb_device_interrupt_transfer_finish"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="1621">Gets the result from the asynchronous function.</doc>
        <source-position filename="../gusb/gusb-device.h" line="299"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="1629">the actual number of bytes sent, or -1 on error.</doc>
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1623">a #GUsbDevice instance.</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="1624">the #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="g_usb_device_open"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="421">Opens the device for use.

Warning: this function is synchronous.</doc>
        <source-position filename="../gusb/gusb-device.h" line="187"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="430">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="423">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="release_interface"
              c:identifier="g_usb_device_release_interface"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="800">Release an interface of the device.</doc>
        <source-position filename="../gusb/gusb-device.h" line="205"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="809">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="802">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="803">bInterfaceNumber of the interface you wish to release</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="804">#GUsbDeviceClaimInterfaceFlags</doc>
            <type name="DeviceClaimInterfaceFlags"
                  c:type="GUsbDeviceClaimInterfaceFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset"
              c:identifier="g_usb_device_reset"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="643">Perform a USB port reset to reinitialize a device.

If the reset succeeds, the device will appear to disconnected and reconnected.
This means the @device will no longer be valid and should be closed and
rediscovered.

This is a blocking function which usually incurs a noticeable delay.</doc>
        <source-position filename="../gusb/gusb-device.h" line="192"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="656">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="645">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_configuration"
              c:identifier="g_usb_device_set_configuration"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="714">Set the active bConfigurationValue for the device.

Warning: this function is synchronous.</doc>
        <source-position filename="../gusb/gusb-device.h" line="197"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="724">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="716">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="configuration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="717">the configuration value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interface_alt"
              c:identifier="g_usb_device_set_interface_alt"
              version="0.2.8"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device.c"
             line="845">Sets an alternate setting on an interface.</doc>
        <source-position filename="../gusb/gusb-device.h" line="209"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device.c"
               line="854">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="847">a #GUsbDevice</doc>
            <type name="Device" c:type="GUsbDevice*"/>
          </instance-parameter>
          <parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="848">bInterfaceNumber of the interface you wish to release</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="alt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device.c"
                 line="849">alternative setting number</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <property name="context"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Context"/>
      </property>
      <property name="libusb-device"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="platform-id"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DevicePrivate" c:type="GUsbDevicePrivate*"/>
      </field>
    </class>
    <bitfield name="DeviceClaimInterfaceFlags"
              c:type="GUsbDeviceClaimInterfaceFlags">
      <doc xml:space="preserve"
           filename="../gusb/gusb-device.h"
           line="80">Flags for the g_usb_device_claim_interface and
g_usb_device_release_interface methods flags parameters.</doc>
      <source-position filename="../gusb/gusb-device.h" line="89"/>
      <member name="none"
              value="0"
              c:identifier="G_USB_DEVICE_CLAIM_INTERFACE_NONE">
      </member>
      <member name="bind_kernel_driver"
              value="1"
              c:identifier="G_USB_DEVICE_CLAIM_INTERFACE_BIND_KERNEL_DRIVER">
      </member>
    </bitfield>
    <record name="DeviceClass"
            c:type="GUsbDeviceClass"
            glib:is-gtype-struct-for="Device">
      <source-position filename="../gusb/gusb-device.h" line="146"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gusb_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="64">
          <type name="gchar" c:type="gchar"/>
        </array>
      </field>
    </record>
    <enumeration name="DeviceClassCode" c:type="GUsbDeviceClassCode">
      <doc xml:space="preserve"
           filename="../gusb/gusb-device.h"
           line="91">The USB device class.</doc>
      <source-position filename="../gusb/gusb-device.h" line="118"/>
      <member name="interface_desc"
              value="0"
              c:identifier="G_USB_DEVICE_CLASS_INTERFACE_DESC">
      </member>
      <member name="audio" value="1" c:identifier="G_USB_DEVICE_CLASS_AUDIO">
      </member>
      <member name="communications"
              value="2"
              c:identifier="G_USB_DEVICE_CLASS_COMMUNICATIONS">
      </member>
      <member name="hid" value="3" c:identifier="G_USB_DEVICE_CLASS_HID">
      </member>
      <member name="physical"
              value="5"
              c:identifier="G_USB_DEVICE_CLASS_PHYSICAL">
      </member>
      <member name="image" value="6" c:identifier="G_USB_DEVICE_CLASS_IMAGE">
      </member>
      <member name="printer"
              value="7"
              c:identifier="G_USB_DEVICE_CLASS_PRINTER">
      </member>
      <member name="mass_storage"
              value="8"
              c:identifier="G_USB_DEVICE_CLASS_MASS_STORAGE">
      </member>
      <member name="hub" value="9" c:identifier="G_USB_DEVICE_CLASS_HUB">
      </member>
      <member name="cdc_data"
              value="10"
              c:identifier="G_USB_DEVICE_CLASS_CDC_DATA">
      </member>
      <member name="smart_card"
              value="11"
              c:identifier="G_USB_DEVICE_CLASS_SMART_CARD">
      </member>
      <member name="content_security"
              value="13"
              c:identifier="G_USB_DEVICE_CLASS_CONTENT_SECURITY">
      </member>
      <member name="video" value="14" c:identifier="G_USB_DEVICE_CLASS_VIDEO">
      </member>
      <member name="personal_healthcare"
              value="15"
              c:identifier="G_USB_DEVICE_CLASS_PERSONAL_HEALTHCARE">
      </member>
      <member name="audio_video"
              value="16"
              c:identifier="G_USB_DEVICE_CLASS_AUDIO_VIDEO">
      </member>
      <member name="billboard"
              value="17"
              c:identifier="G_USB_DEVICE_CLASS_BILLBOARD">
      </member>
      <member name="diagnostic"
              value="220"
              c:identifier="G_USB_DEVICE_CLASS_DIAGNOSTIC">
      </member>
      <member name="wireless_controller"
              value="224"
              c:identifier="G_USB_DEVICE_CLASS_WIRELESS_CONTROLLER">
      </member>
      <member name="miscellaneous"
              value="239"
              c:identifier="G_USB_DEVICE_CLASS_MISCELLANEOUS">
      </member>
      <member name="application_specific"
              value="254"
              c:identifier="G_USB_DEVICE_CLASS_APPLICATION_SPECIFIC">
      </member>
      <member name="vendor_specific"
              value="255"
              c:identifier="G_USB_DEVICE_CLASS_VENDOR_SPECIFIC">
      </member>
    </enumeration>
    <enumeration name="DeviceDirection" c:type="GUsbDeviceDirection">
      <doc xml:space="preserve"
           filename="../gusb/gusb-device.h"
           line="27">The message direction.</doc>
      <source-position filename="../gusb/gusb-device.h" line="35"/>
      <member name="device_to_host"
              value="0"
              c:identifier="G_USB_DEVICE_DIRECTION_DEVICE_TO_HOST">
      </member>
      <member name="host_to_device"
              value="1"
              c:identifier="G_USB_DEVICE_DIRECTION_HOST_TO_DEVICE">
      </member>
    </enumeration>
    <enumeration name="DeviceError" c:type="GUsbDeviceError">
      <doc xml:space="preserve"
           filename="../gusb/gusb-device.h"
           line="61">The error code.</doc>
      <source-position filename="../gusb/gusb-device.h" line="78"/>
      <member name="internal"
              value="0"
              c:identifier="G_USB_DEVICE_ERROR_INTERNAL">
      </member>
      <member name="io" value="1" c:identifier="G_USB_DEVICE_ERROR_IO">
      </member>
      <member name="timed_out"
              value="2"
              c:identifier="G_USB_DEVICE_ERROR_TIMED_OUT">
      </member>
      <member name="not_supported"
              value="3"
              c:identifier="G_USB_DEVICE_ERROR_NOT_SUPPORTED">
      </member>
      <member name="no_device"
              value="4"
              c:identifier="G_USB_DEVICE_ERROR_NO_DEVICE">
      </member>
      <member name="not_open"
              value="5"
              c:identifier="G_USB_DEVICE_ERROR_NOT_OPEN">
      </member>
      <member name="already_open"
              value="6"
              c:identifier="G_USB_DEVICE_ERROR_ALREADY_OPEN">
      </member>
      <member name="cancelled"
              value="7"
              c:identifier="G_USB_DEVICE_ERROR_CANCELLED">
      </member>
      <member name="failed" value="8" c:identifier="G_USB_DEVICE_ERROR_FAILED">
      </member>
      <member name="permission_denied"
              value="9"
              c:identifier="G_USB_DEVICE_ERROR_PERMISSION_DENIED">
      </member>
      <member name="last" value="10" c:identifier="G_USB_DEVICE_ERROR_LAST">
      </member>
    </enumeration>
    <enumeration name="DeviceLangid" c:type="GUsbDeviceLangid">
      <doc xml:space="preserve"
           filename="../gusb/gusb-device.h"
           line="121">The USB language ID.</doc>
      <source-position filename="../gusb/gusb-device.h" line="129"/>
      <member name="invalid"
              value="0"
              c:identifier="G_USB_DEVICE_LANGID_INVALID">
      </member>
      <member name="english_united_states"
              value="1033"
              c:identifier="G_USB_DEVICE_LANGID_ENGLISH_UNITED_STATES">
      </member>
    </enumeration>
    <class name="DeviceList"
           c:symbol-prefix="device_list"
           c:type="GUsbDeviceList"
           parent="GObject.Object"
           glib:type-name="GUsbDeviceList"
           glib:get-type="g_usb_device_list_get_type"
           glib:type-struct="DeviceListClass">
      <source-position filename="../gusb/gusb-device-list.h" line="43"/>
      <constructor name="new"
                   c:identifier="g_usb_device_list_new"
                   version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device-list.c"
             line="247">Creates a new device list.

You will need to call g_usb_device_list_coldplug() to coldplug the
list of devices after creating a device list.</doc>
        <source-position filename="../gusb/gusb-device-list.h" line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device-list.c"
               line="256">a new #GUsbDeviceList</doc>
          <type name="DeviceList" c:type="GUsbDeviceList*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="249">a #GUsbContext</doc>
            <type name="Context" c:type="GUsbContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="device_added">
        <source-position filename="../gusb/gusb-device-list.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <type name="DeviceList" c:type="GUsbDeviceList*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GUsbDevice*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="device_removed">
        <source-position filename="../gusb/gusb-device-list.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <type name="DeviceList" c:type="GUsbDeviceList*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="GUsbDevice*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="coldplug"
              c:identifier="g_usb_device_list_coldplug"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device-list.c"
             line="181">This function does nothing.</doc>
        <source-position filename="../gusb/gusb-device-list.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="183">a #GUsbDeviceList</doc>
            <type name="DeviceList" c:type="GUsbDeviceList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="find_by_bus_address"
              c:identifier="g_usb_device_list_find_by_bus_address"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device-list.c"
             line="195">Finds a device based on its bus and address values.</doc>
        <source-position filename="../gusb/gusb-device-list.h" line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device-list.c"
               line="204">a new #GUsbDevice, or %NULL if not found.</doc>
          <type name="Device" c:type="GUsbDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="197">a #GUsbDeviceList</doc>
            <type name="DeviceList" c:type="GUsbDeviceList*"/>
          </instance-parameter>
          <parameter name="bus" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="198">a bus number</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="199">a bus address</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_by_vid_pid"
              c:identifier="g_usb_device_list_find_by_vid_pid"
              version="0.1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device-list.c"
             line="221">Finds a device based on its bus and address values.</doc>
        <source-position filename="../gusb/gusb-device-list.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device-list.c"
               line="230">a new #GUsbDevice, or %NULL if not found.</doc>
          <type name="Device" c:type="GUsbDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="223">a #GUsbDeviceList</doc>
            <type name="DeviceList" c:type="GUsbDeviceList*"/>
          </instance-parameter>
          <parameter name="vid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="224">a vendor ID</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="pid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="225">a product ID</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices"
              c:identifier="g_usb_device_list_get_devices"
              version="0.1.0">
        <source-position filename="../gusb/gusb-device-list.h" line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gusb/gusb-device-list.c"
               line="169">a new #GPtrArray of #GUsbDevice's.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="167">a #GUsbDeviceList</doc>
            <type name="DeviceList" c:type="GUsbDeviceList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="context"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Context"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DeviceListPrivate" c:type="GUsbDeviceListPrivate*"/>
      </field>
      <glib:signal name="device-added" when="last">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device-list.c"
             line="122">This signal is emitted when a USB device is added.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="125">A #GUsbDevice</doc>
            <type name="Device"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-removed" when="last">
        <doc xml:space="preserve"
             filename="../gusb/gusb-device-list.c"
             line="140">This signal is emitted when a USB device is removed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-device-list.c"
                 line="143">A #GUsbDevice</doc>
            <type name="Device"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DeviceListClass"
            c:type="GUsbDeviceListClass"
            glib:is-gtype-struct-for="DeviceList">
      <source-position filename="../gusb/gusb-device-list.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="device_added">
        <callback name="device_added">
          <source-position filename="../gusb/gusb-device-list.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="list" transfer-ownership="none">
              <type name="DeviceList" c:type="GUsbDeviceList*"/>
            </parameter>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="GUsbDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="device_removed">
        <callback name="device_removed">
          <source-position filename="../gusb/gusb-device-list.h" line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="list" transfer-ownership="none">
              <type name="DeviceList" c:type="GUsbDeviceList*"/>
            </parameter>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="GUsbDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gusb_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="64">
          <type name="gchar" c:type="gchar"/>
        </array>
      </field>
    </record>
    <record name="DeviceListPrivate"
            c:type="GUsbDeviceListPrivate"
            disguised="1">
      <source-position filename="../gusb/gusb-device-list.h" line="19"/>
    </record>
    <record name="DevicePrivate" c:type="GUsbDevicePrivate" disguised="1">
      <doc xml:space="preserve"
           filename="../gusb/gusb-device.c"
           line="28">Private #GUsbDevice data</doc>
      <source-position filename="../gusb/gusb-device.h" line="23"/>
    </record>
    <enumeration name="DeviceRecipient" c:type="GUsbDeviceRecipient">
      <doc xml:space="preserve"
           filename="../gusb/gusb-device.h"
           line="49">The message recipient.</doc>
      <source-position filename="../gusb/gusb-device.h" line="59"/>
      <member name="device"
              value="0"
              c:identifier="G_USB_DEVICE_RECIPIENT_DEVICE">
      </member>
      <member name="interface"
              value="1"
              c:identifier="G_USB_DEVICE_RECIPIENT_INTERFACE">
      </member>
      <member name="endpoint"
              value="2"
              c:identifier="G_USB_DEVICE_RECIPIENT_ENDPOINT">
      </member>
      <member name="other"
              value="3"
              c:identifier="G_USB_DEVICE_RECIPIENT_OTHER">
      </member>
    </enumeration>
    <enumeration name="DeviceRequestType" c:type="GUsbDeviceRequestType">
      <doc xml:space="preserve"
           filename="../gusb/gusb-device.h"
           line="37">The message request type.</doc>
      <source-position filename="../gusb/gusb-device.h" line="47"/>
      <member name="standard"
              value="0"
              c:identifier="G_USB_DEVICE_REQUEST_TYPE_STANDARD">
      </member>
      <member name="class"
              value="1"
              c:identifier="G_USB_DEVICE_REQUEST_TYPE_CLASS">
      </member>
      <member name="vendor"
              value="2"
              c:identifier="G_USB_DEVICE_REQUEST_TYPE_VENDOR">
      </member>
      <member name="reserved"
              value="3"
              c:identifier="G_USB_DEVICE_REQUEST_TYPE_RESERVED">
      </member>
    </enumeration>
    <class name="Endpoint"
           c:symbol-prefix="endpoint"
           c:type="GUsbEndpoint"
           parent="GObject.Object"
           glib:type-name="GUsbEndpoint"
           glib:get-type="g_usb_endpoint_get_type"
           glib:type-struct="EndpointClass">
      <source-position filename="../gusb/gusb-endpoint.h" line="15"/>
      <method name="get_address"
              c:identifier="g_usb_endpoint_get_address"
              version="0.3.3">
        <doc xml:space="preserve"
             filename="../gusb/gusb-endpoint.c"
             line="164">Gets the address of the endpoint.</doc>
        <source-position filename="../gusb/gusb-endpoint.h" line="22"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-endpoint.c"
               line="170">The 4-bit endpoint address</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-endpoint.c"
                 line="166">a #GUsbEndpoint</doc>
            <type name="Endpoint" c:type="GUsbEndpoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_direction"
              c:identifier="g_usb_endpoint_get_direction"
              version="0.3.3">
        <doc xml:space="preserve"
             filename="../gusb/gusb-endpoint.c"
             line="198">Gets the direction of the endpoint.</doc>
        <source-position filename="../gusb/gusb-endpoint.h" line="24"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-endpoint.c"
               line="204">The endpoint direction</doc>
          <type name="DeviceDirection" c:type="GUsbDeviceDirection"/>
        </return-value>
        <parameters>
          <instance-parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-endpoint.c"
                 line="200">a #GUsbEndpoint</doc>
            <type name="Endpoint" c:type="GUsbEndpoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_extra"
              c:identifier="g_usb_endpoint_get_extra"
              version="0.3.3">
        <doc xml:space="preserve"
             filename="../gusb/gusb-endpoint.c"
             line="217">Gets any extra data from the endpoint.</doc>
        <source-position filename="../gusb/gusb-endpoint.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-endpoint.c"
               line="223">a #GBytes, or %NULL for failure</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-endpoint.c"
                 line="219">a #GUsbEndpoint</doc>
            <type name="Endpoint" c:type="GUsbEndpoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="g_usb_endpoint_get_kind"
              version="0.3.3">
        <doc xml:space="preserve"
             filename="../gusb/gusb-endpoint.c"
             line="79">Gets the type of endpoint.</doc>
        <source-position filename="../gusb/gusb-endpoint.h" line="17"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-endpoint.c"
               line="85">The 8-bit type</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-endpoint.c"
                 line="81">a #GUsbEndpoint</doc>
            <type name="Endpoint" c:type="GUsbEndpoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_maximum_packet_size"
              c:identifier="g_usb_endpoint_get_maximum_packet_size"
              version="0.3.3">
        <doc xml:space="preserve"
             filename="../gusb/gusb-endpoint.c"
             line="96">Gets the maximum packet size this endpoint is capable of sending/receiving.</doc>
        <source-position filename="../gusb/gusb-endpoint.h" line="18"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-endpoint.c"
               line="102">The maximum packet size</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-endpoint.c"
                 line="98">a #GUsbEndpoint</doc>
            <type name="Endpoint" c:type="GUsbEndpoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_number"
              c:identifier="g_usb_endpoint_get_number"
              version="0.3.3">
        <doc xml:space="preserve"
             filename="../gusb/gusb-endpoint.c"
             line="181">Gets the number part of endpoint address.</doc>
        <source-position filename="../gusb/gusb-endpoint.h" line="23"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-endpoint.c"
               line="187">The lower 4-bit of endpoint address</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-endpoint.c"
                 line="183">a #GUsbEndpoint</doc>
            <type name="Endpoint" c:type="GUsbEndpoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_polling_interval"
              c:identifier="g_usb_endpoint_get_polling_interval"
              version="0.3.3">
        <doc xml:space="preserve"
             filename="../gusb/gusb-endpoint.c"
             line="113">Gets the endpoint polling interval.</doc>
        <source-position filename="../gusb/gusb-endpoint.h" line="19"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-endpoint.c"
               line="119">The endpoint polling interval</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-endpoint.c"
                 line="115">a #GUsbEndpoint</doc>
            <type name="Endpoint" c:type="GUsbEndpoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_refresh"
              c:identifier="g_usb_endpoint_get_refresh"
              version="0.3.3">
        <doc xml:space="preserve"
             filename="../gusb/gusb-endpoint.c"
             line="130">Gets the rate at which synchronization feedback is provided, for audio device only.</doc>
        <source-position filename="../gusb/gusb-endpoint.h" line="20"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-endpoint.c"
               line="136">The endpoint refresh</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-endpoint.c"
                 line="132">a #GUsbEndpoint</doc>
            <type name="Endpoint" c:type="GUsbEndpoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_synch_address"
              c:identifier="g_usb_endpoint_get_synch_address"
              version="0.3.3">
        <doc xml:space="preserve"
             filename="../gusb/gusb-endpoint.c"
             line="147">Gets the address if the synch endpoint, for audio device only.</doc>
        <source-position filename="../gusb/gusb-endpoint.h" line="21"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-endpoint.c"
               line="153">The synch endpoint address</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="endpoint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-endpoint.c"
                 line="149">a #GUsbEndpoint</doc>
            <type name="Endpoint" c:type="GUsbEndpoint*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="EndpointClass"
            c:type="GUsbEndpointClass"
            glib:is-gtype-struct-for="Endpoint">
      <source-position filename="../gusb/gusb-endpoint.h" line="15"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <function-macro name="IS_CONTEXT"
                    c:identifier="G_USB_IS_CONTEXT"
                    introspectable="0">
      <source-position filename="../gusb/gusb-context.h" line="18"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DEVICE"
                    c:identifier="G_USB_IS_DEVICE"
                    introspectable="0">
      <source-position filename="../gusb/gusb-device.h" line="20"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DEVICE_LIST"
                    c:identifier="G_USB_IS_DEVICE_LIST"
                    introspectable="0">
      <source-position filename="../gusb/gusb-device-list.h" line="17"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Interface"
           c:symbol-prefix="interface"
           c:type="GUsbInterface"
           parent="GObject.Object"
           glib:type-name="GUsbInterface"
           glib:get-type="g_usb_interface_get_type"
           glib:type-struct="InterfaceClass">
      <source-position filename="../gusb/gusb-interface.h" line="16"/>
      <method name="get_alternate"
              c:identifier="g_usb_interface_get_alternate"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../gusb/gusb-interface.c"
             line="139">Gets the alternate setting for the interface.</doc>
        <source-position filename="../gusb/gusb-interface.h" line="21"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-interface.c"
               line="145">alt setting, typically zero.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-interface.c"
                 line="141">a #GUsbInterface</doc>
            <type name="Interface" c:type="GUsbInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_class"
              c:identifier="g_usb_interface_get_class"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../gusb/gusb-interface.c"
             line="156">Gets the interface class, typically a #GUsbInterfaceClassCode.</doc>
        <source-position filename="../gusb/gusb-interface.h" line="22"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-interface.c"
               line="162">a interface class number, e.g. 0x09 is a USB hub.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-interface.c"
                 line="158">a #GUsbInterface</doc>
            <type name="Interface" c:type="GUsbInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_endpoints"
              c:identifier="g_usb_interface_get_endpoints"
              version="0.3.3">
        <doc xml:space="preserve"
             filename="../gusb/gusb-interface.c"
             line="243">Gets interface endpoints.</doc>
        <source-position filename="../gusb/gusb-interface.h" line="27"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../gusb/gusb-interface.c"
               line="249">an array of endpoints, or %NULL on failure</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Endpoint"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-interface.c"
                 line="245">a #GUsbInterface</doc>
            <type name="Interface" c:type="GUsbInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_extra"
              c:identifier="g_usb_interface_get_extra"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../gusb/gusb-interface.c"
             line="226">Gets any extra data from the interface.</doc>
        <source-position filename="../gusb/gusb-interface.h" line="26"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-interface.c"
               line="232">a #GBytes, or %NULL for failure</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-interface.c"
                 line="228">a #GUsbInterface</doc>
            <type name="Interface" c:type="GUsbInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_index"
              c:identifier="g_usb_interface_get_index"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../gusb/gusb-interface.c"
             line="209">Gets the index for the string descriptor.</doc>
        <source-position filename="../gusb/gusb-interface.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-interface.c"
               line="215">a string descriptor index.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-interface.c"
                 line="211">a #GUsbInterface</doc>
            <type name="Interface" c:type="GUsbInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="g_usb_interface_get_kind"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../gusb/gusb-interface.c"
             line="105">Gets the type of interface.</doc>
        <source-position filename="../gusb/gusb-interface.h" line="19"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-interface.c"
               line="111">The 8-bit address</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-interface.c"
                 line="107">a #GUsbInterface</doc>
            <type name="Interface" c:type="GUsbInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="g_usb_interface_get_length"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../gusb/gusb-interface.c"
             line="88">Gets the USB bus number for the interface.</doc>
        <source-position filename="../gusb/gusb-interface.h" line="18"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-interface.c"
               line="94">The 8-bit bus number</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-interface.c"
                 line="90">a #GUsbInterface</doc>
            <type name="Interface" c:type="GUsbInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_number"
              c:identifier="g_usb_interface_get_number"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../gusb/gusb-interface.c"
             line="122">Gets the interface number.</doc>
        <source-position filename="../gusb/gusb-interface.h" line="20"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-interface.c"
               line="128">The interface ID</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-interface.c"
                 line="124">a #GUsbInterface</doc>
            <type name="Interface" c:type="GUsbInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_protocol"
              c:identifier="g_usb_interface_get_protocol"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../gusb/gusb-interface.c"
             line="191">Gets the interface protocol qualified by the class and subclass numbers.
See g_usb_interface_get_class() and g_usb_interface_get_subclass().</doc>
        <source-position filename="../gusb/gusb-interface.h" line="24"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-interface.c"
               line="198">a interface protocol number.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-interface.c"
                 line="193">a #GUsbInterface</doc>
            <type name="Interface" c:type="GUsbInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subclass"
              c:identifier="g_usb_interface_get_subclass"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../gusb/gusb-interface.c"
             line="173">Gets the interface subclass qualified by the class number.
See g_usb_interface_get_class().</doc>
        <source-position filename="../gusb/gusb-interface.h" line="23"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-interface.c"
               line="180">a interface subclass number.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-interface.c"
                 line="175">a #GUsbInterface</doc>
            <type name="Interface" c:type="GUsbInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="InterfaceClass"
            c:type="GUsbInterfaceClass"
            glib:is-gtype-struct-for="Interface">
      <source-position filename="../gusb/gusb-interface.h" line="16"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <constant name="MAJOR_VERSION" value="0" c:type="G_USB_MAJOR_VERSION">
      <doc xml:space="preserve"
           filename="../gusb/gusb-version.h"
           line="24">The compile-time major version</doc>
      <source-position filename="../gusb/gusb-version.h" line="29"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MICRO_VERSION" value="10" c:type="G_USB_MICRO_VERSION">
      <doc xml:space="preserve"
           filename="../gusb/gusb-version.h"
           line="38">The compile-time micro version</doc>
      <source-position filename="../gusb/gusb-version.h" line="43"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION" value="3" c:type="G_USB_MINOR_VERSION">
      <doc xml:space="preserve"
           filename="../gusb/gusb-version.h"
           line="31">The compile-time minor version</doc>
      <source-position filename="../gusb/gusb-version.h" line="36"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <record name="Source" c:type="GUsbSource" disguised="1">
      <source-position filename="../gusb/gusb-source.h" line="17"/>
      <method name="set_callback"
              c:identifier="g_usb_source_set_callback"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../gusb/gusb-source.c"
             line="37">This function does nothing.</doc>
        <source-position filename="../gusb/gusb-source.h" line="32"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-source.c"
                 line="39">a #GUsbSource</doc>
            <type name="Source" c:type="GUsbSource*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-source.c"
                 line="40">a function to call</doc>
            <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-source.c"
                 line="41">data to pass to @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="../gusb/gusb-source.c"
                 line="42">a #GDestroyNotify</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <function name="error_quark"
                c:identifier="g_usb_source_error_quark"
                version="0.1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-source.c"
               line="24">Our personal error quark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </record>
    <enumeration name="SourceError"
                 c:type="GUsbSourceError"
                 glib:error-domain="g_usb_source_error">
      <doc xml:space="preserve"
           filename="../gusb/gusb-source.h"
           line="19">The error code.</doc>
      <source-position filename="../gusb/gusb-source.h" line="26"/>
      <member name="source_error_internal"
              value="0"
              c:identifier="G_USB_SOURCE_ERROR_INTERNAL">
      </member>
    </enumeration>
    <docsection name="gusb-context">
      <doc xml:space="preserve"
           filename="../gusb/gusb-context.c"
           line="9">This object is used to get a context that is thread safe.</doc>
    </docsection>
    <docsection name="gusb-device">
      <doc xml:space="preserve"
           filename="../gusb/gusb-device.c"
           line="10">This object is a thin glib wrapper around a libusb_device</doc>
    </docsection>
    <docsection name="gusb-device-list">
      <doc xml:space="preserve"
           filename="../gusb/gusb-device-list.c"
           line="9">A device list that is updated as devices are pluged in and unplugged.</doc>
    </docsection>
    <docsection name="gusb-endpoint">
      <doc xml:space="preserve"
           filename="../gusb/gusb-endpoint.c"
           line="8">This object is a thin glib wrapper around a libusb_endpoint_descriptor.

All the data is copied when the object is created and the original
descriptor can be destroyed any at point.</doc>
    </docsection>
    <docsection name="gusb-interface">
      <doc xml:space="preserve"
           filename="../gusb/gusb-interface.c"
           line="9">This object is a thin glib wrapper around a libusb_interface_descriptor.

All the data is copied when the object is created and the original
descriptor can be destroyed any at point.</doc>
    </docsection>
    <docsection name="gusb-source">
      <doc xml:space="preserve"
           filename="../gusb/gusb-source.c"
           line="9">This object used to integrate libusb into the GLib main loop before we used
a thread. It's now pretty much unused.</doc>
    </docsection>
    <docsection name="gusb-version">
      <doc xml:space="preserve"
           filename="../gusb/gusb-version.h"
           line="8">These compile time macros allow the user to enable parts of client code
depending on the version of libgusb installed.</doc>
    </docsection>
    <function name="source_error_quark"
              c:identifier="g_usb_source_error_quark"
              moved-to="Source.error_quark"
              version="0.1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gusb/gusb-source.c"
             line="24">Our personal error quark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="strerror" c:identifier="g_usb_strerror" version="0.1.0">
      <doc xml:space="preserve"
           filename="../gusb/gusb-util.c"
           line="14">Converts the error code into a string</doc>
      <source-position filename="../gusb/gusb-util.h" line="14"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gusb/gusb-util.c"
             line="20">String, or %NULL</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="error_code" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gusb/gusb-util.c"
               line="16">a libusb error code</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="version_string"
              c:identifier="g_usb_version_string"
              version="0.3.1">
      <doc xml:space="preserve"
           filename="../gusb/gusb-version.c"
           line="12">Gets the GUsb installed runtime version.</doc>
      <source-position filename="../gusb/gusb-version.h" line="57"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gusb/gusb-version.c"
             line="17">a version number, e.g. "0.3.1"</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
    </function>
  </namespace>
</repository>
