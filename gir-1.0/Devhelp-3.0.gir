<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gtk" version="3.0"/>
  <include name="WebKit2" version="4.0"/>
  <package name="libdevhelp-3.0"/>
  <c:include name="devhelp/devhelp.h"/>
  <namespace name="Devhelp"
             version="3.0"
             shared-library="libdevhelp-3.so.2"
             c:identifier-prefixes="Dh,dh"
             c:symbol-prefixes="dh,dh">
    <class name="App"
           c:symbol-prefix="app"
           c:type="DhApp"
           parent="Gtk.Application"
           glib:type-name="DhApp"
           glib:get-type="dh_app_get_type"
           glib:type-struct="AppClass">
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <constructor name="new" c:identifier="dh_app_new">
        <doc xml:space="preserve">Create a new #DhApp object.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #DhApp object</doc>
          <type name="App" c:type="DhApp*"/>
        </return-value>
      </constructor>
      <method name="new_window" c:identifier="dh_app_new_window">
        <doc xml:space="preserve">Create a new #DhWindow.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve">a #DhApp object</doc>
            <type name="App" c:type="DhApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="peek_assistant" c:identifier="dh_app_peek_assistant">
        <doc xml:space="preserve">Get the associated #DhAssistant.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the assistant</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve">a #DhApp object</doc>
            <type name="App" c:type="DhApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="peek_book_manager" c:identifier="dh_app_peek_book_manager">
        <doc xml:space="preserve">Get the associated #DhBookManager.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the book manager associated with this</doc>
          <type name="BookManager" c:type="DhBookManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve">a #DhApp object</doc>
            <type name="App" c:type="DhApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="peek_first_window" c:identifier="dh_app_peek_first_window">
        <doc xml:space="preserve">Get the first #DhWindow.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the first window</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve">a #DhApp object</doc>
            <type name="App" c:type="DhApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="quit" c:identifier="dh_app_quit">
        <doc xml:space="preserve">Quit the application.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve">a #DhApp object</doc>
            <type name="App" c:type="DhApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="raise" c:identifier="dh_app_raise">
        <doc xml:space="preserve">Present the main window of the application.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve">a #DhApp object</doc>
            <type name="App" c:type="DhApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="search" c:identifier="dh_app_search">
        <doc xml:space="preserve">Search for @keyword in the entire application.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve">a #DhApp object</doc>
            <type name="App" c:type="DhApp*"/>
          </instance-parameter>
          <parameter name="keyword" transfer-ownership="none">
            <doc xml:space="preserve">the search request</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_assistant" c:identifier="dh_app_search_assistant">
        <doc xml:space="preserve">Search for @keyword in the entire application with a #DhAssistant.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve">a #DhApp object</doc>
            <type name="App" c:type="DhApp*"/>
          </instance-parameter>
          <parameter name="keyword" transfer-ownership="none">
            <doc xml:space="preserve">the search request</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Application" c:type="GtkApplication"/>
      </field>
    </class>
    <record name="AppClass" c:type="DhAppClass" glib:is-gtype-struct-for="App">
      <field name="parent_class">
        <type name="Gtk.ApplicationClass" c:type="GtkApplicationClass"/>
      </field>
    </record>
    <class name="Assistant"
           c:symbol-prefix="assistant"
           c:type="DhAssistant"
           parent="Gtk.ApplicationWindow"
           glib:type-name="DhAssistant"
           glib:get-type="dh_assistant_get_type"
           glib:type-struct="AssistantClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="dh_assistant_new">
        <doc xml:space="preserve">Create a new #DhAssistant object.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a new #DhAssistant object</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="application" transfer-ownership="none">
            <doc xml:space="preserve">the parent #DhApp</doc>
            <type name="App" c:type="DhApp*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="search" c:identifier="dh_assistant_search">
        <doc xml:space="preserve">Search for @str in the current assistant.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if @str was found, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="assistant" transfer-ownership="none">
            <doc xml:space="preserve">a #DhAssistant object</doc>
            <type name="Assistant" c:type="DhAssistant*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve">the search query</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.ApplicationWindow" c:type="GtkApplicationWindow"/>
      </field>
    </class>
    <record name="AssistantClass"
            c:type="DhAssistantClass"
            glib:is-gtype-struct-for="Assistant">
      <field name="parent_class">
        <type name="Gtk.ApplicationWindowClass"
              c:type="GtkApplicationWindowClass"/>
      </field>
    </record>
    <class name="AssistantView"
           c:symbol-prefix="assistant_view"
           c:type="DhAssistantView"
           parent="WebKit2.WebView"
           glib:type-name="DhAssistantView"
           glib:get-type="dh_assistant_view_get_type"
           glib:type-struct="AssistantViewClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="dh_assistant_view_new">
        <doc xml:space="preserve">Create a new #DhAssistantView object.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a new #DhAssistantView object</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="search" c:identifier="dh_assistant_view_search">
        <doc xml:space="preserve">Search for @str in the current assistant view.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if @str was found, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve">a #DhAssistantView object</doc>
            <type name="AssistantView" c:type="DhAssistantView*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve">the search query</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_book_manager"
              c:identifier="dh_assistant_view_set_book_manager">
        <doc xml:space="preserve">Set a new book manager to search in.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve">a #DhAssistantView object</doc>
            <type name="AssistantView" c:type="DhAssistantView*"/>
          </instance-parameter>
          <parameter name="book_manager" transfer-ownership="none">
            <doc xml:space="preserve">the new book manager</doc>
            <type name="BookManager" c:type="DhBookManager*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_link" c:identifier="dh_assistant_view_set_link">
        <doc xml:space="preserve">Open @link in the assistant view, if %NULL the view will be blanked.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if the requested link is open, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve">a #DhAssistantView object</doc>
            <type name="AssistantView" c:type="DhAssistantView*"/>
          </instance-parameter>
          <parameter name="link"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">a #DhLink to set or %NULL</doc>
            <type name="Link" c:type="DhLink*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="WebKit2.WebView" c:type="WebKitWebView"/>
      </field>
      <glib:signal name="open-uri">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve">the uri to open</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="AssistantViewClass"
            c:type="DhAssistantViewClass"
            glib:is-gtype-struct-for="AssistantView">
      <field name="parent_class">
        <type name="WebKit2.WebViewClass" c:type="WebKitWebViewClass"/>
      </field>
    </record>
    <class name="Book"
           c:symbol-prefix="book"
           c:type="DhBook"
           parent="GObject.Object"
           glib:type-name="DhBook"
           glib:get-type="dh_book_get_type"
           glib:type-struct="BookClass">
      <constructor name="new" c:identifier="dh_book_new">
        <doc xml:space="preserve">Create a new #DhBook object.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #DhBook object</doc>
          <type name="Book" c:type="DhBook*"/>
        </return-value>
        <parameters>
          <parameter name="book_path" transfer-ownership="none">
            <doc xml:space="preserve">the path of the book</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="cmp_by_name" c:identifier="dh_book_cmp_by_name">
        <doc xml:space="preserve">Compare the #DhBook @a and @b by their name.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">an integer less than, equal to, or greater than zero, if @a is &lt;, == or &gt; than @b.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve">a second #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cmp_by_name_str" c:identifier="dh_book_cmp_by_name_str">
        <doc xml:space="preserve">Compare the name of the #DhBook a with @b_name.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">an integer less than, equal to, or greater than zero, if the name of @a is &lt;, == or &gt; than @b_name.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
          <parameter name="b_name" transfer-ownership="none">
            <doc xml:space="preserve">a path to a book</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cmp_by_path" c:identifier="dh_book_cmp_by_path">
        <doc xml:space="preserve">Compare the #DhBook @a and @b by their paths.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">an integer less than, equal to, or greater than zero, if @a is &lt;, == or &gt; than @b.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve">a second #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cmp_by_path_str" c:identifier="dh_book_cmp_by_path_str">
        <doc xml:space="preserve">Compare the path of the #DhBook a with @b_path.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">an integer less than, equal to, or greater than zero, if the path of @a is &lt;, == or &gt; than @b_path.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
          <parameter name="b_path" transfer-ownership="none">
            <doc xml:space="preserve">a path to a book</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cmp_by_title" c:identifier="dh_book_cmp_by_title">
        <doc xml:space="preserve">Compare the #DhBook @a and @b by their title.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">an integer less than, equal to, or greater than zero, if @a is &lt;, == or &gt; than @b.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve">a second #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_completions" c:identifier="dh_book_get_completions">
        <doc xml:space="preserve">Get the #GList of completions associated with the book.</doc>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve">the completions associated with the book</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled" c:identifier="dh_book_get_enabled">
        <doc xml:space="preserve">Get the current state of the book.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if the book is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_keywords" c:identifier="dh_book_get_keywords">
        <doc xml:space="preserve">Get the #GList of keywords associated with the book.</doc>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve">the keywords associated with the book</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_language" c:identifier="dh_book_get_language">
        <doc xml:space="preserve">Get the book language.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the book language</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="dh_book_get_name">
        <doc xml:space="preserve">Get the book name.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the book name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_path" c:identifier="dh_book_get_path">
        <doc xml:space="preserve">Get the book path.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the book path</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title" c:identifier="dh_book_get_title">
        <doc xml:space="preserve">Get the book title.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the book title</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tree" c:identifier="dh_book_get_tree">
        <doc xml:space="preserve">Get the #GNode representing the book tree.</doc>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve">the book tree</doc>
          <type name="GLib.Node" c:type="GNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_enabled" c:identifier="dh_book_set_enabled">
        <doc xml:space="preserve">Enable or disable completely the book.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBook object</doc>
            <type name="Book" c:type="DhBook*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve">%TRUE to enable the book</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="deleted" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="disabled" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="enabled" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="updated" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="BookClass"
            c:type="DhBookClass"
            glib:is-gtype-struct-for="Book">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="BookManager"
           c:symbol-prefix="book_manager"
           c:type="DhBookManager"
           parent="GObject.Object"
           glib:type-name="DhBookManager"
           glib:get-type="dh_book_manager_get_type"
           glib:type-struct="BookManagerClass">
      <constructor name="new" c:identifier="dh_book_manager_new">
        <doc xml:space="preserve">Create a new #DhBookManager object.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #DhBookManager object</doc>
          <type name="BookManager" c:type="DhBookManager*"/>
        </return-value>
      </constructor>
      <method name="get_books" c:identifier="dh_book_manager_get_books">
        <doc xml:space="preserve">Get the #GList of books.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the books</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Book"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="book_manager" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBookManager object</doc>
            <type name="BookManager" c:type="DhBookManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_group_by_language"
              c:identifier="dh_book_manager_get_group_by_language">
        <doc xml:space="preserve">Get whether books should be grouped by language.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if books should be grouped by language, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="book_manager" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBookManager object</doc>
            <type name="BookManager" c:type="DhBookManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_languages"
              c:identifier="dh_book_manager_get_languages"
              deprecated="1"
              deprecated-version="3.18">
        <doc xml:space="preserve">Get the #GList of languages.</doc>
        <doc-deprecated xml:space="preserve">Not used anywhere</doc-deprecated>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the list of languages</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Language"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="book_manager" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBookManager object</doc>
            <type name="BookManager" c:type="DhBookManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="populate" c:identifier="dh_book_manager_populate">
        <doc xml:space="preserve">Populate the #DhBookManager with all books found on the system and user
directories.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="book_manager" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBookManager object</doc>
            <type name="BookManager" c:type="DhBookManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_group_by_language"
              c:identifier="dh_book_manager_set_group_by_language">
        <doc xml:space="preserve">Set whether books should be grouped by language.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="book_manager" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBookManager object</doc>
            <type name="BookManager" c:type="DhBookManager*"/>
          </instance-parameter>
          <parameter name="group_by_language" transfer-ownership="none">
            <doc xml:space="preserve">%TRUE if books should be grouped by language, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="group-by-language"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="book-created" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">the created book</doc>
            <type name="Book"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="book-deleted" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">the deleted book</doc>
            <type name="Book"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="book-disabled" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">the disabled book</doc>
            <type name="Book"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="book-enabled" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="book" transfer-ownership="none">
            <doc xml:space="preserve">the enabled book</doc>
            <type name="Book"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="language-disabled" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="language_name" transfer-ownership="none">
            <doc xml:space="preserve">the disabled language name</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="language-enabled" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="language_name" transfer-ownership="none">
            <doc xml:space="preserve">the enabled language name</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="BookManagerClass"
            c:type="DhBookManagerClass"
            glib:is-gtype-struct-for="BookManager">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="BookTree"
           c:symbol-prefix="book_tree"
           c:type="DhBookTree"
           parent="Gtk.TreeView"
           glib:type-name="DhBookTree"
           glib:get-type="dh_book_tree_get_type"
           glib:type-struct="BookTreeClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="dh_book_tree_new">
        <doc xml:space="preserve">Create a new #DhBookManager object.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a new #DhBookManager object</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="book_manager" transfer-ownership="none">
            <doc xml:space="preserve">the parent #DhBookManager</doc>
            <type name="BookManager" c:type="DhBookManager*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_selected_book"
              c:identifier="dh_book_tree_get_selected_book">
        <doc xml:space="preserve">Get the link pointing to the selected book.</doc>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve">the selected book link</doc>
          <type name="Link" c:type="DhLink*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBookTree object</doc>
            <type name="BookTree" c:type="DhBookTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="select_uri" c:identifier="dh_book_tree_select_uri">
        <doc xml:space="preserve">Select the given @uri.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBookTree object</doc>
            <type name="BookTree" c:type="DhBookTree*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve">the uri to select</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="book-manager"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="BookManager"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.TreeView" c:type="GtkTreeView"/>
      </field>
      <glib:signal name="link-selected" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">the selected #DhLink</doc>
            <type name="Link" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="BookTreeClass"
            c:type="DhBookTreeClass"
            glib:is-gtype-struct-for="BookTree">
      <field name="parent_class">
        <type name="Gtk.TreeViewClass" c:type="GtkTreeViewClass"/>
      </field>
    </record>
    <enumeration name="Error"
                 c:type="DhError"
                 glib:error-domain="dh-error-quark">
      <doc xml:space="preserve">Error codes returned the parser.</doc>
      <member name="file_not_found"
              value="0"
              c:identifier="DH_ERROR_FILE_NOT_FOUND">
        <doc xml:space="preserve">Requested file did not exist</doc>
      </member>
      <member name="malformed_book"
              value="1"
              c:identifier="DH_ERROR_MALFORMED_BOOK">
        <doc xml:space="preserve">Referred book is invalid</doc>
      </member>
      <member name="invalid_book_type"
              value="2"
              c:identifier="DH_ERROR_INVALID_BOOK_TYPE">
        <doc xml:space="preserve">Referred book has an invalid type</doc>
      </member>
      <member name="internal_error"
              value="3"
              c:identifier="DH_ERROR_INTERNAL_ERROR">
        <doc xml:space="preserve">An internal error occured</doc>
      </member>
    </enumeration>
    <class name="KeywordModel"
           c:symbol-prefix="keyword_model"
           c:type="DhKeywordModel"
           parent="GObject.Object"
           glib:type-name="DhKeywordModel"
           glib:get-type="dh_keyword_model_get_type"
           glib:type-struct="KeywordModelClass">
      <implements name="Gtk.TreeModel"/>
      <constructor name="new" c:identifier="dh_keyword_model_new">
        <doc xml:space="preserve">Create a new #DhKeywordModel object.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #DhKeywordModel object</doc>
          <type name="KeywordModel" c:type="DhKeywordModel*"/>
        </return-value>
      </constructor>
      <method name="filter" c:identifier="dh_keyword_model_filter">
        <doc xml:space="preserve">Find the book matching the given criteria.</doc>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve">the corresponding #DhLink or %NULL if
no link corresponding to the criteria is found</doc>
          <type name="Link" c:type="DhLink*"/>
        </return-value>
        <parameters>
          <instance-parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve">a #DhKeywordModel object</doc>
            <type name="KeywordModel" c:type="DhKeywordModel*"/>
          </instance-parameter>
          <parameter name="search_string" transfer-ownership="none">
            <doc xml:space="preserve">a search query</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="book_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">the id of a specific book or %NULL for all books</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="language"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">the name of a language or %NULL for all languages</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_words" c:identifier="dh_keyword_model_set_words">
        <doc xml:space="preserve">Set the #DhBookManager object on which words are analyzed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve">a #DhKeywordModel object</doc>
            <type name="KeywordModel" c:type="DhKeywordModel*"/>
          </instance-parameter>
          <parameter name="book_manager" transfer-ownership="none">
            <doc xml:space="preserve">a #DhBookManager to analyze</doc>
            <type name="BookManager" c:type="DhBookManager*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="KeywordModelClass"
            c:type="DhKeywordModelClass"
            glib:is-gtype-struct-for="KeywordModel">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Language"
           c:symbol-prefix="language"
           c:type="DhLanguage"
           parent="GObject.Object"
           glib:type-name="DhLanguage"
           glib:get-type="dh_language_get_type"
           glib:type-struct="LanguageClass">
      <constructor name="new" c:identifier="dh_language_new">
        <doc xml:space="preserve">Create a new #DhLanguage object.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #DhLanguage object</doc>
          <type name="Language" c:type="DhLanguage*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve">the name of the language</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="compare" c:identifier="dh_language_compare">
        <doc xml:space="preserve">Compares the name of @language_a with the name @language_b.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">an integer less than, equal to, or greater than zero, if the name
of @language_a is &lt;, == or &gt; than the name of @language_b</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="language_a" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLanguage object</doc>
            <type name="Language" c:type="DhLanguage*"/>
          </instance-parameter>
          <parameter name="language_b" transfer-ownership="none">
            <doc xml:space="preserve">the #DhLanguage object to compare with</doc>
            <type name="Language" c:type="DhLanguage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="compare_by_name"
              c:identifier="dh_language_compare_by_name">
        <doc xml:space="preserve">Compares the name of @language_a with @language_name_b.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">an integer less than, equal to, or greater than zero, if the name
of @language_a is &lt;, == or &gt; than @language_name_b</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="language_a" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLanguage object</doc>
            <type name="Language" c:type="DhLanguage*"/>
          </instance-parameter>
          <parameter name="language_name_b" transfer-ownership="none">
            <doc xml:space="preserve">the language name to compare with</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dec_n_books_enabled"
              c:identifier="dh_language_dec_n_books_enabled">
        <doc xml:space="preserve">Decrease the number of enabled books for this language.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if the counter is decreased to zero, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLanguage object</doc>
            <type name="Language" c:type="DhLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="dh_language_free"
              deprecated="1"
              deprecated-version="3.24">
        <doc xml:space="preserve">Free memory associated with the language.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_unref() instead.</doc-deprecated>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLanguage object</doc>
            <type name="Language" c:type="DhLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_books_enabled"
              c:identifier="dh_language_get_n_books_enabled">
        <doc xml:space="preserve">Get the number of enabled books</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The number of enabled books</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLanguage object</doc>
            <type name="Language" c:type="DhLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="dh_language_get_name">
        <doc xml:space="preserve">Get the language name.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The name of the language</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLanguage object</doc>
            <type name="Language" c:type="DhLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="inc_n_books_enabled"
              c:identifier="dh_language_inc_n_books_enabled">
        <doc xml:space="preserve">Increase the number of enabled books for this language.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLanguage object</doc>
            <type name="Language" c:type="DhLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="LanguageClass"
            c:type="DhLanguageClass"
            glib:is-gtype-struct-for="Language">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="Link"
            c:type="DhLink"
            glib:type-name="DhLink"
            glib:get-type="dh_link_get_type"
            c:symbol-prefix="link">
      <constructor name="new" c:identifier="dh_link_new">
        <doc xml:space="preserve">Create a new #DhLink object.

If type is one of #DH_LINK_TYPE_BOOK or #DH_LINK_TYPE_PAGE then the @book and
@page links have to be provided.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #DhLink object</doc>
          <type name="Link" c:type="DhLink*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve">the type of the content the link is pointing to</doc>
            <type name="LinkType" c:type="DhLinkType"/>
          </parameter>
          <parameter name="base" transfer-ownership="none">
            <doc xml:space="preserve">the base path of the link</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve">the id of the link</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve">the name of the link</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="book"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">the link to the associated book or %NULL</doc>
            <type name="Link" c:type="DhLink*"/>
          </parameter>
          <parameter name="page"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">the link to the associated page or %NULL</doc>
            <type name="Link" c:type="DhLink*"/>
          </parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve">the filename of the link</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="compare" c:identifier="dh_link_compare">
        <doc xml:space="preserve">Compare the link @a and @b.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">an integer less than, equal to, or greater than zero, if @a is &lt;, == or &gt; than @b.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="gconstpointer"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve">the #DhLink to compare</doc>
            <type name="Link" c:type="gconstpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="dh_link_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_book_id" c:identifier="dh_link_get_book_id">
        <doc xml:space="preserve">Get the book id the link is pointing to.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the book id the link is pointing to</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_book_name" c:identifier="dh_link_get_book_name">
        <doc xml:space="preserve">Get the book name the link is pointing to.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the book name the link is pointing to</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_file_name" c:identifier="dh_link_get_file_name">
        <doc xml:space="preserve">Get the file name of the link.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the file name of the link</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags" c:identifier="dh_link_get_flags">
        <doc xml:space="preserve">Get the flags of the link.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the flags of the link</doc>
          <type name="LinkFlags" c:type="DhLinkFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_link_type" c:identifier="dh_link_get_link_type">
        <doc xml:space="preserve">Get the type of the link.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the type of the link</doc>
          <type name="LinkType" c:type="DhLinkType"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="dh_link_get_name">
        <doc xml:space="preserve">Get the name of the link.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the name of the link</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_page_name" c:identifier="dh_link_get_page_name">
        <doc xml:space="preserve">Get the page name the link is pointing to.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the page name the link is pointing to</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_type_as_string"
              c:identifier="dh_link_get_type_as_string">
        <doc xml:space="preserve">Get the link type name.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the link type name translated in the current language</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri" c:identifier="dh_link_get_uri">
        <doc xml:space="preserve">Get the uri of the link.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the uri of the link</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="dh_link_ref">
        <doc xml:space="preserve">Increase the reference count of @link.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the @link object</doc>
          <type name="Link" c:type="DhLink*"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_flags" c:identifier="dh_link_set_flags">
        <doc xml:space="preserve">Set the flags of the link.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve">the new flags of the link</doc>
            <type name="LinkFlags" c:type="DhLinkFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="unref" c:identifier="dh_link_unref">
        <doc xml:space="preserve">Decrease the reference count of @link.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">a #DhLink object</doc>
            <type name="Link" c:type="DhLink*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <bitfield name="LinkFlags" c:type="DhLinkFlags">
      <member name="none" value="0" c:identifier="DH_LINK_FLAGS_NONE">
        <doc xml:space="preserve">no flag set</doc>
      </member>
      <member name="deprecated"
              value="1"
              c:identifier="DH_LINK_FLAGS_DEPRECATED">
        <doc xml:space="preserve">deprecated link</doc>
      </member>
    </bitfield>
    <enumeration name="LinkType" c:type="DhLinkType">
      <doc xml:space="preserve">The type of the content the link points to.</doc>
      <member name="book" value="0" c:identifier="DH_LINK_TYPE_BOOK">
        <doc xml:space="preserve">a book</doc>
      </member>
      <member name="page" value="1" c:identifier="DH_LINK_TYPE_PAGE">
        <doc xml:space="preserve">a page</doc>
      </member>
      <member name="keyword" value="2" c:identifier="DH_LINK_TYPE_KEYWORD">
        <doc xml:space="preserve">a keyword</doc>
      </member>
      <member name="function" value="3" c:identifier="DH_LINK_TYPE_FUNCTION">
        <doc xml:space="preserve">a function</doc>
      </member>
      <member name="struct" value="4" c:identifier="DH_LINK_TYPE_STRUCT">
        <doc xml:space="preserve">a struct</doc>
      </member>
      <member name="macro" value="5" c:identifier="DH_LINK_TYPE_MACRO">
        <doc xml:space="preserve">a macro</doc>
      </member>
      <member name="enum" value="6" c:identifier="DH_LINK_TYPE_ENUM">
        <doc xml:space="preserve">an enum</doc>
      </member>
      <member name="typedef" value="7" c:identifier="DH_LINK_TYPE_TYPEDEF">
        <doc xml:space="preserve">a typedef</doc>
      </member>
      <member name="property" value="8" c:identifier="DH_LINK_TYPE_PROPERTY">
        <doc xml:space="preserve">a property</doc>
      </member>
      <member name="signal" value="9" c:identifier="DH_LINK_TYPE_SIGNAL">
        <doc xml:space="preserve">a signal</doc>
      </member>
    </enumeration>
    <bitfield name="OpenLinkFlags" c:type="DhOpenLinkFlags">
      <member name="window" value="1" c:identifier="DH_OPEN_LINK_NEW_WINDOW">
        <doc xml:space="preserve">Open the link in a new window</doc>
      </member>
      <member name="tab" value="2" c:identifier="DH_OPEN_LINK_NEW_TAB">
        <doc xml:space="preserve">Open the link in a new tab</doc>
      </member>
    </bitfield>
    <class name="Sidebar"
           c:symbol-prefix="sidebar"
           c:type="DhSidebar"
           parent="Gtk.Box"
           glib:type-name="DhSidebar"
           glib:get-type="dh_sidebar_get_type"
           glib:type-struct="SidebarClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="dh_sidebar_new">
        <doc xml:space="preserve">Create a new #DhSidebar object.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a new #DhSidebar object</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="book_manager" transfer-ownership="none">
            <doc xml:space="preserve">the book manager</doc>
            <type name="BookManager" c:type="DhBookManager*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="link_selected">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="search" transfer-ownership="none">
            <type name="Sidebar" c:type="DhSidebar*"/>
          </instance-parameter>
          <parameter name="link" transfer-ownership="none">
            <type name="Link" c:type="DhLink*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_selected_book"
              c:identifier="dh_sidebar_get_selected_book">
        <doc xml:space="preserve">Get the link pointing to the selected book.</doc>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve">the selected book link</doc>
          <type name="Link" c:type="DhLink*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sidebar" transfer-ownership="none">
            <doc xml:space="preserve">a #DhSidebar object</doc>
            <type name="Sidebar" c:type="DhSidebar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="select_uri" c:identifier="dh_sidebar_select_uri">
        <doc xml:space="preserve">Select the given @uri.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sidebar" transfer-ownership="none">
            <doc xml:space="preserve">a #DhSidebar object</doc>
            <type name="Sidebar" c:type="DhSidebar*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve">the uri to select</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_search_focus"
              c:identifier="dh_sidebar_set_search_focus">
        <doc xml:space="preserve">Give the focus to the search entry.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sidebar" transfer-ownership="none">
            <doc xml:space="preserve">a #DhSidebar object</doc>
            <type name="Sidebar" c:type="DhSidebar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_search_string"
              c:identifier="dh_sidebar_set_search_string">
        <doc xml:space="preserve">Set the search string to @str.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sidebar" transfer-ownership="none">
            <doc xml:space="preserve">a #DhSidebar object</doc>
            <type name="Sidebar" c:type="DhSidebar*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve">the string to seach</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="book-manager"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="BookManager"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <glib:signal name="link-selected" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="link"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">the selected #DhLink</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SidebarClass"
            c:type="DhSidebarClass"
            glib:is-gtype-struct-for="Sidebar">
      <field name="parent_class">
        <doc xml:space="preserve">The parent class</doc>
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="link_selected">
        <callback name="link_selected">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="search" transfer-ownership="none">
              <type name="Sidebar" c:type="DhSidebar*"/>
            </parameter>
            <parameter name="link" transfer-ownership="none">
              <type name="Link" c:type="DhLink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Window"
           c:symbol-prefix="window"
           c:type="DhWindow"
           parent="Gtk.ApplicationWindow"
           glib:type-name="DhWindow"
           glib:get-type="dh_window_get_type"
           glib:type-struct="WindowClass">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="dh_window_new">
        <doc xml:space="preserve">Create a new #DhWindow object.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a new #DhWindow object</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="application" transfer-ownership="none">
            <doc xml:space="preserve">the #DhApp owning this window</doc>
            <type name="App" c:type="DhApp*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="open_link">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="Window" c:type="DhWindow*"/>
          </instance-parameter>
          <parameter name="location" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="OpenLinkFlags" c:type="DhOpenLinkFlags"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="search" c:identifier="dh_window_search">
        <doc xml:space="preserve">Search for @str in the current window.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve">a #DhWindow object</doc>
            <type name="Window" c:type="DhWindow*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve">the string to search</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.ApplicationWindow" c:type="GtkApplicationWindow"/>
      </field>
      <glib:signal name="open-link" when="last" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve">the location of the link</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve">a #DhOpenLinkFlags</doc>
            <type/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="WindowClass"
            c:type="DhWindowClass"
            glib:is-gtype-struct-for="Window">
      <field name="parent_class">
        <doc xml:space="preserve">The parent class</doc>
        <type name="Gtk.ApplicationWindowClass"
              c:type="GtkApplicationWindowClass"/>
      </field>
      <field name="open_link">
        <callback name="open_link">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <type name="Window" c:type="DhWindow*"/>
            </parameter>
            <parameter name="location" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="OpenLinkFlags" c:type="DhOpenLinkFlags"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <function name="error_quark" c:identifier="dh_error_quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="init" c:identifier="dh_init">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
  </namespace>
</repository>
