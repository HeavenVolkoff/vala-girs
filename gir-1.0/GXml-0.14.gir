<?xml version="1.0"?>
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="Gee" version="0.8"/>
<include name="GObject" version="2.0"/>
<include name="GLib" version="2.0"/>
<include name="Gio" version="2.0"/>
<include name="libxml2" version="2.0"/>
<package name="gxml-0.14"/>
<c:include name="gxml/gxml.h"/>
<namespace name="GXml" version="0.14" c:prefix="GXml">
	<attribute name="ccode.gir-version" value="0.14"/>
	<attribute name="ccode.gir-namespace" value="GXml"/>
	<enumeration name="NodeType" c:type="GXmlNodeType" glib:type-name="GXmlNodeType" glib:get-type="gxml_node_type_get_type">
		<member name="invalid" c:identifier="GXML_NODE_TYPE_INVALID" value="0"/>
		<member name="element" c:identifier="GXML_NODE_TYPE_ELEMENT" value="1"/>
		<member name="attribute" c:identifier="GXML_NODE_TYPE_ATTRIBUTE" value="0"/>
		<member name="text" c:identifier="GXML_NODE_TYPE_TEXT" value="1"/>
		<member name="cdata_section" c:identifier="GXML_NODE_TYPE_CDATA_SECTION" value="2"/>
		<member name="entity_reference" c:identifier="GXML_NODE_TYPE_ENTITY_REFERENCE" value="3"/>
		<member name="entity" c:identifier="GXML_NODE_TYPE_ENTITY" value="4"/>
		<member name="processing_instruction" c:identifier="GXML_NODE_TYPE_PROCESSING_INSTRUCTION" value="5"/>
		<member name="comment" c:identifier="GXML_NODE_TYPE_COMMENT" value="6"/>
		<member name="document" c:identifier="GXML_NODE_TYPE_DOCUMENT" value="7"/>
		<member name="document_type" c:identifier="GXML_NODE_TYPE_DOCUMENT_TYPE" value="8"/>
		<member name="document_fragment" c:identifier="GXML_NODE_TYPE_DOCUMENT_FRAGMENT" value="9"/>
		<member name="notation" c:identifier="GXML_NODE_TYPE_NOTATION" value="10"/>
	</enumeration>
	<enumeration name="XPathObjectType" c:type="GXmlXPathObjectType" glib:type-name="GXmlXPathObjectType" glib:get-type="gxml_xpath_object_type_get_type">
		<member name="undefined" c:identifier="GXML_XPATH_OBJECT_TYPE_UNDEFINED" value="0"/>
		<member name="nodeset" c:identifier="GXML_XPATH_OBJECT_TYPE_NODESET" value="1"/>
		<member name="boolean" c:identifier="GXML_XPATH_OBJECT_TYPE_BOOLEAN" value="2"/>
		<member name="number" c:identifier="GXML_XPATH_OBJECT_TYPE_NUMBER" value="3"/>
		<member name="string" c:identifier="GXML_XPATH_OBJECT_TYPE_STRING" value="4"/>
		<member name="point" c:identifier="GXML_XPATH_OBJECT_TYPE_POINT" value="5"/>
		<member name="range" c:identifier="GXML_XPATH_OBJECT_TYPE_RANGE" value="6"/>
		<member name="locationset" c:identifier="GXML_XPATH_OBJECT_TYPE_LOCATIONSET" value="7"/>
		<member name="users" c:identifier="GXML_XPATH_OBJECT_TYPE_USERS" value="8"/>
		<member name="xslt_tree" c:identifier="GXML_XPATH_OBJECT_TYPE_XSLT_TREE" value="9"/>
	</enumeration>
	<enumeration name="DocumentError" c:type="GXmlDocumentError" glib:error-domain="gxml_document_error-quark">
		<member name="invalid_document_error" c:identifier="GXML_DOCUMENT_ERROR_INVALID_DOCUMENT_ERROR" value="0"/>
		<member name="invalid_file" c:identifier="GXML_DOCUMENT_ERROR_INVALID_FILE" value="1"/>
	</enumeration>
	<enumeration name="SerializableError" c:type="GXmlSerializableError" glib:error-domain="gxml_serializable_error-quark">
		<member name="unsupported_type_error" c:identifier="GXML_SERIALIZABLE_ERROR_UNSUPPORTED_TYPE_ERROR" value="0"/>
		<member name="str_to_value_error" c:identifier="GXML_SERIALIZABLE_ERROR_STR_TO_VALUE_ERROR" value="1"/>
	</enumeration>
	<enumeration name="SerializableEnumError" c:type="GXmlSerializableEnumError" glib:error-domain="gxml_serializable_enum_error-quark">
		<member name="invalid_value_error" c:identifier="GXML_SERIALIZABLE_ENUM_ERROR_INVALID_VALUE_ERROR" value="0"/>
		<member name="parse_error" c:identifier="GXML_SERIALIZABLE_ENUM_ERROR_PARSE_ERROR" value="1"/>
	</enumeration>
	<enumeration name="EnumerationError" c:type="GXmlEnumerationError" glib:error-domain="gxml_enumeration_error-quark">
		<member name="invalid_value" c:identifier="GXML_ENUMERATION_ERROR_INVALID_VALUE" value="0"/>
		<member name="invalid_text" c:identifier="GXML_ENUMERATION_ERROR_INVALID_TEXT" value="1"/>
	</enumeration>
	<enumeration name="Error" c:type="GXmlError" glib:error-domain="gxml_error-quark">
		<member name="not_supported" c:identifier="GXML_ERROR_NOT_SUPPORTED" value="0"/>
		<member name="parser" c:identifier="GXML_ERROR_PARSER" value="1"/>
		<member name="writer" c:identifier="GXML_ERROR_WRITER" value="2"/>
	</enumeration>
	<enumeration name="DomError" c:type="GXmlDomError" glib:error-domain="gxml_dom_error-quark">
		<member name="index_size_error" c:identifier="GXML_DOM_ERROR_INDEX_SIZE_ERROR" value="1"/>
		<member name="domstring_size_error" c:identifier="GXML_DOM_ERROR_DOMSTRING_SIZE_ERROR" value="0"/>
		<member name="hierarchy_request_error" c:identifier="GXML_DOM_ERROR_HIERARCHY_REQUEST_ERROR" value="1"/>
		<member name="wrong_document_error" c:identifier="GXML_DOM_ERROR_WRONG_DOCUMENT_ERROR" value="2"/>
		<member name="invalid_character_error" c:identifier="GXML_DOM_ERROR_INVALID_CHARACTER_ERROR" value="3"/>
		<member name="no_data_allowed_error" c:identifier="GXML_DOM_ERROR_NO_DATA_ALLOWED_ERROR" value="4"/>
		<member name="no_modification_allowed_error" c:identifier="GXML_DOM_ERROR_NO_MODIFICATION_ALLOWED_ERROR" value="5"/>
		<member name="not_found_error" c:identifier="GXML_DOM_ERROR_NOT_FOUND_ERROR" value="6"/>
		<member name="not_supported_error" c:identifier="GXML_DOM_ERROR_NOT_SUPPORTED_ERROR" value="7"/>
		<member name="inuse_attribute_error" c:identifier="GXML_DOM_ERROR_INUSE_ATTRIBUTE_ERROR" value="8"/>
		<member name="invalid_state_error" c:identifier="GXML_DOM_ERROR_INVALID_STATE_ERROR" value="9"/>
		<member name="syntax_error" c:identifier="GXML_DOM_ERROR_SYNTAX_ERROR" value="10"/>
		<member name="invalid_modification_error" c:identifier="GXML_DOM_ERROR_INVALID_MODIFICATION_ERROR" value="11"/>
		<member name="namespace_error" c:identifier="GXML_DOM_ERROR_NAMESPACE_ERROR" value="12"/>
		<member name="invalid_access_error" c:identifier="GXML_DOM_ERROR_INVALID_ACCESS_ERROR" value="13"/>
		<member name="validation_error" c:identifier="GXML_DOM_ERROR_VALIDATION_ERROR" value="14"/>
		<member name="type_mismatch_error" c:identifier="GXML_DOM_ERROR_TYPE_MISMATCH_ERROR" value="15"/>
		<member name="security_error" c:identifier="GXML_DOM_ERROR_SECURITY_ERROR" value="16"/>
		<member name="network_error" c:identifier="GXML_DOM_ERROR_NETWORK_ERROR" value="17"/>
		<member name="abort_error" c:identifier="GXML_DOM_ERROR_ABORT_ERROR" value="18"/>
		<member name="url_mismatch_error" c:identifier="GXML_DOM_ERROR_URL_MISMATCH_ERROR" value="19"/>
		<member name="quota_exceeded_error" c:identifier="GXML_DOM_ERROR_QUOTA_EXCEEDED_ERROR" value="20"/>
		<member name="time_out_error" c:identifier="GXML_DOM_ERROR_TIME_OUT_ERROR" value="21"/>
		<member name="invalid_node_type_error" c:identifier="GXML_DOM_ERROR_INVALID_NODE_TYPE_ERROR" value="22"/>
		<member name="data_clone_error" c:identifier="GXML_DOM_ERROR_DATA_CLONE_ERROR" value="23"/>
	</enumeration>
	<enumeration name="XPathError" c:type="GXmlXPathError" glib:error-domain="gxml_xpath_error-quark">
		<member name="expression_ok" c:identifier="GXML_XPATH_ERROR_EXPRESSION_OK" value="0"/>
		<member name="number_error" c:identifier="GXML_XPATH_ERROR_NUMBER_ERROR" value="1"/>
		<member name="unfinished_literal_error" c:identifier="GXML_XPATH_ERROR_UNFINISHED_LITERAL_ERROR" value="2"/>
		<member name="start_literal_error" c:identifier="GXML_XPATH_ERROR_START_LITERAL_ERROR" value="3"/>
		<member name="variable_ref_error" c:identifier="GXML_XPATH_ERROR_VARIABLE_REF_ERROR" value="4"/>
		<member name="undef_variable_error" c:identifier="GXML_XPATH_ERROR_UNDEF_VARIABLE_ERROR" value="5"/>
		<member name="invalid_predicate_error" c:identifier="GXML_XPATH_ERROR_INVALID_PREDICATE_ERROR" value="6"/>
		<member name="expr_error" c:identifier="GXML_XPATH_ERROR_EXPR_ERROR" value="7"/>
		<member name="unclosed_error" c:identifier="GXML_XPATH_ERROR_UNCLOSED_ERROR" value="8"/>
		<member name="unknown_func_error" c:identifier="GXML_XPATH_ERROR_UNKNOWN_FUNC_ERROR" value="9"/>
		<member name="invalid_operand" c:identifier="GXML_XPATH_ERROR_INVALID_OPERAND" value="10"/>
		<member name="invalid_type" c:identifier="GXML_XPATH_ERROR_INVALID_TYPE" value="11"/>
		<member name="invalid_arity" c:identifier="GXML_XPATH_ERROR_INVALID_ARITY" value="12"/>
		<member name="invalid_ctxt_size" c:identifier="GXML_XPATH_ERROR_INVALID_CTXT_SIZE" value="13"/>
		<member name="invalid_ctxt_position" c:identifier="GXML_XPATH_ERROR_INVALID_CTXT_POSITION" value="14"/>
		<member name="memory_error" c:identifier="GXML_XPATH_ERROR_MEMORY_ERROR" value="15"/>
		<member name="xptr_syntax_error" c:identifier="GXML_XPATH_ERROR_XPTR_SYNTAX_ERROR" value="16"/>
		<member name="xptr_resource_error" c:identifier="GXML_XPATH_ERROR_XPTR_RESOURCE_ERROR" value="17"/>
		<member name="xptr_sub_resource_error" c:identifier="GXML_XPATH_ERROR_XPTR_SUB_RESOURCE_ERROR" value="18"/>
		<member name="undef_prefix_error" c:identifier="GXML_XPATH_ERROR_UNDEF_PREFIX_ERROR" value="19"/>
		<member name="encoding_error" c:identifier="GXML_XPATH_ERROR_ENCODING_ERROR" value="20"/>
		<member name="invalid_char_error" c:identifier="GXML_XPATH_ERROR_INVALID_CHAR_ERROR" value="21"/>
		<member name="invalid_ctxt" c:identifier="GXML_XPATH_ERROR_INVALID_CTXT" value="22"/>
	</enumeration>
	<enumeration name="ParserError" c:type="GXmlParserError" glib:error-domain="gxml_parser_error-quark">
		<member name="invalid_data_error" c:identifier="GXML_PARSER_ERROR_INVALID_DATA_ERROR" value="0"/>
		<member name="invalid_file_error" c:identifier="GXML_PARSER_ERROR_INVALID_FILE_ERROR" value="1"/>
		<member name="invalid_stream_error" c:identifier="GXML_PARSER_ERROR_INVALID_STREAM_ERROR" value="2"/>
	</enumeration>
	<class name="ElementList" c:type="GXmlElementList" glib:type-name="GXmlElementList" glib:get-type="gxml_element_list_get_type" glib:type-struct="ElementListClass" parent="Gee.ArrayList">
		<implements name="GXml.DomHTMLCollection"/>
		<field name="parent_instance">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="priv">
			<type name="ElementListPrivate" c:type="GXmlElementListPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_element_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
		</constructor>
	</class>
	<record name="ElementListClass" c:type="GXmlElementListClass" glib:is-gtype-struct-for="ElementList">
		<field name="parent_class">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="ElementListPrivate" c:type="GXmlElementListPrivate" disguised="1"/>
	<class name="NodeList" c:type="GXmlNodeList" glib:type-name="GXmlNodeList" glib:get-type="gxml_node_list_get_type" glib:type-struct="NodeListClass" parent="Gee.ArrayList">
		<field name="parent_instance">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="priv">
			<type name="NodeListPrivate" c:type="GXmlNodeListPrivate*"/>
		</field>
		<method name="get" c:identifier="gxml_node_list_get">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_array" c:identifier="gxml_node_list_to_array">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_node_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.NodeList" c:type="GXmlNodeList*"/>
			</return-value>
		</constructor>
	</class>
	<record name="NodeListClass" c:type="GXmlNodeListClass" glib:is-gtype-struct-for="NodeList">
		<field name="parent_class">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="NodeListPrivate" c:type="GXmlNodeListPrivate" disguised="1"/>
	<class name="SerializableBool" c:type="GXmlSerializableBool" glib:type-name="GXmlSerializableBool" glib:get-type="gxml_serializable_bool_get_type" glib:type-struct="SerializableBoolClass" parent="GObject.Object">
		<implements name="GXml.SerializableProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableBoolPrivate" c:type="GXmlSerializableBoolPrivate*"/>
		</field>
		<method name="get_value" c:identifier="gxml_serializable_bool_get_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gxml_serializable_bool_set_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="gxml_serializable_bool_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_bool_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableBool" c:type="GXmlSerializableBool*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableBoolClass" c:type="GXmlSerializableBoolClass" glib:is-gtype-struct-for="SerializableBool">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SerializableBoolPrivate" c:type="GXmlSerializableBoolPrivate" disguised="1"/>
	<class name="SerializableDouble" c:type="GXmlSerializableDouble" glib:type-name="GXmlSerializableDouble" glib:get-type="gxml_serializable_double_get_type" glib:type-struct="SerializableDoubleClass" parent="GObject.Object">
		<implements name="GXml.SerializableProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableDoublePrivate" c:type="GXmlSerializableDoublePrivate*"/>
		</field>
		<field name="_val">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_fraction">
			<type name="gint" c:type="gint"/>
		</field>
		<method name="get_fraction" c:identifier="gxml_serializable_double_get_fraction">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_fraction" c:identifier="gxml_serializable_double_set_fraction">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="fraction" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_value" c:identifier="gxml_serializable_double_get_value">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gxml_serializable_double_set_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="gxml_serializable_double_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="format" c:identifier="gxml_serializable_double_format">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_double_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableDouble" c:type="GXmlSerializableDouble*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableDoubleClass" c:type="GXmlSerializableDoubleClass" glib:is-gtype-struct-for="SerializableDouble">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SerializableDoublePrivate" c:type="GXmlSerializableDoublePrivate" disguised="1"/>
	<class name="SerializableFloat" c:type="GXmlSerializableFloat" glib:type-name="GXmlSerializableFloat" glib:get-type="gxml_serializable_float_get_type" glib:type-struct="SerializableFloatClass" parent="GXml.SerializableDouble">
		<field name="parent_instance">
			<type name="GXml.SerializableDouble" c:type="GXmlSerializableDouble"/>
		</field>
		<field name="priv">
			<type name="SerializableFloatPrivate" c:type="GXmlSerializableFloatPrivate*"/>
		</field>
		<method name="get_value" c:identifier="gxml_serializable_float_get_value">
			<return-value transfer-ownership="full">
				<type name="gfloat" c:type="gfloat"/>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gxml_serializable_float_set_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gfloat" c:type="gfloat"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_float_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableFloat" c:type="GXmlSerializableFloat*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableFloatClass" c:type="GXmlSerializableFloatClass" glib:is-gtype-struct-for="SerializableFloat">
		<field name="parent_class">
			<type name="GXml.SerializableDoubleClass" c:type="GXmlSerializableDoubleClass"/>
		</field>
	</record>
	<record name="SerializableFloatPrivate" c:type="GXmlSerializableFloatPrivate" disguised="1"/>
	<class name="SerializableEnum" c:type="GXmlSerializableEnum" glib:type-name="GXmlSerializableEnum" glib:get-type="gxml_serializable_enum_get_type" glib:type-struct="SerializableEnumClass" parent="GObject.Object">
		<implements name="GXml.SerializableProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableEnumPrivate" c:type="GXmlSerializableEnumPrivate*"/>
		</field>
		<field name="_val">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_enumtype">
			<type name="GType" c:type="GType"/>
		</field>
		<constructor name="with_enum" c:identifier="gxml_serializable_enum_new_with_enum">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableEnum" c:type="GXmlSerializableEnum*"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="set_enum_type" c:identifier="gxml_serializable_enum_set_enum_type">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_enum_type" c:identifier="gxml_serializable_enum_get_enum_type">
			<return-value transfer-ownership="full">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<method name="parse" c:identifier="gxml_serializable_enum_parse" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="parse_integer" c:identifier="gxml_serializable_enum_parse_integer" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="v" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_integer" c:identifier="gxml_serializable_enum_to_integer" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="to_string" c:identifier="gxml_serializable_enum_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_enum_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableEnum" c:type="GXmlSerializableEnum*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableEnumClass" c:type="GXmlSerializableEnumClass" glib:is-gtype-struct-for="SerializableEnum">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SerializableEnumPrivate" c:type="GXmlSerializableEnumPrivate" disguised="1"/>
	<class name="SerializableInt" c:type="GXmlSerializableInt" glib:type-name="GXmlSerializableInt" glib:get-type="gxml_serializable_int_get_type" glib:type-struct="SerializableIntClass" parent="GXml.SerializableDouble">
		<field name="parent_instance">
			<type name="GXml.SerializableDouble" c:type="GXmlSerializableDouble"/>
		</field>
		<field name="priv">
			<type name="SerializableIntPrivate" c:type="GXmlSerializableIntPrivate*"/>
		</field>
		<method name="get_value" c:identifier="gxml_serializable_int_get_value">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gxml_serializable_int_set_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_int_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableInt" c:type="GXmlSerializableInt*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableIntClass" c:type="GXmlSerializableIntClass" glib:is-gtype-struct-for="SerializableInt">
		<field name="parent_class">
			<type name="GXml.SerializableDoubleClass" c:type="GXmlSerializableDoubleClass"/>
		</field>
	</record>
	<record name="SerializableIntPrivate" c:type="GXmlSerializableIntPrivate" disguised="1"/>
	<class name="SerializableValueList" c:type="GXmlSerializableValueList" glib:type-name="GXmlSerializableValueList" glib:get-type="gxml_serializable_value_list_get_type" glib:type-struct="SerializableValueListClass" parent="GObject.Object">
		<implements name="GXml.SerializableProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableValueListPrivate" c:type="GXmlSerializableValueListPrivate*"/>
		</field>
		<field name="_vals">
			<array>
				<type name="utf8" c:type="gchar*"/>
			</array>
		</field>
		<field name="extra">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</field>
		<method name="get_values" c:identifier="gxml_serializable_value_list_get_values">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_values" invoker="get_values">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="add_values" c:identifier="gxml_serializable_value_list_add_values">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="vals" transfer-ownership="none">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="vals_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_values" invoker="add_values">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="vals" transfer-ownership="none">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="vals_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_value_at" c:identifier="gxml_serializable_value_list_get_value_at">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_value_at" invoker="get_value_at">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="select_value_at" c:identifier="gxml_serializable_value_list_select_value_at">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="select_value_at" invoker="select_value_at">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_values_array" c:identifier="gxml_serializable_value_list_get_values_array">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_values_array" invoker="get_values_array">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="is_value" c:identifier="gxml_serializable_value_list_is_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="is_value" invoker="is_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_serializable_value_list_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_value_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableValueListClass" c:type="GXmlSerializableValueListClass" glib:is-gtype-struct-for="SerializableValueList">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="get_values">
			<callback name="get_values" c:type="get_values">
				<return-value transfer-ownership="full">
					<type name="Gee.List" c:type="GeeList*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="add_values">
			<callback name="add_values" c:type="add_values">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
					<parameter name="vals" transfer-ownership="none">
						<array length="2">
							<type name="utf8" c:type="gchar*"/>
						</array>
					</parameter>
					<parameter name="vals_length1" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="get_value_at">
			<callback name="get_value_at" c:type="get_value_at">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="select_value_at">
			<callback name="select_value_at" c:type="select_value_at">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="get_values_array">
			<callback name="get_values_array" c:type="get_values_array">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="is_value">
			<callback name="is_value" c:type="is_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableValueListPrivate" c:type="GXmlSerializableValueListPrivate" disguised="1"/>
	<record name="Enumeration">
		<function name="get_nick" c:identifier="gxml_enumeration_get_nick" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_nick_camelcase" c:identifier="gxml_enumeration_get_nick_camelcase" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_string" c:identifier="gxml_enumeration_get_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="use_nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="camelcase" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</function>
		<function name="parse" c:identifier="gxml_enumeration_parse" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.EnumValue" c:type="GEnumValue*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="to_array" c:identifier="gxml_enumeration_to_array">
			<return-value transfer-ownership="none">
				<array length="1">
					<type name="GObject.EnumValue" c:type="GEnumValue"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</function>
		<function name="parse_integer" c:identifier="gxml_enumeration_parse_integer">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.EnumValue" c:type="GEnumValue*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<function name="to_string_array" c:identifier="gxml_enumeration_to_string_array" throws="1">
			<return-value transfer-ownership="full">
				<array length="1">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gxml_enumeration_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Enumeration" c:type="GXmlEnumeration*"/>
			</return-value>
		</constructor>
	</record>
	<class name="SerializableObjectModel" c:type="GXmlSerializableObjectModel" glib:type-name="GXmlSerializableObjectModel" glib:get-type="gxml_serializable_object_model_get_type" glib:type-struct="SerializableObjectModelClass" parent="GObject.Object" abstract="1">
		<implements name="GXml.Serializable"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableObjectModelPrivate" c:type="GXmlSerializableObjectModelPrivate*"/>
		</field>
		<field name="_node">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<method name="get_enable_unknown_serializable_property" c:identifier="gxml_serializable_object_model_get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_enable_unknown_serializable_property" invoker="get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_object_model_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_object_model_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_object_model_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_object_model_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="default_node_name" c:identifier="gxml_serializable_object_model_default_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="find_property_spec" c:identifier="gxml_serializable_object_model_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_object_model_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_object_model_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize" c:identifier="gxml_serializable_object_model_default_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="serialize_property" c:identifier="gxml_serializable_object_model_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize_property" c:identifier="gxml_serializable_object_model_default_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize" c:identifier="gxml_serializable_object_model_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize" c:identifier="gxml_serializable_object_model_default_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize_property" c:identifier="gxml_serializable_object_model_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize_property" c:identifier="gxml_serializable_object_model_default_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="gxml_serializable_object_model_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="properties" writable="1">
			<array>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</array>
		</property>
		<method name="get_properties" c:identifier="gxml_serializable_object_model_get_properties">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_properties" c:identifier="gxml_serializable_object_model_set_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignored-serializable-properties" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</type>
		</property>
		<method name="get_ignored_serializable_properties" c:identifier="gxml_serializable_object_model_get_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<method name="set_ignored_serializable_properties" c:identifier="gxml_serializable_object_model_set_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SerializableObjectModelClass" c:type="GXmlSerializableObjectModelClass" glib:is-gtype-struct-for="SerializableObjectModel">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="get_enable_unknown_serializable_property">
			<callback name="get_enable_unknown_serializable_property" c:type="get_enable_unknown_serializable_property">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableObjectModelPrivate" c:type="GXmlSerializableObjectModelPrivate" disguised="1"/>
	<class name="SerializableTreeMap" c:type="GXmlSerializableTreeMap" glib:type-name="GXmlSerializableTreeMap" glib:get-type="gxml_serializable_tree_map_get_type" glib:type-struct="SerializableTreeMapClass" parent="Gee.TreeMap">
		<implements name="GXml.Serializable"/>
		<implements name="GXml.SerializableCollection"/>
		<field name="parent_instance">
			<type name="Gee.TreeMap" c:type="GeeTreeMap"/>
		</field>
		<field name="priv">
			<type name="SerializableTreeMapPrivate" c:type="GXmlSerializableTreeMapPrivate*"/>
		</field>
		<field name="_node">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<field name="_deserialized">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="deserialize_proceed" c:identifier="gxml_serializable_tree_map_deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_proceed" invoker="deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialized" c:identifier="gxml_serializable_tree_map_deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialized" invoker="deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialize_node" c:identifier="gxml_serializable_tree_map_deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_node" invoker="deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_children" c:identifier="gxml_serializable_tree_map_deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_children" invoker="deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_tree_map_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_tree_map_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_tree_map_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_tree_map_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="find_property_spec" c:identifier="gxml_serializable_tree_map_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_tree_map_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_tree_map_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize" c:identifier="gxml_serializable_tree_map_default_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="serialize_property" c:identifier="gxml_serializable_tree_map_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize_property" c:identifier="gxml_serializable_tree_map_default_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize" c:identifier="gxml_serializable_tree_map_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize" c:identifier="gxml_serializable_tree_map_default_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize_property" c:identifier="gxml_serializable_tree_map_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize_property" c:identifier="gxml_serializable_tree_map_default_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_tree_map_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
			</return-value>
		</constructor>
		<property name="properties" writable="1">
			<array>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</array>
		</property>
		<method name="get_properties" c:identifier="gxml_serializable_tree_map_get_properties">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_properties" c:identifier="gxml_serializable_tree_map_set_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignored-serializable-properties" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</type>
		</property>
		<method name="get_ignored_serializable_properties" c:identifier="gxml_serializable_tree_map_get_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<method name="set_ignored_serializable_properties" c:identifier="gxml_serializable_tree_map_set_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SerializableTreeMapClass" c:type="GXmlSerializableTreeMapClass" glib:is-gtype-struct-for="SerializableTreeMap">
		<field name="parent_class">
			<type name="Gee.TreeMapClass" c:type="GeeTreeMapClass"/>
		</field>
				<field name="deserialize_proceed">
			<callback name="deserialize_proceed" c:type="deserialize_proceed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialized">
			<callback name="deserialized" c:type="deserialized">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_node">
			<callback name="deserialize_node" c:type="deserialize_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_children">
			<callback name="deserialize_children" c:type="deserialize_children" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableTreeMapPrivate" c:type="GXmlSerializableTreeMapPrivate" disguised="1"/>
	<class name="SerializableHashMap" c:type="GXmlSerializableHashMap" glib:type-name="GXmlSerializableHashMap" glib:get-type="gxml_serializable_hash_map_get_type" glib:type-struct="SerializableHashMapClass" parent="Gee.HashMap">
		<implements name="GXml.Serializable"/>
		<implements name="GXml.SerializableCollection"/>
		<field name="parent_instance">
			<type name="Gee.HashMap" c:type="GeeHashMap"/>
		</field>
		<field name="priv">
			<type name="SerializableHashMapPrivate" c:type="GXmlSerializableHashMapPrivate*"/>
		</field>
		<field name="_node">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<field name="_deserialized">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="deserialize_proceed" c:identifier="gxml_serializable_hash_map_deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_proceed" invoker="deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialized" c:identifier="gxml_serializable_hash_map_deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialized" invoker="deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialize_node" c:identifier="gxml_serializable_hash_map_deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_node" invoker="deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_children" c:identifier="gxml_serializable_hash_map_deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_children" invoker="deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_hash_map_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_enable_unknown_serializable_property" c:identifier="gxml_serializable_hash_map_get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_enable_unknown_serializable_property" invoker="get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_hash_map_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_hash_map_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_hash_map_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="find_property_spec" c:identifier="gxml_serializable_hash_map_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_hash_map_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_hash_map_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize" c:identifier="gxml_serializable_hash_map_default_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="serialize_property" c:identifier="gxml_serializable_hash_map_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize_property" c:identifier="gxml_serializable_hash_map_default_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize" c:identifier="gxml_serializable_hash_map_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize" c:identifier="gxml_serializable_hash_map_default_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize_property" c:identifier="gxml_serializable_hash_map_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize_property" c:identifier="gxml_serializable_hash_map_default_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_hash_map_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
			</return-value>
		</constructor>
		<property name="properties" writable="1">
			<array>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</array>
		</property>
		<method name="get_properties" c:identifier="gxml_serializable_hash_map_get_properties">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_properties" c:identifier="gxml_serializable_hash_map_set_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignored-serializable-properties" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</type>
		</property>
		<method name="get_ignored_serializable_properties" c:identifier="gxml_serializable_hash_map_get_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<method name="set_ignored_serializable_properties" c:identifier="gxml_serializable_hash_map_set_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SerializableHashMapClass" c:type="GXmlSerializableHashMapClass" glib:is-gtype-struct-for="SerializableHashMap">
		<field name="parent_class">
			<type name="Gee.HashMapClass" c:type="GeeHashMapClass"/>
		</field>
				<field name="deserialize_proceed">
			<callback name="deserialize_proceed" c:type="deserialize_proceed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialized">
			<callback name="deserialized" c:type="deserialized">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_node">
			<callback name="deserialize_node" c:type="deserialize_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_children">
			<callback name="deserialize_children" c:type="deserialize_children" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="get_enable_unknown_serializable_property">
			<callback name="get_enable_unknown_serializable_property" c:type="get_enable_unknown_serializable_property">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableHashMapPrivate" c:type="GXmlSerializableHashMapPrivate" disguised="1"/>
	<class name="SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap" glib:type-name="GXmlSerializableDualKeyMap" glib:get-type="gxml_serializable_dual_key_map_get_type" glib:type-struct="SerializableDualKeyMapClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="GXml.Serializable"/>
		<implements name="GXml.SerializableCollection"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableDualKeyMapPrivate" c:type="GXmlSerializableDualKeyMapPrivate*"/>
		</field>
		<field name="storage">
			<type name="Gee.HashMultiMap" c:type="GeeHashMultiMap*">
				<type name="gpointer" c:type="gpointer"/>
				<type name="Gee.HashMap" c:type="GeeHashMap*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</field>
		<field name="_node">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<field name="_deserialized">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="deserialize_proceed" c:identifier="gxml_serializable_dual_key_map_deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_proceed" invoker="deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialized" c:identifier="gxml_serializable_dual_key_map_deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialized" invoker="deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialize_node" c:identifier="gxml_serializable_dual_key_map_deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_node" invoker="deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_children" c:identifier="gxml_serializable_dual_key_map_deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_children" invoker="deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="secondary_keys" c:identifier="gxml_serializable_dual_key_map_secondary_keys">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="values_for_key" c:identifier="gxml_serializable_dual_key_map_values_for_key">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="primary_key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="values" c:identifier="gxml_serializable_dual_key_map_values">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<method name="set" c:identifier="gxml_serializable_dual_key_map_set">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="primary_key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="secundary_key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="val" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="gxml_serializable_dual_key_map_get">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="primary_key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="secondary_key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_dual_key_map_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_enable_unknown_serializable_property" c:identifier="gxml_serializable_dual_key_map_get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_enable_unknown_serializable_property" invoker="get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_dual_key_map_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_dual_key_map_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_dual_key_map_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="find_property_spec" c:identifier="gxml_serializable_dual_key_map_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_dual_key_map_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_dual_key_map_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize" c:identifier="gxml_serializable_dual_key_map_default_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="serialize_property" c:identifier="gxml_serializable_dual_key_map_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize_property" c:identifier="gxml_serializable_dual_key_map_default_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize" c:identifier="gxml_serializable_dual_key_map_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize" c:identifier="gxml_serializable_dual_key_map_default_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize_property" c:identifier="gxml_serializable_dual_key_map_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize_property" c:identifier="gxml_serializable_dual_key_map_default_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_dual_key_map_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
			</return-value>
		</constructor>
		<property name="value-type">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_value_type" c:identifier="gxml_serializable_dual_key_map_get_value_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<property name="primary-key-type">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_primary_key_type" c:identifier="gxml_serializable_dual_key_map_get_primary_key_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<property name="secondary-key-type">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_secondary_key_type" c:identifier="gxml_serializable_dual_key_map_get_secondary_key_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<property name="primary-keys">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_primary_keys" c:identifier="gxml_serializable_dual_key_map_get_primary_keys">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<property name="size">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_size" c:identifier="gxml_serializable_dual_key_map_get_size">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<property name="properties" writable="1">
			<array>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</array>
		</property>
		<method name="get_properties" c:identifier="gxml_serializable_dual_key_map_get_properties">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_properties" c:identifier="gxml_serializable_dual_key_map_set_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignored-serializable-properties" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</type>
		</property>
		<method name="get_ignored_serializable_properties" c:identifier="gxml_serializable_dual_key_map_get_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<method name="set_ignored_serializable_properties" c:identifier="gxml_serializable_dual_key_map_set_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SerializableDualKeyMapClass" c:type="GXmlSerializableDualKeyMapClass" glib:is-gtype-struct-for="SerializableDualKeyMap">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="deserialize_proceed">
			<callback name="deserialize_proceed" c:type="deserialize_proceed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialized">
			<callback name="deserialized" c:type="deserialized">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_node">
			<callback name="deserialize_node" c:type="deserialize_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_children">
			<callback name="deserialize_children" c:type="deserialize_children" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="get_enable_unknown_serializable_property">
			<callback name="get_enable_unknown_serializable_property" c:type="get_enable_unknown_serializable_property">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableDualKeyMapPrivate" c:type="GXmlSerializableDualKeyMapPrivate" disguised="1"/>
	<class name="SerializableArrayList" c:type="GXmlSerializableArrayList" glib:type-name="GXmlSerializableArrayList" glib:get-type="gxml_serializable_array_list_get_type" glib:type-struct="SerializableArrayListClass" parent="Gee.ArrayList">
		<implements name="GXml.Serializable"/>
		<implements name="GXml.SerializableCollection"/>
		<field name="parent_instance">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="priv">
			<type name="SerializableArrayListPrivate" c:type="GXmlSerializableArrayListPrivate*"/>
		</field>
		<field name="_node">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<field name="_deserialized">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="deserialize_proceed" c:identifier="gxml_serializable_array_list_deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_proceed" invoker="deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialized" c:identifier="gxml_serializable_array_list_deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialized" invoker="deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialize_node" c:identifier="gxml_serializable_array_list_deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_node" invoker="deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_children" c:identifier="gxml_serializable_array_list_deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_children" invoker="deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_array_list_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_array_list_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_array_list_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_array_list_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="find_property_spec" c:identifier="gxml_serializable_array_list_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_array_list_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_array_list_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize" c:identifier="gxml_serializable_array_list_default_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="serialize_property" c:identifier="gxml_serializable_array_list_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize_property" c:identifier="gxml_serializable_array_list_default_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize" c:identifier="gxml_serializable_array_list_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize" c:identifier="gxml_serializable_array_list_default_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize_property" c:identifier="gxml_serializable_array_list_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize_property" c:identifier="gxml_serializable_array_list_default_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_array_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
			</return-value>
		</constructor>
		<property name="properties" writable="1">
			<array>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</array>
		</property>
		<method name="get_properties" c:identifier="gxml_serializable_array_list_get_properties">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_properties" c:identifier="gxml_serializable_array_list_set_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignored-serializable-properties" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</type>
		</property>
		<method name="get_ignored_serializable_properties" c:identifier="gxml_serializable_array_list_get_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<method name="set_ignored_serializable_properties" c:identifier="gxml_serializable_array_list_set_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SerializableArrayListClass" c:type="GXmlSerializableArrayListClass" glib:is-gtype-struct-for="SerializableArrayList">
		<field name="parent_class">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
				<field name="deserialize_proceed">
			<callback name="deserialize_proceed" c:type="deserialize_proceed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialized">
			<callback name="deserialized" c:type="deserialized">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_node">
			<callback name="deserialize_node" c:type="deserialize_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_children">
			<callback name="deserialize_children" c:type="deserialize_children" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableArrayListPrivate" c:type="GXmlSerializableArrayListPrivate" disguised="1"/>
	<class name="SerializableContainer" c:type="GXmlSerializableContainer" glib:type-name="GXmlSerializableContainer" glib:get-type="gxml_serializable_container_get_type" glib:type-struct="SerializableContainerClass" parent="GXml.SerializableObjectModel" abstract="1">
		<field name="parent_instance">
			<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel"/>
		</field>
		<field name="priv">
			<type name="SerializableContainerPrivate" c:type="GXmlSerializableContainerPrivate*"/>
		</field>
		<method name="init_containers" c:identifier="gxml_serializable_container_init_containers">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="init_containers" invoker="init_containers">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
	</class>
	<record name="SerializableContainerClass" c:type="GXmlSerializableContainerClass" glib:is-gtype-struct-for="SerializableContainer">
		<field name="parent_class">
			<type name="GXml.SerializableObjectModelClass" c:type="GXmlSerializableObjectModelClass"/>
		</field>
				<field name="init_containers">
			<callback name="init_containers" c:type="init_containers">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableContainer" c:type="GXmlSerializableContainer*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableContainerPrivate" c:type="GXmlSerializableContainerPrivate" disguised="1"/>
	<class name="TAttribute" c:type="GXmlTAttribute" glib:type-name="GXmlTAttribute" glib:get-type="gxml_tattribute_get_type" glib:type-struct="TAttributeClass" parent="GXml.TNode">
		<implements name="GXml.Attribute"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TAttributePrivate" c:type="GXmlTAttributePrivate*"/>
		</field>
		<field name="_namespaces">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</field>
		<constructor name="new" c:identifier="gxml_tattribute_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TAttribute" c:type="GXmlTAttribute*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TAttributeClass" c:type="GXmlTAttributeClass" glib:is-gtype-struct-for="TAttribute">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TAttributePrivate" c:type="GXmlTAttributePrivate" disguised="1"/>
	<class name="TComment" c:type="GXmlTComment" glib:type-name="GXmlTComment" glib:get-type="gxml_tcomment_get_type" glib:type-struct="TCommentClass" parent="GXml.TNode">
		<implements name="GXml.Comment"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TCommentPrivate" c:type="GXmlTCommentPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tcomment_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TComment" c:type="GXmlTComment*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TCommentClass" c:type="GXmlTCommentClass" glib:is-gtype-struct-for="TComment">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TCommentPrivate" c:type="GXmlTCommentPrivate" disguised="1"/>
	<class name="TCDATA" c:type="GXmlTCDATA" glib:type-name="GXmlTCDATA" glib:get-type="gxml_tcdata_get_type" glib:type-struct="TCDATAClass" parent="GXml.TNode">
		<implements name="GXml.CDATA"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TCDATAPrivate" c:type="GXmlTCDATAPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tcdata_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TCDATA" c:type="GXmlTCDATA*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TCDATAClass" c:type="GXmlTCDATAClass" glib:is-gtype-struct-for="TCDATA">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TCDATAPrivate" c:type="GXmlTCDATAPrivate" disguised="1"/>
	<class name="TDocument" c:type="GXmlTDocument" glib:type-name="GXmlTDocument" glib:get-type="gxml_tdocument_get_type" glib:type-struct="TDocumentClass" parent="GXml.TNode">
		<implements name="GXml.Document"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TDocumentPrivate" c:type="GXmlTDocumentPrivate*"/>
		</field>
		<field name="_namespaces">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</field>
		<field name="_children">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</field>
		<constructor name="new" c:identifier="gxml_tdocument_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
		</constructor>
		<constructor name="from_path" c:identifier="gxml_tdocument_new_from_path">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri" c:identifier="gxml_tdocument_new_from_uri">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file" c:identifier="gxml_tdocument_new_from_file">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_stream" c:identifier="gxml_tdocument_new_from_stream">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_tdocument_new_from_string">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_path_with_readtype_func" c:identifier="gxml_tdocument_new_from_path_with_readtype_func">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri_with_readtype_func" c:identifier="gxml_tdocument_new_from_uri_with_readtype_func">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file_with_readtype_func" c:identifier="gxml_tdocument_new_from_file_with_readtype_func">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_stream_with_readtype_func" c:identifier="gxml_tdocument_new_from_stream_with_readtype_func">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string_with_readtype_func" c:identifier="gxml_tdocument_new_from_string_with_readtype_func">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="save_to" c:identifier="gxml_tdocument_save_to" throws="1" deprecated="Use save_as" deprecated-version="0.8.1">
			<attribute name="version.replacement" value="save_as"/>
			<attribute name="version.deprecated" value="true"/>
			<attribute name="version.deprecated-since" value="0.8.1"/>
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<function name="tw_save_as" c:identifier="gxml_tdocument_tw_save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</function>
		<function name="write_document" c:identifier="gxml_tdocument_write_document" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="tw" transfer-ownership="none">
					<type name="libxml2.TextWriter" c:type="xmlTextWriter*"/>
				</parameter>
			</parameters>
		</function>
		<function name="start_node" c:identifier="gxml_tdocument_start_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="tw" transfer-ownership="none">
					<type name="libxml2.TextWriter" c:type="xmlTextWriter*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="root" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="declared_ns" direction="inout" transfer-ownership="full">
					<type name="Gee.ArrayList" c:type="GeeArrayList**">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</parameter>
			</parameters>
		</function>
		<function name="read_doc" c:identifier="gxml_tdocument_read_doc" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="rtfunc" transfer-ownership="none" allow-none="1" closure="3" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="rtfunc_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="read_doc_stream" c:identifier="gxml_tdocument_read_doc_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="rtfunc" transfer-ownership="none" allow-none="1" closure="3" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="rtfunc_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="read_node" c:identifier="gxml_tdocument_read_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocumentReadType" c:type="GXmlTDocumentReadType"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="tr" transfer-ownership="none">
					<type name="libxml2.TextReader" c:type="xmlTextReader*"/>
				</parameter>
				<parameter name="rntfunc" transfer-ownership="none" allow-none="1" closure="3" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="rntfunc_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<callback name="ReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocumentReadType" c:type="GXmlTDocumentReadType"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="tr" transfer-ownership="none">
					<type name="libxml2.TextReader" c:type="xmlTextReader*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="2">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="TDocumentClass" c:type="GXmlTDocumentClass" glib:is-gtype-struct-for="TDocument">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TDocumentPrivate" c:type="GXmlTDocumentPrivate" disguised="1"/>
	<enumeration name="TDocumentReadType" c:type="GXmlTDocumentReadType" glib:type-name="GXmlTDocumentReadType" glib:get-type="gxml_tdocument_read_type_get_type">
		<member name="next" c:identifier="GXML_TDOCUMENT_READ_TYPE_NEXT" value="0"/>
		<member name="continue" c:identifier="GXML_TDOCUMENT_READ_TYPE_CONTINUE" value="1"/>
		<member name="stop" c:identifier="GXML_TDOCUMENT_READ_TYPE_STOP" value="2"/>
	</enumeration>
	<class name="TElement" c:type="GXmlTElement" glib:type-name="GXmlTElement" glib:get-type="gxml_telement_get_type" glib:type-struct="TElementClass" parent="GXml.TNode">
		<implements name="GXml.Element"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TElementPrivate" c:type="GXmlTElementPrivate*"/>
		</field>
		<field name="_attrs">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</field>
		<field name="_children">
			<type name="GXml.TNodeTChildrenList" c:type="GXmlTNodeTChildrenList*"/>
		</field>
		<field name="_namespaces">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</field>
		<constructor name="new" c:identifier="gxml_telement_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TElement" c:type="GXmlTElement*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TElementClass" c:type="GXmlTElementClass" glib:is-gtype-struct-for="TElement">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TElementPrivate" c:type="GXmlTElementPrivate" disguised="1"/>
	<class name="TNamespace" c:type="GXmlTNamespace" glib:type-name="GXmlTNamespace" glib:get-type="gxml_tnamespace_get_type" glib:type-struct="TNamespaceClass" parent="GXml.TNode">
		<implements name="GXml.Namespace"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TNamespacePrivate" c:type="GXmlTNamespacePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tnamespace_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TNamespace" c:type="GXmlTNamespace*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TNamespaceClass" c:type="GXmlTNamespaceClass" glib:is-gtype-struct-for="TNamespace">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TNamespacePrivate" c:type="GXmlTNamespacePrivate" disguised="1"/>
	<class name="TNode" c:type="GXmlTNode" glib:type-name="GXmlTNode" glib:get-type="gxml_tnode_get_type" glib:type-struct="TNodeClass" parent="GObject.Object" abstract="1">
		<implements name="GXml.Node"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TNodePrivate" c:type="GXmlTNodePrivate*"/>
		</field>
		<field name="_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_value">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_doc">
			<type name="GXml.Document" c:type="GXmlDocument*"/>
		</field>
		<field name="_parent">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<field name="_node_type">
			<type name="GXml.NodeType" c:type="GXmlNodeType"/>
		</field>
		<method name="set_namespace" c:identifier="gxml_tnode_set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_namespace" invoker="set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_tnode_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_parent" c:identifier="gxml_tnode_set_parent">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_parent" invoker="set_parent">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="attrs">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_attrs" c:identifier="gxml_tnode_get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_attrs" invoker="get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="children-nodes">
			<type name="Gee.BidirList" c:type="GeeBidirList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_children_nodes" c:identifier="gxml_tnode_get_children_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_children_nodes" invoker="get_children_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="document">
			<type name="GXml.Document" c:type="GXmlDocument*"/>
		</property>
		<method name="get_document" c:identifier="gxml_tnode_get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</method>
		<virtual-method name="get_document" invoker="get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_tnode_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="namespaces">
			<type name="Gee.List" c:type="GeeList*">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</type>
		</property>
		<method name="get_namespaces" c:identifier="gxml_tnode_get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_namespaces" invoker="get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="type-node">
			<type name="GXml.NodeType" c:type="GXmlNodeType"/>
		</property>
		<method name="get_type_node" c:identifier="gxml_tnode_get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</method>
		<virtual-method name="get_type_node" invoker="get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_tnode_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_tnode_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="parent">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</property>
		<method name="get_parent" c:identifier="gxml_tnode_get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_parent" invoker="get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</virtual-method>
	</class>
	<record name="TNodeClass" c:type="GXmlTNodeClass" glib:is-gtype-struct-for="TNode">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="set_namespace">
			<callback name="set_namespace" c:type="set_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.TNode" c:type="GXmlTNode*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="prefix" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.TNode" c:type="GXmlTNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_parent">
			<callback name="set_parent" c:type="set_parent">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.TNode" c:type="GXmlTNode*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="TNodePrivate" c:type="GXmlTNodePrivate" disguised="1"/>
	<class name="TNodeTChildrenList" c:type="GXmlTNodeTChildrenList" glib:type-name="GXmlTNodeTChildrenList" glib:get-type="gxml_tnode_tchildren_list_get_type" glib:type-struct="TNodeTChildrenListClass" parent="Gee.AbstractBidirList">
		<field name="parent_instance">
			<type name="Gee.AbstractBidirList" c:type="GeeAbstractBidirList"/>
		</field>
		<field name="priv">
			<type name="TNodeTChildrenListPrivate" c:type="GXmlTNodeTChildrenListPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tnode_tchildren_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TNodeTChildrenList" c:type="GXmlTNodeTChildrenList*"/>
			</return-value>
			<parameters>
				<parameter name="e" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TNodeTChildrenListClass" c:type="GXmlTNodeTChildrenListClass" glib:is-gtype-struct-for="TChildrenList">
		<field name="parent_class">
			<type name="Gee.AbstractBidirListClass" c:type="GeeAbstractBidirListClass"/>
		</field>
	</record>
	<record name="TNodeTChildrenListPrivate" c:type="GXmlTNodeTChildrenListPrivate" disguised="1"/>
	<class name="TProcessingInstruction" c:type="GXmlTProcessingInstruction" glib:type-name="GXmlTProcessingInstruction" glib:get-type="gxml_tprocessing_instruction_get_type" glib:type-struct="TProcessingInstructionClass" parent="GXml.TNode">
		<implements name="GXml.ProcessingInstruction"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TProcessingInstructionPrivate" c:type="GXmlTProcessingInstructionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tprocessing_instruction_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TProcessingInstruction" c:type="GXmlTProcessingInstruction*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TProcessingInstructionClass" c:type="GXmlTProcessingInstructionClass" glib:is-gtype-struct-for="TProcessingInstruction">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TProcessingInstructionPrivate" c:type="GXmlTProcessingInstructionPrivate" disguised="1"/>
	<class name="TText" c:type="GXmlTText" glib:type-name="GXmlTText" glib:get-type="gxml_ttext_get_type" glib:type-struct="TTextClass" parent="GXml.TNode">
		<implements name="GXml.Text"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TTextPrivate" c:type="GXmlTTextPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_ttext_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TText" c:type="GXmlTText*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TTextClass" c:type="GXmlTTextClass" glib:is-gtype-struct-for="TText">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TTextPrivate" c:type="GXmlTTextPrivate" disguised="1"/>
	<class name="HtmlDocument" c:type="GXmlHtmlDocument" glib:type-name="GXmlHtmlDocument" glib:get-type="gxml_html_document_get_type" glib:type-struct="HtmlDocumentClass" parent="GXml.GDocument">
		<field name="parent_instance">
			<type name="GXml.GDocument" c:type="GXmlGDocument"/>
		</field>
		<field name="priv">
			<type name="HtmlDocumentPrivate" c:type="GXmlHtmlDocumentPrivate*"/>
		</field>
		<constructor name="from_path" c:identifier="gxml_html_document_new_from_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri" c:identifier="gxml_html_document_new_from_uri" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file" c:identifier="gxml_html_document_new_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancel" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_html_document_new_from_string">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="html" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="gxml_html_document_new">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
		</constructor>
		<property name="default-options">
			<type name="gint" c:type="gint"/>
		</property>
		<function name="get_default_options" c:identifier="gxml_html_document_get_default_options">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</function>
	</class>
	<record name="HtmlDocumentClass" c:type="GXmlHtmlDocumentClass" glib:is-gtype-struct-for="HtmlDocument">
		<field name="parent_class">
			<type name="GXml.GDocumentClass" c:type="GXmlGDocumentClass"/>
		</field>
	</record>
	<record name="HtmlDocumentPrivate" c:type="GXmlHtmlDocumentPrivate" disguised="1"/>
	<class name="GAttribute" c:type="GXmlGAttribute" glib:type-name="GXmlGAttribute" glib:get-type="gxml_gattribute_get_type" glib:type-struct="GAttributeClass" parent="GXml.GNode">
		<implements name="GXml.Attribute"/>
		<implements name="GXml.DomAttr"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GAttributePrivate" c:type="GXmlGAttributePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gattribute_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GAttribute" c:type="GXmlGAttribute*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlAttr*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GAttributeClass" c:type="GXmlGAttributeClass" glib:is-gtype-struct-for="GAttribute">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
	</record>
	<record name="GAttributePrivate" c:type="GXmlGAttributePrivate" disguised="1"/>
	<class name="GComment" c:type="GXmlGComment" glib:type-name="GXmlGComment" glib:get-type="gxml_gcomment_get_type" glib:type-struct="GCommentClass" parent="GXml.GCharacterData">
		<implements name="GXml.Comment"/>
		<implements name="GXml.DomComment"/>
		<field name="parent_instance">
			<type name="GXml.GCharacterData" c:type="GXmlGCharacterData"/>
		</field>
		<field name="priv">
			<type name="GCommentPrivate" c:type="GXmlGCommentPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gcomment_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GComment" c:type="GXmlGComment*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GCommentClass" c:type="GXmlGCommentClass" glib:is-gtype-struct-for="GComment">
		<field name="parent_class">
			<type name="GXml.GCharacterDataClass" c:type="GXmlGCharacterDataClass"/>
		</field>
	</record>
	<record name="GCommentPrivate" c:type="GXmlGCommentPrivate" disguised="1"/>
	<class name="GCharacterData" c:type="GXmlGCharacterData" glib:type-name="GXmlGCharacterData" glib:get-type="gxml_gcharacter_data_get_type" glib:type-struct="GCharacterDataClass" parent="GXml.GNonDocumentChildNode">
		<implements name="GXml.Character"/>
		<implements name="GXml.DomCharacterData"/>
		<field name="parent_instance">
			<type name="GXml.GNonDocumentChildNode" c:type="GXmlGNonDocumentChildNode"/>
		</field>
		<field name="priv">
			<type name="GCharacterDataPrivate" c:type="GXmlGCharacterDataPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gcharacter_data_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GCharacterData" c:type="GXmlGCharacterData*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GCharacterDataClass" c:type="GXmlGCharacterDataClass" glib:is-gtype-struct-for="GCharacterData">
		<field name="parent_class">
			<type name="GXml.GNonDocumentChildNodeClass" c:type="GXmlGNonDocumentChildNodeClass"/>
		</field>
	</record>
	<record name="GCharacterDataPrivate" c:type="GXmlGCharacterDataPrivate" disguised="1"/>
	<class name="GChildNode" c:type="GXmlGChildNode" glib:type-name="GXmlGChildNode" glib:get-type="gxml_gchild_node_get_type" glib:type-struct="GChildNodeClass" parent="GXml.GNode">
		<implements name="GXml.DomChildNode"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GChildNodePrivate" c:type="GXmlGChildNodePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gchild_node_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GChildNode" c:type="GXmlGChildNode*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GChildNodeClass" c:type="GXmlGChildNodeClass" glib:is-gtype-struct-for="GChildNode">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
	</record>
	<record name="GChildNodePrivate" c:type="GXmlGChildNodePrivate" disguised="1"/>
	<class name="GNonDocumentChildNode" c:type="GXmlGNonDocumentChildNode" glib:type-name="GXmlGNonDocumentChildNode" glib:get-type="gxml_gnon_document_child_node_get_type" glib:type-struct="GNonDocumentChildNodeClass" parent="GXml.GChildNode">
		<implements name="GXml.DomNonDocumentTypeChildNode"/>
		<field name="parent_instance">
			<type name="GXml.GChildNode" c:type="GXmlGChildNode"/>
		</field>
		<field name="priv">
			<type name="GNonDocumentChildNodePrivate" c:type="GXmlGNonDocumentChildNodePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gnon_document_child_node_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GNonDocumentChildNode" c:type="GXmlGNonDocumentChildNode*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GNonDocumentChildNodeClass" c:type="GXmlGNonDocumentChildNodeClass" glib:is-gtype-struct-for="GNonDocumentChildNode">
		<field name="parent_class">
			<type name="GXml.GChildNodeClass" c:type="GXmlGChildNodeClass"/>
		</field>
	</record>
	<record name="GNonDocumentChildNodePrivate" c:type="GXmlGNonDocumentChildNodePrivate" disguised="1"/>
	<class name="GCDATA" c:type="GXmlGCDATA" glib:type-name="GXmlGCDATA" glib:get-type="gxml_gcdata_get_type" glib:type-struct="GCDATAClass" parent="GXml.GNode">
		<implements name="GXml.CDATA"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GCDATAPrivate" c:type="GXmlGCDATAPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gcdata_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GCDATA" c:type="GXmlGCDATA*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GCDATAClass" c:type="GXmlGCDATAClass" glib:is-gtype-struct-for="GCDATA">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
	</record>
	<record name="GCDATAPrivate" c:type="GXmlGCDATAPrivate" disguised="1"/>
	<class name="GDocument" c:type="GXmlGDocument" glib:type-name="GXmlGDocument" glib:get-type="gxml_gdocument_get_type" glib:type-struct="GDocumentClass" parent="GXml.GNode">
		<implements name="GXml.Document"/>
		<implements name="GXml.DomParentNode"/>
		<implements name="GXml.DomNonElementParentNode"/>
		<implements name="GXml.DomDocument"/>
		<implements name="GXml.DomXMLDocument"/>
		<implements name="GXml.XPathContext"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GDocumentPrivate" c:type="GXmlGDocumentPrivate*"/>
		</field>
		<field name="doc" allow-none="1">
			<type name="gpointer" c:type="xmlDoc*"/>
		</field>
		<field name="_buffer">
			<type name="libxml2.Buffer" c:type="xmlBuffer*"/>
		</field>
		<field name="_implementation">
			<type name="GXml.GImplementation" c:type="GXmlGImplementation*"/>
		</field>
		<field name="_url">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_origin">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_compat_mode">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_character_set">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_content_type">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_constructor">
			<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gdocument_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
		</constructor>
		<constructor name="from_path" c:identifier="gxml_gdocument_new_from_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri" c:identifier="gxml_gdocument_new_from_uri" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file" c:identifier="gxml_gdocument_new_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancel" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_gdocument_new_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_stream" c:identifier="gxml_gdocument_new_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_doc" c:identifier="gxml_gdocument_new_from_doc">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="libxml2.Doc" c:type="xmlDoc*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="libxml_to_string" c:identifier="gxml_gdocument_libxml_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="save" c:identifier="gxml_gdocument_save" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="save" invoker="save" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="save_as" c:identifier="gxml_gdocument_save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="save_as" invoker="save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</class>
	<record name="GDocumentClass" c:type="GXmlGDocumentClass" glib:is-gtype-struct-for="GDocument">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
				<field name="save">
			<callback name="save" c:type="save" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="save_as">
			<callback name="save_as" c:type="save_as" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
					</parameter>
					<parameter name="f" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="GDocumentPrivate" c:type="GXmlGDocumentPrivate" disguised="1"/>
	<class name="GImplementation" c:type="GXmlGImplementation" glib:type-name="GXmlGImplementation" glib:get-type="gxml_gimplementation_get_type" glib:type-struct="GImplementationClass" parent="GObject.Object">
		<implements name="GXml.DomImplementation"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GImplementationPrivate" c:type="GXmlGImplementationPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gimplementation_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GImplementation" c:type="GXmlGImplementation*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GImplementationClass" c:type="GXmlGImplementationClass" glib:is-gtype-struct-for="GImplementation">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GImplementationPrivate" c:type="GXmlGImplementationPrivate" disguised="1"/>
	<class name="GDocumentType" c:type="GXmlGDocumentType" glib:type-name="GXmlGDocumentType" glib:get-type="gxml_gdocument_type_get_type" glib:type-struct="GDocumentTypeClass" parent="GXml.GChildNode">
		<implements name="GXml.DomNode"/>
		<implements name="GXml.DomChildNode"/>
		<implements name="GXml.DomDocumentType"/>
		<field name="parent_instance">
			<type name="GXml.GChildNode" c:type="GXmlGChildNode"/>
		</field>
		<field name="priv">
			<type name="GDocumentTypePrivate" c:type="GXmlGDocumentTypePrivate*"/>
		</field>
		<field name="_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_public_id">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_system_id">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<constructor name="with_name" c:identifier="gxml_gdocument_type_new_with_name">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocumentType" c:type="GXmlGDocumentType*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="with_ids" c:identifier="gxml_gdocument_type_new_with_ids">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocumentType" c:type="GXmlGDocumentType*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="public_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="system_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="gxml_gdocument_type_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocumentType" c:type="GXmlGDocumentType*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GDocumentTypeClass" c:type="GXmlGDocumentTypeClass" glib:is-gtype-struct-for="GDocumentType">
		<field name="parent_class">
			<type name="GXml.GChildNodeClass" c:type="GXmlGChildNodeClass"/>
		</field>
	</record>
	<record name="GDocumentTypePrivate" c:type="GXmlGDocumentTypePrivate" disguised="1"/>
	<class name="GDocumentFragment" c:type="GXmlGDocumentFragment" glib:type-name="GXmlGDocumentFragment" glib:get-type="gxml_gdocument_fragment_get_type" glib:type-struct="GDocumentFragmentClass" parent="GXml.GDocument">
		<implements name="GXml.DomDocumentFragment"/>
		<field name="parent_instance">
			<type name="GXml.GDocument" c:type="GXmlGDocument"/>
		</field>
		<field name="priv">
			<type name="GDocumentFragmentPrivate" c:type="GXmlGDocumentFragmentPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gdocument_fragment_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocumentFragment" c:type="GXmlGDocumentFragment*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GDocumentFragmentClass" c:type="GXmlGDocumentFragmentClass" glib:is-gtype-struct-for="GDocumentFragment">
		<field name="parent_class">
			<type name="GXml.GDocumentClass" c:type="GXmlGDocumentClass"/>
		</field>
	</record>
	<record name="GDocumentFragmentPrivate" c:type="GXmlGDocumentFragmentPrivate" disguised="1"/>
	<class name="GDomNodeIterator" c:type="GXmlGDomNodeIterator" glib:type-name="GXmlGDomNodeIterator" glib:get-type="gxml_gdom_node_iterator_get_type" glib:type-struct="GDomNodeIteratorClass" parent="GObject.Object">
		<implements name="GXml.DomNodeIterator"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GDomNodeIteratorPrivate" c:type="GXmlGDomNodeIteratorPrivate*"/>
		</field>
		<field name="_root">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_reference_node">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_pointer_before_reference_node">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_what_to_show">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="_filter">
			<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gdom_node_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDomNodeIterator" c:type="GXmlGDomNodeIterator*"/>
			</return-value>
			<parameters>
				<parameter name="n" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="what_to_show" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="filter" transfer-ownership="none">
					<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GDomNodeIteratorClass" c:type="GXmlGDomNodeIteratorClass" glib:is-gtype-struct-for="GDomNodeIterator">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GDomNodeIteratorPrivate" c:type="GXmlGDomNodeIteratorPrivate" disguised="1"/>
	<class name="GDomTreeWalker" c:type="GXmlGDomTreeWalker" glib:type-name="GXmlGDomTreeWalker" glib:get-type="gxml_gdom_tree_walker_get_type" glib:type-struct="GDomTreeWalkerClass" parent="GObject.Object">
		<implements name="GXml.DomTreeWalker"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GDomTreeWalkerPrivate" c:type="GXmlGDomTreeWalkerPrivate*"/>
		</field>
		<field name="_root">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_what_to_show">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="_filter" allow-none="1">
			<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
		</field>
		<field name="_current_node">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gdom_tree_walker_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDomTreeWalker" c:type="GXmlGDomTreeWalker*"/>
			</return-value>
			<parameters>
				<parameter name="r" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="w" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GDomTreeWalkerClass" c:type="GXmlGDomTreeWalkerClass" glib:is-gtype-struct-for="GDomTreeWalker">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GDomTreeWalkerPrivate" c:type="GXmlGDomTreeWalkerPrivate" disguised="1"/>
	<class name="GDomTokenList" c:type="GXmlGDomTokenList" glib:type-name="GXmlGDomTokenList" glib:get-type="gxml_gdom_token_list_get_type" glib:type-struct="GDomTokenListClass" parent="Gee.ArrayList">
		<implements name="GXml.DomTokenList"/>
		<field name="parent_instance">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="priv">
			<type name="GDomTokenListPrivate" c:type="GXmlGDomTokenListPrivate*"/>
		</field>
		<field name="_element">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</field>
		<field name="_attr">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gdom_token_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDomTokenList" c:type="GXmlGDomTokenList*"/>
			</return-value>
			<parameters>
				<parameter name="e" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
				<parameter name="attr" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="update" c:identifier="gxml_gdom_token_list_update">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
	</class>
	<record name="GDomTokenListClass" c:type="GXmlGDomTokenListClass" glib:is-gtype-struct-for="GDomTokenList">
		<field name="parent_class">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="GDomTokenListPrivate" c:type="GXmlGDomTokenListPrivate" disguised="1"/>
	<class name="GDomSettableTokenList" c:type="GXmlGDomSettableTokenList" glib:type-name="GXmlGDomSettableTokenList" glib:get-type="gxml_gdom_settable_token_list_get_type" glib:type-struct="GDomSettableTokenListClass" parent="GXml.GDomTokenList">
		<implements name="GXml.DomSettableTokenList"/>
		<field name="parent_instance">
			<type name="GXml.GDomTokenList" c:type="GXmlGDomTokenList"/>
		</field>
		<field name="priv">
			<type name="GDomSettableTokenListPrivate" c:type="GXmlGDomSettableTokenListPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gdom_settable_token_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDomSettableTokenList" c:type="GXmlGDomSettableTokenList*"/>
			</return-value>
			<parameters>
				<parameter name="e" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
				<parameter name="attr" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GDomSettableTokenListClass" c:type="GXmlGDomSettableTokenListClass" glib:is-gtype-struct-for="GDomSettableTokenList">
		<field name="parent_class">
			<type name="GXml.GDomTokenListClass" c:type="GXmlGDomTokenListClass"/>
		</field>
	</record>
	<record name="GDomSettableTokenListPrivate" c:type="GXmlGDomSettableTokenListPrivate" disguised="1"/>
	<class name="GDomHTMLCollection" c:type="GXmlGDomHTMLCollection" glib:type-name="GXmlGDomHTMLCollection" glib:get-type="gxml_gdom_html_collection_get_type" glib:type-struct="GDomHTMLCollectionClass" parent="Gee.ArrayList">
		<implements name="GXml.DomHTMLCollection"/>
		<field name="parent_instance">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="priv">
			<type name="GDomHTMLCollectionPrivate" c:type="GXmlGDomHTMLCollectionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gdom_html_collection_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDomHTMLCollection" c:type="GXmlGDomHTMLCollection*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GDomHTMLCollectionClass" c:type="GXmlGDomHTMLCollectionClass" glib:is-gtype-struct-for="GDomHTMLCollection">
		<field name="parent_class">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="GDomHTMLCollectionPrivate" c:type="GXmlGDomHTMLCollectionPrivate" disguised="1"/>
	<class name="GDomEvent" c:type="GXmlGDomEvent" glib:type-name="GXmlGDomEvent" glib:get-type="gxml_gdom_event_get_type" glib:type-struct="GDomEventClass" parent="GObject.Object">
		<implements name="GXml.DomEvent"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GDomEventPrivate" c:type="GXmlGDomEventPrivate*"/>
		</field>
		<field name="_etype">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_event_target">
			<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
		</field>
		<field name="_current_target">
			<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
		</field>
		<field name="_bubbles">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_cancelable">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_is_trusted">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_time_stamp">
			<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
		</field>
		<field name="_default_prevented">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_event_phase">
			<type name="GXml.DomEventPhase" c:type="GXmlDomEventPhase"/>
		</field>
		<field name="_flags">
			<type name="GXml.DomEventFlags" c:type="GXmlDomEventFlags"/>
		</field>
		<constructor name="new" c:identifier="gxml_gdom_event_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDomEvent" c:type="GXmlGDomEvent*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GDomEventClass" c:type="GXmlGDomEventClass" glib:is-gtype-struct-for="GDomEvent">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GDomEventPrivate" c:type="GXmlGDomEventPrivate" disguised="1"/>
	<class name="GDomCustomEvent" c:type="GXmlGDomCustomEvent" glib:type-name="GXmlGDomCustomEvent" glib:get-type="gxml_gdom_custom_event_get_type" glib:type-struct="GDomCustomEventClass" parent="GXml.GDomEvent">
		<field name="parent_instance">
			<type name="GXml.GDomEvent" c:type="GXmlGDomEvent"/>
		</field>
		<field name="priv">
			<type name="GDomCustomEventPrivate" c:type="GXmlGDomCustomEventPrivate*"/>
		</field>
		<field name="_detail" allow-none="1">
			<type name="GObject.Value" c:type="GValue*"/>
		</field>
		<method name="init_custom_event" c:identifier="gxml_gdom_custom_event_init_custom_event">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="bubbles" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancelable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="detail" transfer-ownership="none" allow-none="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_gdom_custom_event_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDomCustomEvent" c:type="GXmlGDomCustomEvent*"/>
			</return-value>
		</constructor>
		<property name="detail">
			<type name="GObject.Value" c:type="GValue*"/>
		</property>
		<method name="get_detail" c:identifier="gxml_gdom_custom_event_get_detail">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GObject.Value" c:type="GValue*"/>
			</return-value>
		</method>
	</class>
	<record name="GDomCustomEventClass" c:type="GXmlGDomCustomEventClass" glib:is-gtype-struct-for="GDomCustomEvent">
		<field name="parent_class">
			<type name="GXml.GDomEventClass" c:type="GXmlGDomEventClass"/>
		</field>
	</record>
	<record name="GDomCustomEventPrivate" c:type="GXmlGDomCustomEventPrivate" disguised="1"/>
	<class name="GDomRange" c:type="GXmlGDomRange" glib:type-name="GXmlGDomRange" glib:get-type="gxml_gdom_range_get_type" glib:type-struct="GDomRangeClass" parent="GObject.Object">
		<implements name="GXml.DomRange"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GDomRangePrivate" c:type="GXmlGDomRangePrivate*"/>
		</field>
		<field name="_document">
			<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
		</field>
		<field name="_start_container">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_start_offset">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="_end_container">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_end_offset">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="_collapse">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_common_ancestor_container">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gdom_range_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDomRange" c:type="GXmlGDomRange*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GDomRangeClass" c:type="GXmlGDomRangeClass" glib:is-gtype-struct-for="GDomRange">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GDomRangePrivate" c:type="GXmlGDomRangePrivate" disguised="1"/>
	<class name="GElement" c:type="GXmlGElement" glib:type-name="GXmlGElement" glib:get-type="gxml_gelement_get_type" glib:type-struct="GElementClass" parent="GXml.GNonDocumentChildNode">
		<implements name="GXml.DomParentNode"/>
		<implements name="GXml.DomElement"/>
		<implements name="GXml.Element"/>
		<implements name="GXml.XPathContext"/>
		<field name="parent_instance">
			<type name="GXml.GNonDocumentChildNode" c:type="GXmlGNonDocumentChildNode"/>
		</field>
		<field name="priv">
			<type name="GElementPrivate" c:type="GXmlGElementPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gelement_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GElement" c:type="GXmlGElement*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GElementClass" c:type="GXmlGElementClass" glib:is-gtype-struct-for="GElement">
		<field name="parent_class">
			<type name="GXml.GNonDocumentChildNodeClass" c:type="GXmlGNonDocumentChildNodeClass"/>
		</field>
	</record>
	<record name="GElementPrivate" c:type="GXmlGElementPrivate" disguised="1"/>
	<class name="GNamespace" c:type="GXmlGNamespace" glib:type-name="GXmlGNamespace" glib:get-type="gxml_gnamespace_get_type" glib:type-struct="GNamespaceClass" parent="GObject.Object">
		<implements name="GXml.Namespace"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GNamespacePrivate" c:type="GXmlGNamespacePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gnamespace_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GNamespace" c:type="GXmlGNamespace*"/>
			</return-value>
			<parameters>
				<parameter name="ns" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNs*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_internal_ns" c:identifier="gxml_gnamespace_get_internal_ns">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="xmlNs*"/>
			</return-value>
		</method>
	</class>
	<record name="GNamespaceClass" c:type="GXmlGNamespaceClass" glib:is-gtype-struct-for="GNamespace">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GNamespacePrivate" c:type="GXmlGNamespacePrivate" disguised="1"/>
	<class name="GNode" c:type="GXmlGNode" glib:type-name="GXmlGNode" glib:get-type="gxml_gnode_get_type" glib:type-struct="GNodeClass" parent="GObject.Object" abstract="1">
		<implements name="GXml.DomEventTarget"/>
		<implements name="GXml.DomNode"/>
		<implements name="GXml.Node"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GNodePrivate" c:type="GXmlGNodePrivate*"/>
		</field>
		<field name="_doc">
			<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
		</field>
		<field name="_node" allow-none="1">
			<type name="gpointer" c:type="xmlNode*"/>
		</field>
		<field name="_base_uri">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="set_namespace" c:identifier="gxml_gnode_set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_namespace" invoker="set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_gnode_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="get_internal_node" c:identifier="gxml_gnode_get_internal_node">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="xmlNode*"/>
			</return-value>
		</method>
		<function name="to_gnode" c:identifier="gxml_gnode_to_gnode">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</function>
		<property name="attrs">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_attrs" c:identifier="gxml_gnode_get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_attrs" invoker="get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="children-nodes">
			<type name="Gee.BidirList" c:type="GeeBidirList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_children_nodes" c:identifier="gxml_gnode_get_children_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_children_nodes" invoker="get_children_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="namespaces">
			<type name="Gee.List" c:type="GeeList*">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</type>
		</property>
		<method name="get_namespaces" c:identifier="gxml_gnode_get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_namespaces" invoker="get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="document">
			<type name="GXml.Document" c:type="GXmlDocument*"/>
		</property>
		<method name="get_document" c:identifier="gxml_gnode_get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</method>
		<virtual-method name="get_document" invoker="get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</virtual-method>
		<property name="parent">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</property>
		<method name="get_parent" c:identifier="gxml_gnode_get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_parent" invoker="get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</virtual-method>
		<property name="type-node">
			<type name="GXml.NodeType" c:type="GXmlNodeType"/>
		</property>
		<method name="get_type_node" c:identifier="gxml_gnode_get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</method>
		<virtual-method name="get_type_node" invoker="get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_gnode_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_gnode_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_gnode_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</class>
	<record name="GNodeClass" c:type="GXmlGNodeClass" glib:is-gtype-struct-for="GNode">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="set_namespace">
			<callback name="set_namespace" c:type="set_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GNode" c:type="GXmlGNode*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="prefix" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GNode" c:type="GXmlGNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="GNodePrivate" c:type="GXmlGNodePrivate" disguised="1"/>
	<class name="GProcessingInstruction" c:type="GXmlGProcessingInstruction" glib:type-name="GXmlGProcessingInstruction" glib:get-type="gxml_gprocessing_instruction_get_type" glib:type-struct="GProcessingInstructionClass" parent="GXml.GCharacterData">
		<implements name="GXml.ProcessingInstruction"/>
		<implements name="GXml.DomProcessingInstruction"/>
		<field name="parent_instance">
			<type name="GXml.GCharacterData" c:type="GXmlGCharacterData"/>
		</field>
		<field name="priv">
			<type name="GProcessingInstructionPrivate" c:type="GXmlGProcessingInstructionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gprocessing_instruction_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GProcessingInstruction" c:type="GXmlGProcessingInstruction*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GProcessingInstructionClass" c:type="GXmlGProcessingInstructionClass" glib:is-gtype-struct-for="GProcessingInstruction">
		<field name="parent_class">
			<type name="GXml.GCharacterDataClass" c:type="GXmlGCharacterDataClass"/>
		</field>
	</record>
	<record name="GProcessingInstructionPrivate" c:type="GXmlGProcessingInstructionPrivate" disguised="1"/>
	<class name="GText" c:type="GXmlGText" glib:type-name="GXmlGText" glib:get-type="gxml_gtext_get_type" glib:type-struct="GTextClass" parent="GXml.GCharacterData">
		<implements name="GXml.Text"/>
		<implements name="GXml.DomText"/>
		<field name="parent_instance">
			<type name="GXml.GCharacterData" c:type="GXmlGCharacterData"/>
		</field>
		<field name="priv">
			<type name="GTextPrivate" c:type="GXmlGTextPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gtext_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GText" c:type="GXmlGText*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GTextClass" c:type="GXmlGTextClass" glib:is-gtype-struct-for="GText">
		<field name="parent_class">
			<type name="GXml.GCharacterDataClass" c:type="GXmlGCharacterDataClass"/>
		</field>
	</record>
	<record name="GTextPrivate" c:type="GXmlGTextPrivate" disguised="1"/>
	<class name="GHashMapAttr" c:type="GXmlGHashMapAttr" glib:type-name="GXmlGHashMapAttr" glib:get-type="gxml_ghash_map_attr_get_type" glib:type-struct="GHashMapAttrClass" parent="Gee.AbstractMap">
		<implements name="GXml.DomNamedNodeMap"/>
		<field name="parent_instance">
			<type name="Gee.AbstractMap" c:type="GeeAbstractMap"/>
		</field>
		<field name="priv">
			<type name="GHashMapAttrPrivate" c:type="GXmlGHashMapAttrPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_ghash_map_attr_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GHashMapAttr" c:type="GXmlGHashMapAttr*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GHashMapAttrClass" c:type="GXmlGHashMapAttrClass" glib:is-gtype-struct-for="GHashMapAttr">
		<field name="parent_class">
			<type name="Gee.AbstractMapClass" c:type="GeeAbstractMapClass"/>
		</field>
	</record>
	<record name="GHashMapAttrPrivate" c:type="GXmlGHashMapAttrPrivate" disguised="1"/>
	<class name="GHashMapAttrEntry" c:type="GXmlGHashMapAttrEntry" glib:type-name="GXmlGHashMapAttrEntry" glib:get-type="gxml_ghash_map_attr_entry_get_type" glib:type-struct="GHashMapAttrEntryClass" parent="Gee.MapEntry">
		<field name="parent_instance">
			<type name="Gee.MapEntry" c:type="GeeMapEntry"/>
		</field>
		<field name="priv">
			<type name="GHashMapAttrEntryPrivate" c:type="GXmlGHashMapAttrEntryPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_ghash_map_attr_entry_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GHashMapAttrEntry" c:type="GXmlGHashMapAttrEntry*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="attr" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlAttr*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GHashMapAttrEntryClass" c:type="GXmlGHashMapAttrEntryClass" glib:is-gtype-struct-for="Entry">
		<field name="parent_class">
			<type name="Gee.MapEntryClass" c:type="GeeMapEntryClass"/>
		</field>
	</record>
	<record name="GHashMapAttrEntryPrivate" c:type="GXmlGHashMapAttrEntryPrivate" disguised="1"/>
	<class name="GHashMapAttrIterator" c:type="GXmlGHashMapAttrIterator" glib:type-name="GXmlGHashMapAttrIterator" glib:get-type="gxml_ghash_map_attr_iterator_get_type" glib:type-struct="GHashMapAttrIteratorClass" parent="GObject.Object">
		<implements name="Gee.MapIterator"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GHashMapAttrIteratorPrivate" c:type="GXmlGHashMapAttrIteratorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_ghash_map_attr_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GHashMapAttrIterator" c:type="GXmlGHashMapAttrIterator*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GHashMapAttrIteratorClass" c:type="GXmlGHashMapAttrIteratorClass" glib:is-gtype-struct-for="Iterator">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GHashMapAttrIteratorPrivate" c:type="GXmlGHashMapAttrIteratorPrivate" disguised="1"/>
	<class name="GListChildren" c:type="GXmlGListChildren" glib:type-name="GXmlGListChildren" glib:get-type="gxml_glist_children_get_type" glib:type-struct="GListChildrenClass" parent="Gee.AbstractBidirList">
		<implements name="GXml.DomNodeList"/>
		<implements name="GXml.DomHTMLCollection"/>
		<field name="parent_instance">
			<type name="Gee.AbstractBidirList" c:type="GeeAbstractBidirList"/>
		</field>
		<field name="priv">
			<type name="GListChildrenPrivate" c:type="GXmlGListChildrenPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_glist_children_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GListChildren" c:type="GXmlGListChildren*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GListChildrenClass" c:type="GXmlGListChildrenClass" glib:is-gtype-struct-for="GListChildren">
		<field name="parent_class">
			<type name="Gee.AbstractBidirListClass" c:type="GeeAbstractBidirListClass"/>
		</field>
	</record>
	<record name="GListChildrenPrivate" c:type="GXmlGListChildrenPrivate" disguised="1"/>
	<class name="GListChildrenIterator" c:type="GXmlGListChildrenIterator" glib:type-name="GXmlGListChildrenIterator" glib:get-type="gxml_glist_children_iterator_get_type" glib:type-struct="GListChildrenIteratorClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterator"/>
		<implements name="Gee.BidirIterator"/>
		<implements name="Gee.ListIterator"/>
		<implements name="Gee.BidirListIterator"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GListChildrenIteratorPrivate" c:type="GXmlGListChildrenIteratorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_glist_children_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GListChildrenIterator" c:type="GXmlGListChildrenIterator*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GListChildrenIteratorClass" c:type="GXmlGListChildrenIteratorClass" glib:is-gtype-struct-for="Iterator">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GListChildrenIteratorPrivate" c:type="GXmlGListChildrenIteratorPrivate" disguised="1"/>
	<class name="GListNamespaces" c:type="GXmlGListNamespaces" glib:type-name="GXmlGListNamespaces" glib:get-type="gxml_glist_namespaces_get_type" glib:type-struct="GListNamespacesClass" parent="Gee.AbstractList">
		<field name="parent_instance">
			<type name="Gee.AbstractList" c:type="GeeAbstractList"/>
		</field>
		<field name="priv">
			<type name="GListNamespacesPrivate" c:type="GXmlGListNamespacesPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_glist_namespaces_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GListNamespaces" c:type="GXmlGListNamespaces*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GListNamespacesClass" c:type="GXmlGListNamespacesClass" glib:is-gtype-struct-for="GListNamespaces">
		<field name="parent_class">
			<type name="Gee.AbstractListClass" c:type="GeeAbstractListClass"/>
		</field>
	</record>
	<record name="GListNamespacesPrivate" c:type="GXmlGListNamespacesPrivate" disguised="1"/>
	<class name="GListNamespacesIterator" c:type="GXmlGListNamespacesIterator" glib:type-name="GXmlGListNamespacesIterator" glib:get-type="gxml_glist_namespaces_iterator_get_type" glib:type-struct="GListNamespacesIteratorClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterator"/>
		<implements name="Gee.ListIterator"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GListNamespacesIteratorPrivate" c:type="GXmlGListNamespacesIteratorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_glist_namespaces_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GListNamespacesIterator" c:type="GXmlGListNamespacesIterator*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GListNamespacesIteratorClass" c:type="GXmlGListNamespacesIteratorClass" glib:is-gtype-struct-for="Iterator">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GListNamespacesIteratorPrivate" c:type="GXmlGListNamespacesIteratorPrivate" disguised="1"/>
	<class name="DomNodeFilter" c:type="GXmlDomNodeFilter" glib:type-name="GXmlDomNodeFilter" glib:get-type="gxml_dom_node_filter_get_type" glib:type-struct="DomNodeFilterClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="DomNodeFilterPrivate" c:type="GXmlDomNodeFilterPrivate*"/>
		</field>
		<constant name="FILTER_ACCEPT" c:identifier="GXML_DOM_NODE_FILTER_FILTER_ACCEPT" value="1">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="FILTER_REJECT" c:identifier="GXML_DOM_NODE_FILTER_FILTER_REJECT" value="2">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="FILTER_SKIP" c:identifier="GXML_DOM_NODE_FILTER_FILTER_SKIP" value="3">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_ALL" c:identifier="GXML_DOM_NODE_FILTER_SHOW_ALL" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_ELEMENT" c:identifier="GXML_DOM_NODE_FILTER_SHOW_ELEMENT" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_ATTRIBUTE" c:identifier="GXML_DOM_NODE_FILTER_SHOW_ATTRIBUTE" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_TEXT" c:identifier="GXML_DOM_NODE_FILTER_SHOW_TEXT" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_CDATA_SECTION" c:identifier="GXML_DOM_NODE_FILTER_SHOW_CDATA_SECTION" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_ENTITY_REFERENCE" c:identifier="GXML_DOM_NODE_FILTER_SHOW_ENTITY_REFERENCE" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_ENTITY" c:identifier="GXML_DOM_NODE_FILTER_SHOW_ENTITY" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_PROCESSING_INSTRUCTION" c:identifier="GXML_DOM_NODE_FILTER_SHOW_PROCESSING_INSTRUCTION" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_COMMENT" c:identifier="GXML_DOM_NODE_FILTER_SHOW_COMMENT" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_DOCUMENT" c:identifier="GXML_DOM_NODE_FILTER_SHOW_DOCUMENT" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_DOCUMENT_TYPE" c:identifier="GXML_DOM_NODE_FILTER_SHOW_DOCUMENT_TYPE" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_DOCUMENT_FRAGMENT" c:identifier="GXML_DOM_NODE_FILTER_SHOW_DOCUMENT_FRAGMENT" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_NOTATION" c:identifier="GXML_DOM_NODE_FILTER_SHOW_NOTATION" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constructor name="new" c:identifier="gxml_dom_node_filter_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
			</return-value>
		</constructor>
		<callback name="AcceptNode" c:type="GXmlDomNodeFilterAcceptNode">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="DomNodeFilterClass" c:type="GXmlDomNodeFilterClass" glib:is-gtype-struct-for="DomNodeFilter">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DomNodeFilterPrivate" c:type="GXmlDomNodeFilterPrivate" disguised="1"/>
	<class name="DomElementList" c:type="GXmlDomElementList" glib:type-name="GXmlDomElementList" glib:get-type="gxml_dom_element_list_get_type" glib:type-struct="DomElementListClass" parent="Gee.ArrayList">
		<implements name="GXml.DomHTMLCollection"/>
		<field name="parent_instance">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="priv">
			<type name="DomElementListPrivate" c:type="GXmlDomElementListPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_dom_element_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
			</return-value>
		</constructor>
	</class>
	<record name="DomElementListClass" c:type="GXmlDomElementListClass" glib:is-gtype-struct-for="DomElementList">
		<field name="parent_class">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="DomElementListPrivate" c:type="GXmlDomElementListPrivate" disguised="1"/>
	<class name="DomEventInit" c:type="GXmlDomEventInit" glib:type-name="GXmlDomEventInit" glib:get-type="gxml_dom_event_init_get_type" glib:type-struct="DomEventInitClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="DomEventInitPrivate" c:type="GXmlDomEventInitPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_dom_event_init_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomEventInit" c:type="GXmlDomEventInit*"/>
			</return-value>
		</constructor>
		<property name="bubbles" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_bubbles" c:identifier="gxml_dom_event_init_get_bubbles">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_bubbles" c:identifier="gxml_dom_event_init_set_bubbles">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="cancelable" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_cancelable" c:identifier="gxml_dom_event_init_get_cancelable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_cancelable" c:identifier="gxml_dom_event_init_set_cancelable">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DomEventInitClass" c:type="GXmlDomEventInitClass" glib:is-gtype-struct-for="DomEventInit">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DomEventInitPrivate" c:type="GXmlDomEventInitPrivate" disguised="1"/>
	<class name="DomCustomEventInit" c:type="GXmlDomCustomEventInit" glib:type-name="GXmlDomCustomEventInit" glib:get-type="gxml_dom_custom_event_init_get_type" glib:type-struct="DomCustomEventInitClass" parent="GXml.DomEventInit">
		<field name="parent_instance">
			<type name="GXml.DomEventInit" c:type="GXmlDomEventInit"/>
		</field>
		<field name="priv">
			<type name="DomCustomEventInitPrivate" c:type="GXmlDomCustomEventInitPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_dom_custom_event_init_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomCustomEventInit" c:type="GXmlDomCustomEventInit*"/>
			</return-value>
		</constructor>
		<property name="detail" writable="1">
			<type name="GObject.Value" c:type="GValue*"/>
		</property>
		<method name="get_detail" c:identifier="gxml_dom_custom_event_init_get_detail">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GObject.Value" c:type="GValue*"/>
			</return-value>
		</method>
		<method name="set_detail" c:identifier="gxml_dom_custom_event_init_set_detail">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DomCustomEventInitClass" c:type="GXmlDomCustomEventInitClass" glib:is-gtype-struct-for="DomCustomEventInit">
		<field name="parent_class">
			<type name="GXml.DomEventInitClass" c:type="GXmlDomEventInitClass"/>
		</field>
	</record>
	<record name="DomCustomEventInitPrivate" c:type="GXmlDomCustomEventInitPrivate" disguised="1"/>
	<class name="DomTimeStamp" c:type="GXmlDomTimeStamp" glib:type-name="GXmlDomTimeStamp" glib:get-type="gxml_dom_time_stamp_get_type" glib:type-struct="DomTimeStampClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="DomTimeStampPrivate" c:type="GXmlDomTimeStampPrivate*"/>
		</field>
		<method name="to_string" c:identifier="gxml_dom_time_stamp_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<constructor name="new" c:identifier="gxml_dom_time_stamp_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
			</return-value>
		</constructor>
		<property name="time" writable="1">
			<type name="GLib.DateTime" c:type="GDateTime*"/>
		</property>
		<method name="get_time" c:identifier="gxml_dom_time_stamp_get_time">
			<return-value transfer-ownership="none">
				<type name="GLib.DateTime" c:type="GDateTime*"/>
			</return-value>
		</method>
		<method name="set_time" c:identifier="gxml_dom_time_stamp_set_time">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.DateTime" c:type="GDateTime*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DomTimeStampClass" c:type="GXmlDomTimeStampClass" glib:is-gtype-struct-for="DomTimeStamp">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DomTimeStampPrivate" c:type="GXmlDomTimeStampPrivate" disguised="1"/>
	<class name="DomMutationObserverInit" c:type="GXmlDomMutationObserverInit" glib:type-name="GXmlDomMutationObserverInit" glib:get-type="gxml_dom_mutation_observer_init_get_type" glib:type-struct="DomMutationObserverInitClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="DomMutationObserverInitPrivate" c:type="GXmlDomMutationObserverInitPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_dom_mutation_observer_init_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
			</return-value>
		</constructor>
		<property name="child-list" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_child_list" c:identifier="gxml_dom_mutation_observer_init_get_child_list">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_child_list" c:identifier="gxml_dom_mutation_observer_init_set_child_list">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="attributes" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_attributes" c:identifier="gxml_dom_mutation_observer_init_get_attributes">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_attributes" c:identifier="gxml_dom_mutation_observer_init_set_attributes">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="character-data" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_character_data" c:identifier="gxml_dom_mutation_observer_init_get_character_data">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_character_data" c:identifier="gxml_dom_mutation_observer_init_set_character_data">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="subtree" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_subtree" c:identifier="gxml_dom_mutation_observer_init_get_subtree">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_subtree" c:identifier="gxml_dom_mutation_observer_init_set_subtree">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="attribute-old-value" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_attribute_old_value" c:identifier="gxml_dom_mutation_observer_init_get_attribute_old_value">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_attribute_old_value" c:identifier="gxml_dom_mutation_observer_init_set_attribute_old_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="character-data-old-value" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_character_data_old_value" c:identifier="gxml_dom_mutation_observer_init_get_character_data_old_value">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_character_data_old_value" c:identifier="gxml_dom_mutation_observer_init_set_character_data_old_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="attribute-filter" writable="1">
			<type name="Gee.List" c:type="GeeList*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_attribute_filter" c:identifier="gxml_dom_mutation_observer_init_get_attribute_filter">
			<return-value transfer-ownership="none">
				<type name="Gee.List" c:type="GeeList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
		</method>
		<method name="set_attribute_filter" c:identifier="gxml_dom_mutation_observer_init_set_attribute_filter">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Gee.List" c:type="GeeList*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DomMutationObserverInitClass" c:type="GXmlDomMutationObserverInitClass" glib:is-gtype-struct-for="DomMutationObserverInit">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DomMutationObserverInitPrivate" c:type="GXmlDomMutationObserverInitPrivate" disguised="1"/>
	<class name="DomErrorName" c:type="GXmlDomErrorName" glib:type-name="GXmlDomErrorName" glib:get-type="gxml_dom_error_name_get_type" glib:type-struct="DomErrorNameClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="DomErrorNamePrivate" c:type="GXmlDomErrorNamePrivate*"/>
		</field>
		<method name="get_name" c:identifier="gxml_dom_error_name_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="error_code" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_code" c:identifier="gxml_dom_error_name_get_code">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<parameter name="error_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_dom_error_name_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomErrorName" c:type="GXmlDomErrorName*"/>
			</return-value>
		</constructor>
	</class>
	<record name="DomErrorNameClass" c:type="GXmlDomErrorNameClass" glib:is-gtype-struct-for="DomErrorName">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DomErrorNamePrivate" c:type="GXmlDomErrorNamePrivate" disguised="1"/>
	<class name="GXPathObject" c:type="GXmlGXPathObject" glib:type-name="GXmlGXPathObject" glib:get-type="gxml_gx_path_object_get_type" glib:type-struct="GXPathObjectClass" parent="GObject.Object">
		<implements name="GXml.XPathObject"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GXPathObjectPrivate" c:type="GXmlGXPathObjectPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gx_path_object_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GXPathObject" c:type="GXmlGXPathObject*"/>
			</return-value>
			<parameters>
				<parameter name="document" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="pointer" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlXPathObject*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GXPathObjectClass" c:type="GXmlGXPathObjectClass" glib:is-gtype-struct-for="GXPathObject">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GXPathObjectPrivate" c:type="GXmlGXPathObjectPrivate" disguised="1"/>
	<class name="GomDocument" c:type="GXmlGomDocument" glib:type-name="GXmlGomDocument" glib:get-type="gxml_gom_document_get_type" glib:type-struct="GomDocumentClass" parent="GXml.GomNode">
		<implements name="GXml.DomParentNode"/>
		<implements name="GXml.DomNonElementParentNode"/>
		<implements name="GXml.DomDocument"/>
		<implements name="GXml.DomXMLDocument"/>
		<field name="parent_instance">
			<type name="GXml.GomNode" c:type="GXmlGomNode"/>
		</field>
		<field name="priv">
			<type name="GomDocumentPrivate" c:type="GXmlGomDocumentPrivate*"/>
		</field>
		<field name="_implementation">
			<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
		</field>
		<field name="_url">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_origin">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_compat_mode">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_character_set">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_content_type">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_constructor">
			<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_document_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDocument" c:type="GXmlGomDocument*"/>
			</return-value>
		</constructor>
		<constructor name="from_path" c:identifier="gxml_gom_document_new_from_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDocument" c:type="GXmlGomDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri" c:identifier="gxml_gom_document_new_from_uri" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDocument" c:type="GXmlGomDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file" c:identifier="gxml_gom_document_new_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDocument" c:type="GXmlGomDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_stream" c:identifier="gxml_gom_document_new_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDocument" c:type="GXmlGomDocument*"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_gom_document_new_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDocument" c:type="GXmlGomDocument*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="write_file" c:identifier="gxml_gom_document_write_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_stream" c:identifier="gxml_gom_document_write_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_from_file" c:identifier="gxml_gom_document_read_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_from_string" c:identifier="gxml_gom_document_read_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="GomDocumentClass" c:type="GXmlGomDocumentClass" glib:is-gtype-struct-for="GomDocument">
		<field name="parent_class">
			<type name="GXml.GomNodeClass" c:type="GXmlGomNodeClass"/>
		</field>
	</record>
	<record name="GomDocumentPrivate" c:type="GXmlGomDocumentPrivate" disguised="1"/>
	<class name="GomImplementation" c:type="GXmlGomImplementation" glib:type-name="GXmlGomImplementation" glib:get-type="gxml_gom_implementation_get_type" glib:type-struct="GomImplementationClass" parent="GObject.Object">
		<implements name="GXml.DomImplementation"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GomImplementationPrivate" c:type="GXmlGomImplementationPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_implementation_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomImplementation" c:type="GXmlGomImplementation*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GomImplementationClass" c:type="GXmlGomImplementationClass" glib:is-gtype-struct-for="GomImplementation">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GomImplementationPrivate" c:type="GXmlGomImplementationPrivate" disguised="1"/>
	<class name="GomDocumentType" c:type="GXmlGomDocumentType" glib:type-name="GXmlGomDocumentType" glib:get-type="gxml_gom_document_type_get_type" glib:type-struct="GomDocumentTypeClass" parent="GXml.GomNode">
		<implements name="GXml.DomNode"/>
		<implements name="GXml.DomChildNode"/>
		<implements name="GXml.DomDocumentType"/>
		<field name="parent_instance">
			<type name="GXml.GomNode" c:type="GXmlGomNode"/>
		</field>
		<field name="priv">
			<type name="GomDocumentTypePrivate" c:type="GXmlGomDocumentTypePrivate*"/>
		</field>
		<field name="_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_public_id">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_system_id">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<constructor name="with_name" c:identifier="gxml_gom_document_type_new_with_name">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDocumentType" c:type="GXmlGomDocumentType*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="with_ids" c:identifier="gxml_gom_document_type_new_with_ids">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDocumentType" c:type="GXmlGomDocumentType*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="public_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="system_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="gxml_gom_document_type_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDocumentType" c:type="GXmlGomDocumentType*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GomDocumentTypeClass" c:type="GXmlGomDocumentTypeClass" glib:is-gtype-struct-for="GomDocumentType">
		<field name="parent_class">
			<type name="GXml.GomNodeClass" c:type="GXmlGomNodeClass"/>
		</field>
	</record>
	<record name="GomDocumentTypePrivate" c:type="GXmlGomDocumentTypePrivate" disguised="1"/>
	<class name="GomDocumentFragment" c:type="GXmlGomDocumentFragment" glib:type-name="GXmlGomDocumentFragment" glib:get-type="gxml_gom_document_fragment_get_type" glib:type-struct="GomDocumentFragmentClass" parent="GXml.GomNode">
		<implements name="GXml.DomParentNode"/>
		<implements name="GXml.DomNonElementParentNode"/>
		<implements name="GXml.DomDocumentFragment"/>
		<field name="parent_instance">
			<type name="GXml.GomNode" c:type="GXmlGomNode"/>
		</field>
		<field name="priv">
			<type name="GomDocumentFragmentPrivate" c:type="GXmlGomDocumentFragmentPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_document_fragment_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDocumentFragment" c:type="GXmlGomDocumentFragment*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GomDocumentFragmentClass" c:type="GXmlGomDocumentFragmentClass" glib:is-gtype-struct-for="GomDocumentFragment">
		<field name="parent_class">
			<type name="GXml.GomNodeClass" c:type="GXmlGomNodeClass"/>
		</field>
	</record>
	<record name="GomDocumentFragmentPrivate" c:type="GXmlGomDocumentFragmentPrivate" disguised="1"/>
	<class name="GomElement" c:type="GXmlGomElement" glib:type-name="GXmlGomElement" glib:get-type="gxml_gom_element_get_type" glib:type-struct="GomElementClass" parent="GXml.GomNode">
		<implements name="GXml.DomChildNode"/>
		<implements name="GXml.DomNonDocumentTypeChildNode"/>
		<implements name="GXml.DomParentNode"/>
		<implements name="GXml.DomElement"/>
		<implements name="GXml.GomObject"/>
		<field name="parent_instance">
			<type name="GXml.GomNode" c:type="GXmlGomNode"/>
		</field>
		<field name="priv">
			<type name="GomElementPrivate" c:type="GXmlGomElementPrivate*"/>
		</field>
		<field name="_attributes">
			<type name="GXml.GomElementAttributes" c:type="GXmlGomElementAttributes*"/>
		</field>
		<field name="_namespace_uri">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="read_from_file" c:identifier="gxml_gom_element_read_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_from_string" c:identifier="gxml_gom_element_read_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_file" c:identifier="gxml_gom_element_write_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_stream" c:identifier="gxml_gom_element_write_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lookup_prefix" c:identifier="gxml_gom_element_lookup_prefix">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="nspace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lookup_namespace_uri" c:identifier="gxml_gom_element_lookup_namespace_uri">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="initialize" c:identifier="gxml_gom_element_new_initialize">
			<return-value transfer-ownership="full">
				<type name="GXml.GomElement" c:type="GXmlGomElement*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="namespace" c:identifier="gxml_gom_element_new_namespace">
			<return-value transfer-ownership="full">
				<type name="GXml.GomElement" c:type="GXmlGomElement*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="namespace_uri" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="gxml_gom_element_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomElement" c:type="GXmlGomElement*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GomElementClass" c:type="GXmlGomElementClass" glib:is-gtype-struct-for="GomElement">
		<field name="parent_class">
			<type name="GXml.GomNodeClass" c:type="GXmlGomNodeClass"/>
		</field>
	</record>
	<record name="GomElementPrivate" c:type="GXmlGomElementPrivate" disguised="1"/>
	<class name="GomElementAttributes" c:type="GXmlGomElementAttributes" glib:type-name="GXmlGomElementAttributes" glib:get-type="gxml_gom_element_attributes_get_type" glib:type-struct="GomElementAttributesClass" parent="Gee.HashMap">
		<implements name="GXml.DomNamedNodeMap"/>
		<field name="parent_instance">
			<type name="Gee.HashMap" c:type="GeeHashMap"/>
		</field>
		<field name="priv">
			<type name="GomElementAttributesPrivate" c:type="GXmlGomElementAttributesPrivate*"/>
		</field>
		<field name="_element">
			<type name="GXml.GomElement" c:type="GXmlGomElement*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_element_attributes_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomElementAttributes" c:type="GXmlGomElementAttributes*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.GomElement" c:type="GXmlGomElement*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GomElementAttributesClass" c:type="GXmlGomElementAttributesClass" glib:is-gtype-struct-for="Attributes">
		<field name="parent_class">
			<type name="Gee.HashMapClass" c:type="GeeHashMapClass"/>
		</field>
	</record>
	<record name="GomElementAttributesPrivate" c:type="GXmlGomElementAttributesPrivate" disguised="1"/>
	<class name="GomAttr" c:type="GXmlGomAttr" glib:type-name="GXmlGomAttr" glib:get-type="gxml_gom_attr_get_type" glib:type-struct="GomAttrClass" parent="GXml.GomNode">
		<implements name="GXml.DomAttr"/>
		<field name="parent_instance">
			<type name="GXml.GomNode" c:type="GXmlGomNode"/>
		</field>
		<field name="priv">
			<type name="GomAttrPrivate" c:type="GXmlGomAttrPrivate*"/>
		</field>
		<field name="_namespace_uri">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_prefix">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_attr_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomAttr" c:type="GXmlGomAttr*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="namespace" c:identifier="gxml_gom_attr_new_namespace">
			<return-value transfer-ownership="full">
				<type name="GXml.GomAttr" c:type="GXmlGomAttr*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
				<parameter name="namespace_uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GomAttrClass" c:type="GXmlGomAttrClass" glib:is-gtype-struct-for="GomAttr">
		<field name="parent_class">
			<type name="GXml.GomNodeClass" c:type="GXmlGomNodeClass"/>
		</field>
	</record>
	<record name="GomAttrPrivate" c:type="GXmlGomAttrPrivate" disguised="1"/>
	<class name="GomNode" c:type="GXmlGomNode" glib:type-name="GXmlGomNode" glib:get-type="gxml_gom_node_get_type" glib:type-struct="GomNodeClass" parent="GObject.Object">
		<implements name="GXml.DomEventTarget"/>
		<implements name="GXml.DomNode"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GomNodePrivate" c:type="GXmlGomNodePrivate*"/>
		</field>
		<field name="_local_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_prefix">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_base_uri">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_node_value">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_parent">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_node_type">
			<type name="GXml.DomNodeNodeType" c:type="GXmlDomNodeNodeType"/>
		</field>
		<field name="_child_nodes">
			<type name="GXml.GomNodeList" c:type="GXmlGomNodeList*"/>
		</field>
		<field name="_document">
			<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_node_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomNode" c:type="GXmlGomNode*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GomNodeClass" c:type="GXmlGomNodeClass" glib:is-gtype-struct-for="GomNode">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GomNodePrivate" c:type="GXmlGomNodePrivate" disguised="1"/>
	<class name="GomNodeList" c:type="GXmlGomNodeList" glib:type-name="GXmlGomNodeList" glib:get-type="gxml_gom_node_list_get_type" glib:type-struct="GomNodeListClass" parent="Gee.ArrayList">
		<implements name="GXml.DomNodeList"/>
		<field name="parent_instance">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="priv">
			<type name="GomNodeListPrivate" c:type="GXmlGomNodeListPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_node_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomNodeList" c:type="GXmlGomNodeList*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GomNodeListClass" c:type="GXmlGomNodeListClass" glib:is-gtype-struct-for="GomNodeList">
		<field name="parent_class">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="GomNodeListPrivate" c:type="GXmlGomNodeListPrivate" disguised="1"/>
	<class name="GomCharacterData" c:type="GXmlGomCharacterData" glib:type-name="GXmlGomCharacterData" glib:get-type="gxml_gom_character_data_get_type" glib:type-struct="GomCharacterDataClass" parent="GXml.GomNode">
		<implements name="GXml.DomNonDocumentTypeChildNode"/>
		<implements name="GXml.DomChildNode"/>
		<implements name="GXml.DomCharacterData"/>
		<field name="parent_instance">
			<type name="GXml.GomNode" c:type="GXmlGomNode"/>
		</field>
		<field name="priv">
			<type name="GomCharacterDataPrivate" c:type="GXmlGomCharacterDataPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_character_data_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomCharacterData" c:type="GXmlGomCharacterData*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GomCharacterDataClass" c:type="GXmlGomCharacterDataClass" glib:is-gtype-struct-for="GomCharacterData">
		<field name="parent_class">
			<type name="GXml.GomNodeClass" c:type="GXmlGomNodeClass"/>
		</field>
	</record>
	<record name="GomCharacterDataPrivate" c:type="GXmlGomCharacterDataPrivate" disguised="1"/>
	<class name="GomText" c:type="GXmlGomText" glib:type-name="GXmlGomText" glib:get-type="gxml_gom_text_get_type" glib:type-struct="GomTextClass" parent="GXml.GomCharacterData">
		<implements name="GXml.DomText"/>
		<field name="parent_instance">
			<type name="GXml.GomCharacterData" c:type="GXmlGomCharacterData"/>
		</field>
		<field name="priv">
			<type name="GomTextPrivate" c:type="GXmlGomTextPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_text_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomText" c:type="GXmlGomText*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GomTextClass" c:type="GXmlGomTextClass" glib:is-gtype-struct-for="GomText">
		<field name="parent_class">
			<type name="GXml.GomCharacterDataClass" c:type="GXmlGomCharacterDataClass"/>
		</field>
	</record>
	<record name="GomTextPrivate" c:type="GXmlGomTextPrivate" disguised="1"/>
	<class name="GomProcessingInstruction" c:type="GXmlGomProcessingInstruction" glib:type-name="GXmlGomProcessingInstruction" glib:get-type="gxml_gom_processing_instruction_get_type" glib:type-struct="GomProcessingInstructionClass" parent="GXml.GomCharacterData">
		<implements name="GXml.DomProcessingInstruction"/>
		<field name="parent_instance">
			<type name="GXml.GomCharacterData" c:type="GXmlGomCharacterData"/>
		</field>
		<field name="priv">
			<type name="GomProcessingInstructionPrivate" c:type="GXmlGomProcessingInstructionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_processing_instruction_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomProcessingInstruction" c:type="GXmlGomProcessingInstruction*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GomProcessingInstructionClass" c:type="GXmlGomProcessingInstructionClass" glib:is-gtype-struct-for="GomProcessingInstruction">
		<field name="parent_class">
			<type name="GXml.GomCharacterDataClass" c:type="GXmlGomCharacterDataClass"/>
		</field>
	</record>
	<record name="GomProcessingInstructionPrivate" c:type="GXmlGomProcessingInstructionPrivate" disguised="1"/>
	<class name="GomComment" c:type="GXmlGomComment" glib:type-name="GXmlGomComment" glib:get-type="gxml_gom_comment_get_type" glib:type-struct="GomCommentClass" parent="GXml.GomCharacterData">
		<implements name="GXml.DomComment"/>
		<field name="parent_instance">
			<type name="GXml.GomCharacterData" c:type="GXmlGomCharacterData"/>
		</field>
		<field name="priv">
			<type name="GomCommentPrivate" c:type="GXmlGomCommentPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gom_comment_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomComment" c:type="GXmlGomComment*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GomCommentClass" c:type="GXmlGomCommentClass" glib:is-gtype-struct-for="GomComment">
		<field name="parent_class">
			<type name="GXml.GomCharacterDataClass" c:type="GXmlGomCharacterDataClass"/>
		</field>
	</record>
	<record name="GomCommentPrivate" c:type="GXmlGomCommentPrivate" disguised="1"/>
	<class name="GomArrayList" c:type="GXmlGomArrayList" glib:type-name="GXmlGomArrayList" glib:get-type="gxml_gom_array_list_get_type" glib:type-struct="GomArrayListClass" parent="GObject.Object">
		<implements name="GXml.GomCollection"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GomArrayListPrivate" c:type="GXmlGomArrayListPrivate*"/>
		</field>
		<field name="_nodes_index">
			<type name="GLib.Queue" c:type="GQueue*">
				<type name="gint" c:type="gint"/>
			</type>
		</field>
		<field name="_element">
			<type name="GXml.GomElement" c:type="GXmlGomElement*"/>
		</field>
		<field name="_items_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_items_type">
			<type name="GType" c:type="GType"/>
		</field>
		<constructor name="initialize" c:identifier="gxml_gom_array_list_new_initialize">
			<return-value transfer-ownership="full">
				<type name="GXml.GomArrayList" c:type="GXmlGomArrayList*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.GomElement" c:type="GXmlGomElement*"/>
				</parameter>
				<parameter name="items_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="gxml_gom_array_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomArrayList" c:type="GXmlGomArrayList*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GomArrayListClass" c:type="GXmlGomArrayListClass" glib:is-gtype-struct-for="GomArrayList">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GomArrayListPrivate" c:type="GXmlGomArrayListPrivate" disguised="1"/>
	<class name="GomHashMap" c:type="GXmlGomHashMap" glib:type-name="GXmlGomHashMap" glib:get-type="gxml_gom_hash_map_get_type" glib:type-struct="GomHashMapClass" parent="GObject.Object">
		<implements name="GXml.GomCollection"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GomHashMapPrivate" c:type="GXmlGomHashMapPrivate*"/>
		</field>
		<field name="_nodes_index">
			<type name="GLib.Queue" c:type="GQueue*">
				<type name="gint" c:type="gint"/>
			</type>
		</field>
		<field name="_hashtable">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="gint" c:type="gint"/>
			</type>
		</field>
		<field name="_element">
			<type name="GXml.GomElement" c:type="GXmlGomElement*"/>
		</field>
		<field name="_items_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_items_type">
			<type name="GType" c:type="GType"/>
		</field>
		<field name="_attribute_key">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<constructor name="initialize" c:identifier="gxml_gom_hash_map_new_initialize">
			<return-value transfer-ownership="full">
				<type name="GXml.GomHashMap" c:type="GXmlGomHashMap*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.GomElement" c:type="GXmlGomElement*"/>
				</parameter>
				<parameter name="items_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="attribute_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get" c:identifier="gxml_gom_hash_map_get">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_gom_hash_map_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomHashMap" c:type="GXmlGomHashMap*"/>
			</return-value>
		</constructor>
		<property name="attribute-key" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_key" c:identifier="gxml_gom_hash_map_get_attribute_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_attribute_key" c:identifier="gxml_gom_hash_map_set_attribute_key">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="GomHashMapClass" c:type="GXmlGomHashMapClass" glib:is-gtype-struct-for="GomHashMap">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GomHashMapPrivate" c:type="GXmlGomHashMapPrivate" disguised="1"/>
	<class name="GomDouble" c:type="GXmlGomDouble" glib:type-name="GXmlGomDouble" glib:get-type="gxml_gom_double_get_type" glib:type-struct="GomDoubleClass" parent="GObject.Object">
		<implements name="GXml.GomProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GomDoublePrivate" c:type="GXmlGomDoublePrivate*"/>
		</field>
		<field name="_value">
			<type name="gdouble" c:type="gdouble"/>
		</field>
		<field name="_attribute_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="get_double" c:identifier="gxml_gom_double_get_double">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<method name="set_double" c:identifier="gxml_gom_double_set_double">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_gom_double_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomDouble" c:type="GXmlGomDouble*"/>
			</return-value>
		</constructor>
		<property name="decimals" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_decimals" c:identifier="gxml_gom_double_get_decimals">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
		</method>
		<method name="set_decimals" c:identifier="gxml_gom_double_set_decimals">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="GomDoubleClass" c:type="GXmlGomDoubleClass" glib:is-gtype-struct-for="GomDouble">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GomDoublePrivate" c:type="GXmlGomDoublePrivate" disguised="1"/>
	<class name="GomFloat" c:type="GXmlGomFloat" glib:type-name="GXmlGomFloat" glib:get-type="gxml_gom_float_get_type" glib:type-struct="GomFloatClass" parent="GXml.GomDouble">
		<field name="parent_instance">
			<type name="GXml.GomDouble" c:type="GXmlGomDouble"/>
		</field>
		<field name="priv">
			<type name="GomFloatPrivate" c:type="GXmlGomFloatPrivate*"/>
		</field>
		<method name="get_float" c:identifier="gxml_gom_float_get_float">
			<return-value transfer-ownership="full">
				<type name="gfloat" c:type="gfloat"/>
			</return-value>
		</method>
		<method name="set_float" c:identifier="gxml_gom_float_set_float">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gfloat" c:type="gfloat"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_gom_float_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomFloat" c:type="GXmlGomFloat*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GomFloatClass" c:type="GXmlGomFloatClass" glib:is-gtype-struct-for="GomFloat">
		<field name="parent_class">
			<type name="GXml.GomDoubleClass" c:type="GXmlGomDoubleClass"/>
		</field>
	</record>
	<record name="GomFloatPrivate" c:type="GXmlGomFloatPrivate" disguised="1"/>
	<class name="GomInt" c:type="GXmlGomInt" glib:type-name="GXmlGomInt" glib:get-type="gxml_gom_int_get_type" glib:type-struct="GomIntClass" parent="GObject.Object">
		<implements name="GXml.GomProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GomIntPrivate" c:type="GXmlGomIntPrivate*"/>
		</field>
		<field name="_value">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="_attribute_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="get_integer" c:identifier="gxml_gom_int_get_integer">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_integer" c:identifier="gxml_gom_int_set_integer">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_gom_int_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomInt" c:type="GXmlGomInt*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GomIntClass" c:type="GXmlGomIntClass" glib:is-gtype-struct-for="GomInt">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GomIntPrivate" c:type="GXmlGomIntPrivate" disguised="1"/>
	<class name="GomBoolean" c:type="GXmlGomBoolean" glib:type-name="GXmlGomBoolean" glib:get-type="gxml_gom_boolean_get_type" glib:type-struct="GomBooleanClass" parent="GObject.Object">
		<implements name="GXml.GomProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GomBooleanPrivate" c:type="GXmlGomBooleanPrivate*"/>
		</field>
		<field name="_value">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_attribute_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="get_boolean" c:identifier="gxml_gom_boolean_get_boolean">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_boolean" c:identifier="gxml_gom_boolean_set_boolean">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_gom_boolean_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomBoolean" c:type="GXmlGomBoolean*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GomBooleanClass" c:type="GXmlGomBooleanClass" glib:is-gtype-struct-for="GomBoolean">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GomBooleanPrivate" c:type="GXmlGomBooleanPrivate" disguised="1"/>
	<class name="GomEnum" c:type="GXmlGomEnum" glib:type-name="GXmlGomEnum" glib:get-type="gxml_gom_enum_get_type" glib:type-struct="GomEnumClass" parent="GObject.Object">
		<implements name="GXml.GomProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GomEnumPrivate" c:type="GXmlGomEnumPrivate*"/>
		</field>
		<field name="_value">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="_attribute_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_enum_type">
			<type name="GType" c:type="GType"/>
		</field>
		<method name="get_enum" c:identifier="gxml_gom_enum_get_enum">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_enum" c:identifier="gxml_gom_enum_set_enum">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_gom_enum_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GomEnum" c:type="GXmlGomEnum*"/>
			</return-value>
		</constructor>
		<property name="enum-type" writable="1" construct="1">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_enum_type" c:identifier="gxml_gom_enum_get_enum_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<method name="set_enum_type" c:identifier="gxml_gom_enum_set_enum_type">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="GomEnumClass" c:type="GXmlGomEnumClass" glib:is-gtype-struct-for="GomEnum">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GomEnumPrivate" c:type="GXmlGomEnumPrivate" disguised="1"/>
	<class name="XParser" c:type="GXmlXParser" glib:type-name="GXmlXParser" glib:get-type="gxml_xparser_get_type" glib:type-struct="XParserClass" parent="GObject.Object">
		<implements name="GXml.Parser"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="XParserPrivate" c:type="GXmlXParserPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_xparser_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XParser" c:type="GXmlXParser*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="read_current_node" c:identifier="gxml_xparser_read_current_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="read_current" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="read_property" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="XParserClass" c:type="GXmlXParserClass" glib:is-gtype-struct-for="XParser">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="XParserPrivate" c:type="GXmlXParserPrivate" disguised="1"/>
	<interface name="Attribute" c:type="GXmlAttribute" glib:type-name="GXmlAttribute" glib:get-type="gxml_attribute_get_type" glib:type-struct="AttributeIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="namespace" writable="1">
			<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
		</property>
		<method name="get_namespace" c:identifier="gxml_attribute_get_namespace">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</return-value>
		</method>
		<virtual-method name="get_namespace" invoker="get_namespace">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</return-value>
		</virtual-method>
		<method name="set_namespace" c:identifier="gxml_attribute_set_namespace">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_namespace" invoker="set_namespace">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="prefix">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gxml_attribute_get_prefix">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_prefix" invoker="get_prefix">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="AttributeIface" c:type="GXmlAttributeIface" glib:is-gtype-struct-for="Attribute">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_namespace">
			<callback name="get_namespace" c:type="get_namespace">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_namespace">
			<callback name="set_namespace" c:type="set_namespace">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" allow-none="1">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_prefix">
			<callback name="get_prefix" c:type="get_prefix">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Comment" c:type="GXmlComment" glib:type-name="GXmlComment" glib:get-type="gxml_comment_get_type" glib:type-struct="CommentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="str" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_str" c:identifier="gxml_comment_get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_str" invoker="get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_str" c:identifier="gxml_comment_set_str">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_str" invoker="set_str">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="CommentIface" c:type="GXmlCommentIface" glib:is-gtype-struct-for="Comment">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_str">
			<callback name="get_str" c:type="get_str">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Comment" c:type="GXmlComment*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_str">
			<callback name="set_str" c:type="set_str">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Comment" c:type="GXmlComment*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="CDATA" c:type="GXmlCDATA" glib:type-name="GXmlCDATA" glib:get-type="gxml_cdata_get_type" glib:type-struct="CDATAIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="str">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_str" c:identifier="gxml_cdata_get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_str" invoker="get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="CDATAIface" c:type="GXmlCDATAIface" glib:is-gtype-struct-for="CDATA">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_str">
			<callback name="get_str" c:type="get_str">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.CDATA" c:type="GXmlCDATA*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Character" c:type="GXmlCharacter" glib:type-name="GXmlCharacter" glib:get-type="gxml_character_get_type" glib:type-struct="CharacterIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="str" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_str" c:identifier="gxml_character_get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_str" invoker="get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_str" c:identifier="gxml_character_set_str">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_str" invoker="set_str">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="CharacterIface" c:type="GXmlCharacterIface" glib:is-gtype-struct-for="Character">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_str">
			<callback name="get_str" c:type="get_str">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Character" c:type="GXmlCharacter*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_str">
			<callback name="set_str" c:type="set_str">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Character" c:type="GXmlCharacter*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Document" c:type="GXmlDocument" glib:type-name="GXmlDocument" glib:get-type="gxml_document_get_type" glib:type-struct="DocumentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<method name="create_element" c:identifier="gxml_document_create_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_element" invoker="create_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_text" c:identifier="gxml_document_create_text">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_text" invoker="create_text">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_comment" c:identifier="gxml_document_create_comment">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_comment" invoker="create_comment">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_cdata" c:identifier="gxml_document_create_cdata">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_cdata" invoker="create_cdata">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_pi" c:identifier="gxml_document_create_pi">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_pi" invoker="create_pi">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="save" c:identifier="gxml_document_save" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="save" invoker="save" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="save_as" c:identifier="gxml_document_save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="save_as" invoker="save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<function name="new_default" c:identifier="gxml_document_new_default">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</function>
		<function name="new_default_for_path" c:identifier="gxml_document_new_default_for_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="new_default_for_file" c:identifier="gxml_document_new_default_for_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</function>
		<property name="indent" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_indent" c:identifier="gxml_document_get_indent">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_indent" invoker="get_indent">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_indent" c:identifier="gxml_document_set_indent">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_indent" invoker="set_indent">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="ns-top" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_ns_top" c:identifier="gxml_document_get_ns_top">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_ns_top" invoker="get_ns_top">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_ns_top" c:identifier="gxml_document_set_ns_top">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_ns_top" invoker="set_ns_top">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="prefix-default-ns" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_prefix_default_ns" c:identifier="gxml_document_get_prefix_default_ns">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_prefix_default_ns" invoker="get_prefix_default_ns">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_prefix_default_ns" c:identifier="gxml_document_set_prefix_default_ns">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_prefix_default_ns" invoker="set_prefix_default_ns">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="backup" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_backup" c:identifier="gxml_document_get_backup">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_backup" invoker="get_backup">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_backup" c:identifier="gxml_document_set_backup">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_backup" invoker="set_backup">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="root">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</property>
		<method name="get_root" c:identifier="gxml_document_get_root">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_root" invoker="get_root">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</virtual-method>
		<property name="file" writable="1">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_file" c:identifier="gxml_document_get_file">
			<return-value transfer-ownership="none">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
		</method>
		<virtual-method name="get_file" invoker="get_file">
			<return-value transfer-ownership="none">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
		</virtual-method>
		<method name="set_file" c:identifier="gxml_document_set_file">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_file" invoker="set_file">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DocumentIface" c:type="GXmlDocumentIface" glib:is-gtype-struct-for="Document">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="create_element">
			<callback name="create_element" c:type="create_element" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_text">
			<callback name="create_text" c:type="create_text">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="text" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_comment">
			<callback name="create_comment" c:type="create_comment">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="text" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_cdata">
			<callback name="create_cdata" c:type="create_cdata">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="text" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_pi">
			<callback name="create_pi" c:type="create_pi">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="target" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="save">
			<callback name="save" c:type="save" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="save_as">
			<callback name="save_as" c:type="save_as" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="f" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_indent">
			<callback name="get_indent" c:type="get_indent">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_indent">
			<callback name="set_indent" c:type="set_indent">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_ns_top">
			<callback name="get_ns_top" c:type="get_ns_top">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_ns_top">
			<callback name="set_ns_top" c:type="set_ns_top">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_prefix_default_ns">
			<callback name="get_prefix_default_ns" c:type="get_prefix_default_ns">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_prefix_default_ns">
			<callback name="set_prefix_default_ns" c:type="set_prefix_default_ns">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_backup">
			<callback name="get_backup" c:type="get_backup">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_backup">
			<callback name="set_backup" c:type="set_backup">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_root">
			<callback name="get_root" c:type="get_root">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_file">
			<callback name="get_file" c:type="get_file">
				<return-value transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_file">
			<callback name="set_file" c:type="set_file">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DocumentType" c:type="GXmlDocumentType" glib:type-name="GXmlDocumentType" glib:get-type="gxml_document_type_get_type" glib:type-struct="DocumentTypeIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
	</interface>
	<record name="DocumentTypeIface" c:type="GXmlDocumentTypeIface" glib:is-gtype-struct-for="DocumentType">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="Element" c:type="GXmlElement" glib:type-name="GXmlElement" glib:get-type="gxml_element_get_type" glib:type-struct="ElementIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<method name="normalize" c:identifier="gxml_element_normalize">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="normalize" invoker="normalize">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="set_attr" c:identifier="gxml_element_set_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attr" invoker="set_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_attr" c:identifier="gxml_element_get_attr">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_attr" invoker="get_attr">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_attr" c:identifier="gxml_element_remove_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_attr" invoker="remove_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_ns_attr" c:identifier="gxml_element_remove_ns_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_ns_attr" invoker="remove_ns_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_ns_attr" c:identifier="gxml_element_set_ns_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="ns" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_ns_attr" invoker="set_ns_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="ns" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_ns_attr" c:identifier="gxml_element_get_ns_attr">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_ns_attr" invoker="get_ns_attr">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="tag-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_tag_name" c:identifier="gxml_element_get_tag_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_tag_name" invoker="get_tag_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="content" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_content" c:identifier="gxml_element_get_content">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_content" invoker="get_content">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_content" c:identifier="gxml_element_set_content">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_content" invoker="set_content">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ElementIface" c:type="GXmlElementIface" glib:is-gtype-struct-for="Element">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="normalize">
			<callback name="normalize" c:type="normalize">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attr">
			<callback name="set_attr" c:type="set_attr">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attr">
			<callback name="get_attr" c:type="get_attr">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_attr">
			<callback name="remove_attr" c:type="remove_attr">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_ns_attr">
			<callback name="remove_ns_attr" c:type="remove_ns_attr">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_ns_attr">
			<callback name="set_ns_attr" c:type="set_ns_attr">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="ns" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_ns_attr">
			<callback name="get_ns_attr" c:type="get_ns_attr">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_tag_name">
			<callback name="get_tag_name" c:type="get_tag_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_content">
			<callback name="get_content" c:type="get_content">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_content">
			<callback name="set_content" c:type="set_content">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Namespace" c:type="GXmlNamespace" glib:type-name="GXmlNamespace" glib:get-type="gxml_namespace_get_type" glib:type-struct="NamespaceIface">
		<prerequisite name="GObject.Object"/>
		<property name="uri">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_uri" c:identifier="gxml_namespace_get_uri">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_uri" invoker="get_uri">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="prefix">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gxml_namespace_get_prefix">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_prefix" invoker="get_prefix">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="NamespaceIface" c:type="GXmlNamespaceIface" glib:is-gtype-struct-for="Namespace">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_uri">
			<callback name="get_uri" c:type="get_uri">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_prefix">
			<callback name="get_prefix" c:type="get_prefix">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Node" c:type="GXmlNode" glib:type-name="GXmlNode" glib:get-type="gxml_node_get_type" glib:type-struct="NodeIface">
		<prerequisite name="GObject.Object"/>
		<method name="get" c:identifier="gxml_node_get">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get" invoker="get">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_property_value" c:identifier="gxml_node_get_elements_by_property_value">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
			<parameters>
				<parameter name="property" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_property_value" invoker="get_elements_by_property_value">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
			<parameters>
				<parameter name="property" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_name" c:identifier="gxml_node_get_elements_by_name">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_name" invoker="get_elements_by_name">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_name_ns" c:identifier="gxml_node_get_elements_by_name_ns">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="ns" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_name_ns" invoker="get_elements_by_name_ns">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="ns" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_node_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_namespace" c:identifier="gxml_node_set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_namespace" invoker="set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="ns_prefix" c:identifier="gxml_node_ns_prefix">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="ns_prefix" invoker="ns_prefix">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="ns_uri" c:identifier="gxml_node_ns_uri">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="ns_uri" invoker="ns_uri">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<function name="copy" c:identifier="gxml_node_copy">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</function>
		<property name="namespaces">
			<type name="Gee.List" c:type="GeeList*">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</type>
		</property>
		<method name="get_namespaces" c:identifier="gxml_node_get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_namespaces" invoker="get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="children-nodes">
			<type name="Gee.BidirList" c:type="GeeBidirList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_children_nodes" c:identifier="gxml_node_get_children_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_children_nodes" invoker="get_children_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="attrs">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_attrs" c:identifier="gxml_node_get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_attrs" invoker="get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_node_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_node_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_node_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="type-node">
			<type name="GXml.NodeType" c:type="GXmlNodeType"/>
		</property>
		<method name="get_type_node" c:identifier="gxml_node_get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</method>
		<virtual-method name="get_type_node" invoker="get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</virtual-method>
		<property name="document">
			<type name="GXml.Document" c:type="GXmlDocument*"/>
		</property>
		<method name="get_document" c:identifier="gxml_node_get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</method>
		<virtual-method name="get_document" invoker="get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</virtual-method>
		<property name="parent">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</property>
		<method name="get_parent" c:identifier="gxml_node_get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_parent" invoker="get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="NodeIface" c:type="GXmlNodeIface" glib:is-gtype-struct-for="Node">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get">
			<callback name="get" c:type="get">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_property_value">
			<callback name="get_elements_by_property_value" c:type="get_elements_by_property_value">
				<return-value transfer-ownership="full">
					<type name="GXml.ElementList" c:type="GXmlElementList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="property" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_name">
			<callback name="get_elements_by_name" c:type="get_elements_by_name">
				<return-value transfer-ownership="full">
					<type name="GXml.ElementList" c:type="GXmlElementList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_name_ns">
			<callback name="get_elements_by_name_ns" c:type="get_elements_by_name_ns">
				<return-value transfer-ownership="full">
					<type name="GXml.ElementList" c:type="GXmlElementList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="ns" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_namespace">
			<callback name="set_namespace" c:type="set_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="prefix" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="ns_prefix">
			<callback name="ns_prefix" c:type="ns_prefix">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="ns_uri">
			<callback name="ns_uri" c:type="ns_uri">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_namespaces">
			<callback name="get_namespaces" c:type="get_namespaces">
				<return-value transfer-ownership="full">
					<type name="Gee.List" c:type="GeeList*">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_children_nodes">
			<callback name="get_children_nodes" c:type="get_children_nodes">
				<return-value transfer-ownership="full">
					<type name="Gee.BidirList" c:type="GeeBidirList*">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attrs">
			<callback name="get_attrs" c:type="get_attrs">
				<return-value transfer-ownership="full">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_value">
			<callback name="set_value" c:type="set_value">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_type_node">
			<callback name="get_type_node" c:type="get_type_node">
				<return-value transfer-ownership="none">
					<type name="GXml.NodeType" c:type="GXmlNodeType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_document">
			<callback name="get_document" c:type="get_document">
				<return-value transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_parent">
			<callback name="get_parent" c:type="get_parent">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Notation" c:type="GXmlNotation" glib:type-name="GXmlNotation" glib:get-type="gxml_notation_get_type" glib:type-struct="NotationIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="public-id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_public_id" c:identifier="gxml_notation_get_public_id">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_public_id" invoker="get_public_id">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="external-id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_external_id" c:identifier="gxml_notation_get_external_id">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_external_id" invoker="get_external_id">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="NotationIface" c:type="GXmlNotationIface" glib:is-gtype-struct-for="Notation">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_public_id">
			<callback name="get_public_id" c:type="get_public_id">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Notation" c:type="GXmlNotation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_external_id">
			<callback name="get_external_id" c:type="get_external_id">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Notation" c:type="GXmlNotation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="ProcessingInstruction" c:type="GXmlProcessingInstruction" glib:type-name="GXmlProcessingInstruction" glib:get-type="gxml_processing_instruction_get_type" glib:type-struct="ProcessingInstructionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="target">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_target" c:identifier="gxml_processing_instruction_get_target">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_target" invoker="get_target">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="data" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_data" c:identifier="gxml_processing_instruction_get_data">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_data" invoker="get_data">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_data" c:identifier="gxml_processing_instruction_set_data">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_data" invoker="set_data">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ProcessingInstructionIface" c:type="GXmlProcessingInstructionIface" glib:is-gtype-struct-for="ProcessingInstruction">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_target">
			<callback name="get_target" c:type="get_target">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ProcessingInstruction" c:type="GXmlProcessingInstruction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_data">
			<callback name="get_data" c:type="get_data">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ProcessingInstruction" c:type="GXmlProcessingInstruction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_data">
			<callback name="set_data" c:type="set_data">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ProcessingInstruction" c:type="GXmlProcessingInstruction*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Text" c:type="GXmlText" glib:type-name="GXmlText" glib:get-type="gxml_text_get_type" glib:type-struct="TextIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="str">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_str" c:identifier="gxml_text_get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_str" invoker="get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="TextIface" c:type="GXmlTextIface" glib:is-gtype-struct-for="Text">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_str">
			<callback name="get_str" c:type="get_str">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Text" c:type="GXmlText*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Serializable" c:type="GXmlSerializable" glib:type-name="GXmlSerializable" glib:get-type="gxml_serializable_get_type" glib:type-struct="SerializableIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_enable_unknown_serializable_property" c:identifier="gxml_serializable_get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_enable_unknown_serializable_property" invoker="get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize_property" c:identifier="gxml_serializable_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize" c:identifier="gxml_serializable_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_property" c:identifier="gxml_serializable_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="find_property_spec" c:identifier="gxml_serializable_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_find_property_spec" c:identifier="gxml_serializable_default_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="default_find_property_spec" invoker="default_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_list_serializable_properties" c:identifier="gxml_serializable_default_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="default_list_serializable_properties" invoker="default_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<function name="string_to_gvalue" c:identifier="gxml_serializable_string_to_gvalue" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="dest" direction="inout" transfer-ownership="full">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</function>
		<function name="gvalue_to_string" c:identifier="gxml_serializable_gvalue_to_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="GObject.Value" c:type="GValue"/>
				</parameter>
			</parameters>
		</function>
		<property name="unknown-serializable-properties">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
			</type>
		</property>
		<method name="get_unknown_serializable_properties" c:identifier="gxml_serializable_get_unknown_serializable_properties">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_unknown_serializable_properties" invoker="get_unknown_serializable_properties">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="unknown-serializable-nodes">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_unknown_serializable_nodes" c:identifier="gxml_serializable_get_unknown_serializable_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_unknown_serializable_nodes" invoker="get_unknown_serializable_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="serialized-xml-node-value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_serialized_xml_node_value" c:identifier="gxml_serializable_get_serialized_xml_node_value">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_serialized_xml_node_value" invoker="get_serialized_xml_node_value">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_serialized_xml_node_value" c:identifier="gxml_serializable_set_serialized_xml_node_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_serialized_xml_node_value" invoker="set_serialized_xml_node_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="serialize_unknown_property">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="node" direction="out" transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode**"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="serialize_unknown_property_type">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="node" direction="out" transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode**"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="deserialize_unknown_property">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="deserialize_unknown_property_type">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="SerializableIface" c:type="GXmlSerializableIface" glib:is-gtype-struct-for="Serializable">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_enable_unknown_serializable_property">
			<callback name="get_enable_unknown_serializable_property" c:type="get_enable_unknown_serializable_property">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="default_find_property_spec">
			<callback name="default_find_property_spec" c:type="default_find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="default_list_serializable_properties">
			<callback name="default_list_serializable_properties" c:type="default_list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_unknown_serializable_properties">
			<callback name="get_unknown_serializable_properties" c:type="get_unknown_serializable_properties">
				<return-value transfer-ownership="full">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_unknown_serializable_nodes">
			<callback name="get_unknown_serializable_nodes" c:type="get_unknown_serializable_nodes">
				<return-value transfer-ownership="full">
					<type name="Gee.Collection" c:type="GeeCollection*">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_serialized_xml_node_value">
			<callback name="get_serialized_xml_node_value" c:type="get_serialized_xml_node_value">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_serialized_xml_node_value">
			<callback name="set_serialized_xml_node_value" c:type="set_serialized_xml_node_value">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="SerializableProperty" c:type="GXmlSerializableProperty" glib:type-name="GXmlSerializableProperty" glib:get-type="gxml_serializable_property_get_type" glib:type-struct="SerializablePropertyIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_serializable_property_value" c:identifier="gxml_serializable_property_get_serializable_property_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_serializable_property_value" invoker="get_serializable_property_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_serializable_property_value" c:identifier="gxml_serializable_property_set_serializable_property_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_serializable_property_value" invoker="set_serializable_property_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_property" c:identifier="gxml_serializable_property_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize_property" c:identifier="gxml_serializable_property_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serializable_property_serialize_property" c:identifier="gxml_serializable_property_default_serializable_property_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<method name="default_serializable_property_deserialize_property" c:identifier="gxml_serializable_property_default_serializable_property_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
	</interface>
	<record name="SerializablePropertyIface" c:type="GXmlSerializablePropertyIface" glib:is-gtype-struct-for="SerializableProperty">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_serializable_property_value">
			<callback name="get_serializable_property_value" c:type="get_serializable_property_value">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableProperty" c:type="GXmlSerializableProperty*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_serializable_property_value">
			<callback name="set_serializable_property_value" c:type="set_serializable_property_value">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableProperty" c:type="GXmlSerializableProperty*"/>
					</parameter>
					<parameter name="val" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableProperty" c:type="GXmlSerializableProperty*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
					<parameter name="nick" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableProperty" c:type="GXmlSerializableProperty*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
					<parameter name="nick" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="SerializableMapKey" c:type="GXmlSerializableMapKey" glib:type-name="GXmlSerializableMapKey" glib:get-type="gxml_serializable_map_key_get_type" glib:type-struct="SerializableMapKeyIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_map_key" c:identifier="gxml_serializable_map_key_get_map_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="get_map_key" invoker="get_map_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="SerializableMapKeyIface" c:type="GXmlSerializableMapKeyIface" glib:is-gtype-struct-for="SerializableMapKey">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_map_key">
			<callback name="get_map_key" c:type="get_map_key">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableMapKey" c:type="GXmlSerializableMapKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="SerializableMapDualKey" c:type="GXmlSerializableMapDualKey" glib:type-name="GXmlSerializableMapDualKey" glib:get-type="gxml_serializable_map_dual_key_get_type" glib:type-struct="SerializableMapDualKeyIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_map_primary_key" c:identifier="gxml_serializable_map_dual_key_get_map_primary_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="get_map_primary_key" invoker="get_map_primary_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
		<method name="get_map_secondary_key" c:identifier="gxml_serializable_map_dual_key_get_map_secondary_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="get_map_secondary_key" invoker="get_map_secondary_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="SerializableMapDualKeyIface" c:type="GXmlSerializableMapDualKeyIface" glib:is-gtype-struct-for="SerializableMapDualKey">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_map_primary_key">
			<callback name="get_map_primary_key" c:type="get_map_primary_key">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableMapDualKey" c:type="GXmlSerializableMapDualKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_map_secondary_key">
			<callback name="get_map_secondary_key" c:type="get_map_secondary_key">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableMapDualKey" c:type="GXmlSerializableMapDualKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="SerializableCollection" c:type="GXmlSerializableCollection" glib:type-name="GXmlSerializableCollection" glib:get-type="gxml_serializable_collection_get_type" glib:type-struct="SerializableCollectionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.Traversable"/>
		<prerequisite name="GXml.Serializable"/>
		<method name="deserialize_proceed" c:identifier="gxml_serializable_collection_deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_proceed" invoker="deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialized" c:identifier="gxml_serializable_collection_deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialized" invoker="deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialize_node" c:identifier="gxml_serializable_collection_deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_node" invoker="deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_children" c:identifier="gxml_serializable_collection_deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_children" invoker="deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="is_collection" c:identifier="gxml_serializable_collection_is_collection">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="is_collection" invoker="is_collection">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="SerializableCollectionIface" c:type="GXmlSerializableCollectionIface" glib:is-gtype-struct-for="SerializableCollection">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="deserialize_proceed">
			<callback name="deserialize_proceed" c:type="deserialize_proceed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableCollection" c:type="GXmlSerializableCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialized">
			<callback name="deserialized" c:type="deserialized">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableCollection" c:type="GXmlSerializableCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialize_node">
			<callback name="deserialize_node" c:type="deserialize_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableCollection" c:type="GXmlSerializableCollection*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialize_children">
			<callback name="deserialize_children" c:type="deserialize_children" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableCollection" c:type="GXmlSerializableCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="is_collection">
			<callback name="is_collection" c:type="is_collection">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableCollection" c:type="GXmlSerializableCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomAttr" c:type="GXmlDomAttr" glib:type-name="GXmlDomAttr" glib:get-type="gxml_dom_attr_get_type" glib:type-struct="DomAttrIface">
		<prerequisite name="GObject.Object"/>
		<property name="namespace-uri">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_namespace_uri" c:identifier="gxml_dom_attr_get_namespace_uri">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_namespace_uri" invoker="get_namespace_uri">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="prefix">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gxml_dom_attr_get_prefix">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_prefix" invoker="get_prefix">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="local-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_local_name" c:identifier="gxml_dom_attr_get_local_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_local_name" invoker="get_local_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_dom_attr_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_dom_attr_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_dom_attr_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="specified">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_specified" c:identifier="gxml_dom_attr_get_specified">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_specified" invoker="get_specified">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomAttrIface" c:type="GXmlDomAttrIface" glib:is-gtype-struct-for="DomAttr">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_namespace_uri">
			<callback name="get_namespace_uri" c:type="get_namespace_uri">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_prefix">
			<callback name="get_prefix" c:type="get_prefix">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_local_name">
			<callback name="get_local_name" c:type="get_local_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_value">
			<callback name="set_value" c:type="set_value">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_specified">
			<callback name="get_specified" c:type="get_specified">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomCharacterData" c:type="GXmlDomCharacterData" glib:type-name="GXmlDomCharacterData" glib:get-type="gxml_dom_character_data_get_type" glib:type-struct="DomCharacterDataIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomNonDocumentTypeChildNode"/>
		<prerequisite name="GXml.DomChildNode"/>
		<method name="substring_data" c:identifier="gxml_dom_character_data_substring_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="substring_data" invoker="substring_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="append_data" c:identifier="gxml_dom_character_data_append_data">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="append_data" invoker="append_data">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="insert_data" c:identifier="gxml_dom_character_data_insert_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="insert_data" invoker="insert_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="delete_data" c:identifier="gxml_dom_character_data_delete_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="delete_data" invoker="delete_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="replace_data" c:identifier="gxml_dom_character_data_replace_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_data" invoker="replace_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="data" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_data" c:identifier="gxml_dom_character_data_get_data">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_data" invoker="get_data">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_data" c:identifier="gxml_dom_character_data_set_data">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_data" invoker="set_data">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_dom_character_data_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomCharacterDataIface" c:type="GXmlDomCharacterDataIface" glib:is-gtype-struct-for="DomCharacterData">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="substring_data">
			<callback name="substring_data" c:type="substring_data" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="count" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="append_data">
			<callback name="append_data" c:type="append_data">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="insert_data">
			<callback name="insert_data" c:type="insert_data" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="delete_data">
			<callback name="delete_data" c:type="delete_data" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="count" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="replace_data">
			<callback name="replace_data" c:type="replace_data" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="count" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_data">
			<callback name="get_data" c:type="get_data">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_data">
			<callback name="set_data" c:type="set_data">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomText" c:type="GXmlDomText" glib:type-name="GXmlDomText" glib:get-type="gxml_dom_text_get_type" glib:type-struct="DomTextIface">
		<prerequisite name="GXml.DomCharacterData"/>
		<method name="split_text" c:identifier="gxml_dom_text_split_text" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomText" c:type="GXmlDomText*"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="split_text" invoker="split_text" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomText" c:type="GXmlDomText*"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="whole-text">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_whole_text" c:identifier="gxml_dom_text_get_whole_text">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_whole_text" invoker="get_whole_text">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomTextIface" c:type="GXmlDomTextIface" glib:is-gtype-struct-for="DomText">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="split_text">
			<callback name="split_text" c:type="split_text" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomText" c:type="GXmlDomText*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomText" c:type="GXmlDomText*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_whole_text">
			<callback name="get_whole_text" c:type="get_whole_text">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomText" c:type="GXmlDomText*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomProcessingInstruction" c:type="GXmlDomProcessingInstruction" glib:type-name="GXmlDomProcessingInstruction" glib:get-type="gxml_dom_processing_instruction_get_type" glib:type-struct="DomProcessingInstructionIface">
		<prerequisite name="GXml.DomCharacterData"/>
		<property name="target">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_target" c:identifier="gxml_dom_processing_instruction_get_target">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_target" invoker="get_target">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomProcessingInstructionIface" c:type="GXmlDomProcessingInstructionIface" glib:is-gtype-struct-for="DomProcessingInstruction">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_target">
			<callback name="get_target" c:type="get_target">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomProcessingInstruction" c:type="GXmlDomProcessingInstruction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomComment" c:type="GXmlDomComment" glib:type-name="GXmlDomComment" glib:get-type="gxml_dom_comment_get_type" glib:type-struct="DomCommentIface">
		<prerequisite name="GXml.DomCharacterData"/>
	</interface>
	<record name="DomCommentIface" c:type="GXmlDomCommentIface" glib:is-gtype-struct-for="DomComment">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DomNonElementParentNode" c:type="GXmlDomNonElementParentNode" glib:type-name="GXmlDomNonElementParentNode" glib:get-type="gxml_dom_non_element_parent_node_get_type" glib:type-struct="DomNonElementParentNodeIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_element_by_id" c:identifier="gxml_dom_non_element_parent_node_get_element_by_id" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="element_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_element_by_id" invoker="get_element_by_id" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="element_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomNonElementParentNodeIface" c:type="GXmlDomNonElementParentNodeIface" glib:is-gtype-struct-for="DomNonElementParentNode">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_element_by_id">
			<callback name="get_element_by_id" c:type="get_element_by_id" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNonElementParentNode" c:type="GXmlDomNonElementParentNode*"/>
					</parameter>
					<parameter name="element_id" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomParentNode" c:type="GXmlDomParentNode" glib:type-name="GXmlDomParentNode" glib:get-type="gxml_dom_parent_node_get_type" glib:type-struct="DomParentNodeIface">
		<prerequisite name="GObject.Object"/>
		<method name="query_selector" c:identifier="gxml_dom_parent_node_query_selector" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="query_selector" invoker="query_selector" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="query_selector_all" c:identifier="gxml_dom_parent_node_query_selector_all" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="query_selector_all" invoker="query_selector_all" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_property_value" c:identifier="gxml_dom_parent_node_get_elements_by_property_value">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
			</return-value>
			<parameters>
				<parameter name="property" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_property_value" invoker="get_elements_by_property_value">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
			</return-value>
			<parameters>
				<parameter name="property" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="children">
			<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
		</property>
		<method name="get_children" c:identifier="gxml_dom_parent_node_get_children">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
		</method>
		<virtual-method name="get_children" invoker="get_children">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
		</virtual-method>
		<property name="first-element-child">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_first_element_child" c:identifier="gxml_dom_parent_node_get_first_element_child">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</method>
		<virtual-method name="get_first_element_child" invoker="get_first_element_child">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</virtual-method>
		<property name="last-element-child">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_last_element_child" c:identifier="gxml_dom_parent_node_get_last_element_child">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</method>
		<virtual-method name="get_last_element_child" invoker="get_last_element_child">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</virtual-method>
		<property name="child-element-count">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_child_element_count" c:identifier="gxml_dom_parent_node_get_child_element_count">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_child_element_count" invoker="get_child_element_count">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomParentNodeIface" c:type="GXmlDomParentNodeIface" glib:is-gtype-struct-for="DomParentNode">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="query_selector">
			<callback name="query_selector" c:type="query_selector" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
					<parameter name="selectors" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="query_selector_all">
			<callback name="query_selector_all" c:type="query_selector_all" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
					<parameter name="selectors" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_property_value">
			<callback name="get_elements_by_property_value" c:type="get_elements_by_property_value">
				<return-value transfer-ownership="full">
					<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
					<parameter name="property" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_children">
			<callback name="get_children" c:type="get_children">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_first_element_child">
			<callback name="get_first_element_child" c:type="get_first_element_child">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_last_element_child">
			<callback name="get_last_element_child" c:type="get_last_element_child">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_child_element_count">
			<callback name="get_child_element_count" c:type="get_child_element_count">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomNonDocumentTypeChildNode" c:type="GXmlDomNonDocumentTypeChildNode" glib:type-name="GXmlDomNonDocumentTypeChildNode" glib:get-type="gxml_dom_non_document_type_child_node_get_type" glib:type-struct="DomNonDocumentTypeChildNodeIface">
		<prerequisite name="GObject.Object"/>
		<property name="previous-element-sibling">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_previous_element_sibling" c:identifier="gxml_dom_non_document_type_child_node_get_previous_element_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</method>
		<virtual-method name="get_previous_element_sibling" invoker="get_previous_element_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</virtual-method>
		<property name="next-element-sibling">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_next_element_sibling" c:identifier="gxml_dom_non_document_type_child_node_get_next_element_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</method>
		<virtual-method name="get_next_element_sibling" invoker="get_next_element_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomNonDocumentTypeChildNodeIface" c:type="GXmlDomNonDocumentTypeChildNodeIface" glib:is-gtype-struct-for="DomNonDocumentTypeChildNode">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_previous_element_sibling">
			<callback name="get_previous_element_sibling" c:type="get_previous_element_sibling">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNonDocumentTypeChildNode" c:type="GXmlDomNonDocumentTypeChildNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_next_element_sibling">
			<callback name="get_next_element_sibling" c:type="get_next_element_sibling">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNonDocumentTypeChildNode" c:type="GXmlDomNonDocumentTypeChildNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomChildNode" c:type="GXmlDomChildNode" glib:type-name="GXmlDomChildNode" glib:get-type="gxml_dom_child_node_get_type" glib:type-struct="DomChildNodeIface">
		<prerequisite name="GObject.Object"/>
		<method name="remove" c:identifier="gxml_dom_child_node_remove">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="remove" invoker="remove">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomChildNodeIface" c:type="GXmlDomChildNodeIface" glib:is-gtype-struct-for="DomChildNode">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="remove">
			<callback name="remove" c:type="remove">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomChildNode" c:type="GXmlDomChildNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomNodeList" c:type="GXmlDomNodeList" glib:type-name="GXmlDomNodeList" glib:get-type="gxml_dom_node_list_get_type" glib:type-struct="DomNodeListIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.BidirList"/>
		<method name="item" c:identifier="gxml_dom_node_list_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_dom_node_list_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomNodeListIface" c:type="GXmlDomNodeListIface" glib:is-gtype-struct-for="DomNodeList">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomHTMLCollection" c:type="GXmlDomHTMLCollection" glib:type-name="GXmlDomHTMLCollection" glib:get-type="gxml_dom_html_collection_get_type" glib:type-struct="DomHTMLCollectionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.BidirList"/>
		<method name="get_element" c:identifier="gxml_dom_html_collection_get_element">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_element" invoker="get_element">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_array" c:identifier="gxml_dom_html_collection_to_array">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="to_array" invoker="to_array">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="item" c:identifier="gxml_dom_html_collection_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="named_item" c:identifier="gxml_dom_html_collection_named_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="named_item" invoker="named_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_dom_html_collection_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomHTMLCollectionIface" c:type="GXmlDomHTMLCollectionIface" glib:is-gtype-struct-for="DomHTMLCollection">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_element">
			<callback name="get_element" c:type="get_element">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_array">
			<callback name="to_array" c:type="to_array">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="named_item">
			<callback name="named_item" c:type="named_item">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomNodeIterator" c:type="GXmlDomNodeIterator" glib:type-name="GXmlDomNodeIterator" glib:get-type="gxml_dom_node_iterator_get_type" glib:type-struct="DomNodeIteratorIface">
		<method name="next_node" c:identifier="gxml_dom_node_iterator_next_node">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="next_node" invoker="next_node">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<method name="previous_node" c:identifier="gxml_dom_node_iterator_previous_node">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="previous_node" invoker="previous_node">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<method name="detach" c:identifier="gxml_dom_node_iterator_detach">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="detach" invoker="detach">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<property name="root">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_root" c:identifier="gxml_dom_node_iterator_get_root">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_root" invoker="get_root">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="reference-node">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_reference_node" c:identifier="gxml_dom_node_iterator_get_reference_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_reference_node" invoker="get_reference_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="pointer-before-reference-node">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_pointer_before_reference_node" c:identifier="gxml_dom_node_iterator_get_pointer_before_reference_node">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_pointer_before_reference_node" invoker="get_pointer_before_reference_node">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<property name="what-to-show">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_what_to_show" c:identifier="gxml_dom_node_iterator_get_what_to_show">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_what_to_show" invoker="get_what_to_show">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
		<property name="filter">
			<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
		</property>
		<method name="get_filter" c:identifier="gxml_dom_node_iterator_get_filter">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
			</return-value>
		</method>
		<virtual-method name="get_filter" invoker="get_filter">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomNodeIteratorIface" c:type="GXmlDomNodeIteratorIface" glib:is-gtype-struct-for="DomNodeIterator">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="next_node">
			<callback name="next_node" c:type="next_node">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="previous_node">
			<callback name="previous_node" c:type="previous_node">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="detach">
			<callback name="detach" c:type="detach">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_root">
			<callback name="get_root" c:type="get_root">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_reference_node">
			<callback name="get_reference_node" c:type="get_reference_node">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_pointer_before_reference_node">
			<callback name="get_pointer_before_reference_node" c:type="get_pointer_before_reference_node">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_what_to_show">
			<callback name="get_what_to_show" c:type="get_what_to_show">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_filter">
			<callback name="get_filter" c:type="get_filter">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomTreeWalker" c:type="GXmlDomTreeWalker" glib:type-name="GXmlDomTreeWalker" glib:get-type="gxml_dom_tree_walker_get_type" glib:type-struct="DomTreeWalkerIface">
		<prerequisite name="GObject.Object"/>
		<method name="parentNode" c:identifier="gxml_dom_tree_walker_parentNode">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="parentNode" invoker="parentNode">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<method name="firstChild" c:identifier="gxml_dom_tree_walker_firstChild">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="firstChild" invoker="firstChild">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<method name="lastChild" c:identifier="gxml_dom_tree_walker_lastChild">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="lastChild" invoker="lastChild">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<method name="previousSibling" c:identifier="gxml_dom_tree_walker_previousSibling">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="previousSibling" invoker="previousSibling">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<method name="nextSibling" c:identifier="gxml_dom_tree_walker_nextSibling">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="nextSibling" invoker="nextSibling">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<method name="previousNode" c:identifier="gxml_dom_tree_walker_previousNode">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="previousNode" invoker="previousNode">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<method name="nextNode" c:identifier="gxml_dom_tree_walker_nextNode">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="nextNode" invoker="nextNode">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="root">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_root" c:identifier="gxml_dom_tree_walker_get_root">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_root" invoker="get_root">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="what-to-show">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_what_to_show" c:identifier="gxml_dom_tree_walker_get_what_to_show">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_what_to_show" invoker="get_what_to_show">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
		<property name="filter">
			<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
		</property>
		<method name="get_filter" c:identifier="gxml_dom_tree_walker_get_filter">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
			</return-value>
		</method>
		<virtual-method name="get_filter" invoker="get_filter">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
			</return-value>
		</virtual-method>
		<property name="current-node">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_current_node" c:identifier="gxml_dom_tree_walker_get_current_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_current_node" invoker="get_current_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomTreeWalkerIface" c:type="GXmlDomTreeWalkerIface" glib:is-gtype-struct-for="DomTreeWalker">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="parentNode">
			<callback name="parentNode" c:type="parentNode">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="firstChild">
			<callback name="firstChild" c:type="firstChild">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="lastChild">
			<callback name="lastChild" c:type="lastChild">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="previousSibling">
			<callback name="previousSibling" c:type="previousSibling">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="nextSibling">
			<callback name="nextSibling" c:type="nextSibling">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="previousNode">
			<callback name="previousNode" c:type="previousNode">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="nextNode">
			<callback name="nextNode" c:type="nextNode">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_root">
			<callback name="get_root" c:type="get_root">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_what_to_show">
			<callback name="get_what_to_show" c:type="get_what_to_show">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_filter">
			<callback name="get_filter" c:type="get_filter">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_current_node">
			<callback name="get_current_node" c:type="get_current_node">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomNamedNodeMap" c:type="GXmlDomNamedNodeMap" glib:type-name="GXmlDomNamedNodeMap" glib:get-type="gxml_dom_named_node_map_get_type" glib:type-struct="DomNamedNodeMapIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.Map"/>
		<method name="item" c:identifier="gxml_dom_named_node_map_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_named_item" c:identifier="gxml_dom_named_node_map_get_named_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_named_item" invoker="get_named_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_named_item" c:identifier="gxml_dom_named_node_map_set_named_item" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_named_item" invoker="set_named_item" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_named_item" c:identifier="gxml_dom_named_node_map_remove_named_item" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_named_item" invoker="remove_named_item" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_named_item_ns" c:identifier="gxml_dom_named_node_map_remove_named_item_ns" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="namespace_uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="localName" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_named_item_ns" invoker="remove_named_item_ns" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="namespace_uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="localName" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_named_item_ns" c:identifier="gxml_dom_named_node_map_get_named_item_ns" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="namespace_uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_named_item_ns" invoker="get_named_item_ns" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="namespace_uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_named_item_ns" c:identifier="gxml_dom_named_node_map_set_named_item_ns" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_named_item_ns" invoker="set_named_item_ns" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_dom_named_node_map_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomNamedNodeMapIface" c:type="GXmlDomNamedNodeMapIface" glib:is-gtype-struct-for="DomNamedNodeMap">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_named_item">
			<callback name="get_named_item" c:type="get_named_item">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_named_item">
			<callback name="set_named_item" c:type="set_named_item" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_named_item">
			<callback name="remove_named_item" c:type="remove_named_item" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_named_item_ns">
			<callback name="remove_named_item_ns" c:type="remove_named_item_ns" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="namespace_uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="localName" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_named_item_ns">
			<callback name="get_named_item_ns" c:type="get_named_item_ns" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="namespace_uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_named_item_ns">
			<callback name="set_named_item_ns" c:type="set_named_item_ns" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomTokenList" c:type="GXmlDomTokenList" glib:type-name="GXmlDomTokenList" glib:get-type="gxml_dom_token_list_get_type" glib:type-struct="DomTokenListIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.BidirList"/>
		<method name="item" c:identifier="gxml_dom_token_list_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="contains" c:identifier="gxml_dom_token_list_contains" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="token" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="contains" invoker="contains" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="token" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="add" c:identifier="gxml_dom_token_list_add" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="tokens" transfer-ownership="none">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="tokens_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add" invoker="add" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="tokens" transfer-ownership="none">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="tokens_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove" c:identifier="gxml_dom_token_list_remove">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="tokens" transfer-ownership="none">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="tokens_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove" invoker="remove">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="tokens" transfer-ownership="none">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="tokens_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="toggle" c:identifier="gxml_dom_token_list_toggle" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="token" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="force" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="auto" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="toggle" invoker="toggle" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="token" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="force" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="auto" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_dom_token_list_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_dom_token_list_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomTokenListIface" c:type="GXmlDomTokenListIface" glib:is-gtype-struct-for="DomTokenList">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="contains">
			<callback name="contains" c:type="contains" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
					<parameter name="token" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="add">
			<callback name="add" c:type="add" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
					<parameter name="tokens" transfer-ownership="none">
						<array length="2">
							<type name="utf8" c:type="gchar*"/>
						</array>
					</parameter>
					<parameter name="tokens_length1" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove">
			<callback name="remove" c:type="remove">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
					<parameter name="tokens" transfer-ownership="none">
						<array length="2">
							<type name="utf8" c:type="gchar*"/>
						</array>
					</parameter>
					<parameter name="tokens_length1" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="toggle">
			<callback name="toggle" c:type="toggle" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
					<parameter name="token" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="force" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
					<parameter name="auto" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomSettableTokenList" c:type="GXmlDomSettableTokenList" glib:type-name="GXmlDomSettableTokenList" glib:get-type="gxml_dom_settable_token_list_get_type" glib:type-struct="DomSettableTokenListIface">
		<prerequisite name="GXml.DomTokenList"/>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_dom_settable_token_list_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_dom_settable_token_list_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomSettableTokenListIface" c:type="GXmlDomSettableTokenListIface" glib:is-gtype-struct-for="DomSettableTokenList">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomSettableTokenList" c:type="GXmlDomSettableTokenList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_value">
			<callback name="set_value" c:type="set_value">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomSettableTokenList" c:type="GXmlDomSettableTokenList*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomDocument" c:type="GXmlDomDocument" glib:type-name="GXmlDomDocument" glib:get-type="gxml_dom_document_get_type" glib:type-struct="DomDocumentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomParentNode"/>
		<prerequisite name="GXml.DomNonElementParentNode"/>
		<method name="get_elements_by_tag_name" c:identifier="gxml_dom_document_get_elements_by_tag_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_tag_name" invoker="get_elements_by_tag_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_tag_name_ns" c:identifier="gxml_dom_document_get_elements_by_tag_name_ns">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_tag_name_ns" invoker="get_elements_by_tag_name_ns">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_class_name" c:identifier="gxml_dom_document_get_elements_by_class_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="classNames" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_class_name" invoker="get_elements_by_class_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="classNames" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_element" c:identifier="gxml_dom_document_create_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_element" invoker="create_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_element_ns" c:identifier="gxml_dom_document_create_element_ns" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="qualified_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_element_ns" invoker="create_element_ns" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="qualified_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_document_fragment" c:identifier="gxml_dom_document_create_document_fragment">
			<return-value transfer-ownership="full">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
		</method>
		<virtual-method name="create_document_fragment" invoker="create_document_fragment">
			<return-value transfer-ownership="full">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
		</virtual-method>
		<method name="create_text_node" c:identifier="gxml_dom_document_create_text_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomText" c:type="GXmlDomText*"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_text_node" invoker="create_text_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomText" c:type="GXmlDomText*"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_comment" c:identifier="gxml_dom_document_create_comment" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomComment" c:type="GXmlDomComment*"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_comment" invoker="create_comment" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomComment" c:type="GXmlDomComment*"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_processing_instruction" c:identifier="gxml_dom_document_create_processing_instruction" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomProcessingInstruction" c:type="GXmlDomProcessingInstruction*"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_processing_instruction" invoker="create_processing_instruction" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomProcessingInstruction" c:type="GXmlDomProcessingInstruction*"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="import_node" c:identifier="gxml_dom_document_import_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="import_node" invoker="import_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="adopt_node" c:identifier="gxml_dom_document_adopt_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="adopt_node" invoker="adopt_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_event" c:identifier="gxml_dom_document_create_event" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
			</return-value>
			<parameters>
				<parameter name="interface" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_event" invoker="create_event" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
			</return-value>
			<parameters>
				<parameter name="interface" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_range" c:identifier="gxml_dom_document_create_range">
			<return-value transfer-ownership="full">
				<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
			</return-value>
		</method>
		<virtual-method name="create_range" invoker="create_range">
			<return-value transfer-ownership="full">
				<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
			</return-value>
		</virtual-method>
		<method name="create_node_iterator" c:identifier="gxml_dom_document_create_node_iterator">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
			</return-value>
			<parameters>
				<parameter name="root" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="whatToShow" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="filter" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_node_iterator" invoker="create_node_iterator">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
			</return-value>
			<parameters>
				<parameter name="root" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="whatToShow" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="filter" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_tree_walker" c:identifier="gxml_dom_document_create_tree_walker">
			<return-value transfer-ownership="full">
				<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
			</return-value>
			<parameters>
				<parameter name="root" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="what_to_show" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="filter" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_tree_walker" invoker="create_tree_walker">
			<return-value transfer-ownership="full">
				<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
			</return-value>
			<parameters>
				<parameter name="root" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="what_to_show" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="filter" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="implementation">
			<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
		</property>
		<method name="get_implementation" c:identifier="gxml_dom_document_get_implementation">
			<return-value transfer-ownership="none">
				<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
			</return-value>
		</method>
		<virtual-method name="get_implementation" invoker="get_implementation">
			<return-value transfer-ownership="none">
				<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
			</return-value>
		</virtual-method>
		<property name="url">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_url" c:identifier="gxml_dom_document_get_url">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_url" invoker="get_url">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="document-uri">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_document_uri" c:identifier="gxml_dom_document_get_document_uri">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_document_uri" invoker="get_document_uri">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="origin">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_origin" c:identifier="gxml_dom_document_get_origin">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_origin" invoker="get_origin">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="compat-mode">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_compat_mode" c:identifier="gxml_dom_document_get_compat_mode">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_compat_mode" invoker="get_compat_mode">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="character-set">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_character_set" c:identifier="gxml_dom_document_get_character_set">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_character_set" invoker="get_character_set">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="content-type">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_content_type" c:identifier="gxml_dom_document_get_content_type">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_content_type" invoker="get_content_type">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="doctype">
			<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
		</property>
		<method name="get_doctype" c:identifier="gxml_dom_document_get_doctype">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
			</return-value>
		</method>
		<virtual-method name="get_doctype" invoker="get_doctype">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
			</return-value>
		</virtual-method>
		<property name="document-element">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_document_element" c:identifier="gxml_dom_document_get_document_element">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</method>
		<virtual-method name="get_document_element" invoker="get_document_element">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomDocumentIface" c:type="GXmlDomDocumentIface" glib:is-gtype-struct-for="DomDocument">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_elements_by_tag_name">
			<callback name="get_elements_by_tag_name" c:type="get_elements_by_tag_name">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_tag_name_ns">
			<callback name="get_elements_by_tag_name_ns" c:type="get_elements_by_tag_name_ns">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_class_name">
			<callback name="get_elements_by_class_name" c:type="get_elements_by_class_name">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="classNames" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_element">
			<callback name="create_element" c:type="create_element" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_element_ns">
			<callback name="create_element_ns" c:type="create_element_ns" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="qualified_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_document_fragment">
			<callback name="create_document_fragment" c:type="create_document_fragment">
				<return-value transfer-ownership="full">
					<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_text_node">
			<callback name="create_text_node" c:type="create_text_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomText" c:type="GXmlDomText*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_comment">
			<callback name="create_comment" c:type="create_comment" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomComment" c:type="GXmlDomComment*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_processing_instruction">
			<callback name="create_processing_instruction" c:type="create_processing_instruction" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomProcessingInstruction" c:type="GXmlDomProcessingInstruction*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="target" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="import_node">
			<callback name="import_node" c:type="import_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="deep" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="adopt_node">
			<callback name="adopt_node" c:type="adopt_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_event">
			<callback name="create_event" c:type="create_event" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="interface" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_range">
			<callback name="create_range" c:type="create_range">
				<return-value transfer-ownership="full">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_node_iterator">
			<callback name="create_node_iterator" c:type="create_node_iterator">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="root" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="whatToShow" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="filter" transfer-ownership="none" allow-none="1">
						<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_tree_walker">
			<callback name="create_tree_walker" c:type="create_tree_walker">
				<return-value transfer-ownership="full">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="root" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="what_to_show" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="filter" transfer-ownership="none" allow-none="1">
						<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_implementation">
			<callback name="get_implementation" c:type="get_implementation">
				<return-value transfer-ownership="none">
					<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_url">
			<callback name="get_url" c:type="get_url">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_document_uri">
			<callback name="get_document_uri" c:type="get_document_uri">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_origin">
			<callback name="get_origin" c:type="get_origin">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_compat_mode">
			<callback name="get_compat_mode" c:type="get_compat_mode">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_character_set">
			<callback name="get_character_set" c:type="get_character_set">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_content_type">
			<callback name="get_content_type" c:type="get_content_type">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_doctype">
			<callback name="get_doctype" c:type="get_doctype">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_document_element">
			<callback name="get_document_element" c:type="get_document_element">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomXMLDocument" c:type="GXmlDomXMLDocument" glib:type-name="GXmlDomXMLDocument" glib:get-type="gxml_dom_xml_document_get_type" glib:type-struct="DomXMLDocumentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomDocument"/>
	</interface>
	<record name="DomXMLDocumentIface" c:type="GXmlDomXMLDocumentIface" glib:is-gtype-struct-for="DomXMLDocument">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DomImplementation" c:type="GXmlDomImplementation" glib:type-name="GXmlDomImplementation" glib:get-type="gxml_dom_implementation_get_type" glib:type-struct="DomImplementationIface">
		<prerequisite name="GObject.Object"/>
		<method name="create_document_type" c:identifier="gxml_dom_implementation_create_document_type" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
			</return-value>
			<parameters>
				<parameter name="qualified_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="public_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="system_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_document_type" invoker="create_document_type" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
			</return-value>
			<parameters>
				<parameter name="qualified_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="public_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="system_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_document" c:identifier="gxml_dom_implementation_create_document" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomXMLDocument" c:type="GXmlDomXMLDocument*"/>
			</return-value>
			<parameters>
				<parameter name="nspace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="qualified_name" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="doctype" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_document" invoker="create_document" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomXMLDocument" c:type="GXmlDomXMLDocument*"/>
			</return-value>
			<parameters>
				<parameter name="nspace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="qualified_name" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="doctype" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_html_document" c:identifier="gxml_dom_implementation_create_html_document">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_html_document" invoker="create_html_document">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_feature" c:identifier="gxml_dom_implementation_has_feature">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="has_feature" invoker="has_feature">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomImplementationIface" c:type="GXmlDomImplementationIface" glib:is-gtype-struct-for="DomImplementation">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="create_document_type">
			<callback name="create_document_type" c:type="create_document_type" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
					</parameter>
					<parameter name="qualified_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="public_id" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="system_id" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_document">
			<callback name="create_document" c:type="create_document" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomXMLDocument" c:type="GXmlDomXMLDocument*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
					</parameter>
					<parameter name="nspace" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="qualified_name" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="doctype" transfer-ownership="none" allow-none="1">
						<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_html_document">
			<callback name="create_html_document" c:type="create_html_document">
				<return-value transfer-ownership="full">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
					</parameter>
					<parameter name="title" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_feature">
			<callback name="has_feature" c:type="has_feature">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomDocumentFragment" c:type="GXmlDomDocumentFragment" glib:type-name="GXmlDomDocumentFragment" glib:get-type="gxml_dom_document_fragment_get_type" glib:type-struct="DomDocumentFragmentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomParentNode"/>
		<prerequisite name="GXml.DomNonElementParentNode"/>
	</interface>
	<record name="DomDocumentFragmentIface" c:type="GXmlDomDocumentFragmentIface" glib:is-gtype-struct-for="DomDocumentFragment">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DomDocumentType" c:type="GXmlDomDocumentType" glib:type-name="GXmlDomDocumentType" glib:get-type="gxml_dom_document_type_get_type" glib:type-struct="DomDocumentTypeIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomChildNode"/>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_dom_document_type_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="public-id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_public_id" c:identifier="gxml_dom_document_type_get_public_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_public_id" invoker="get_public_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="system-id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_system_id" c:identifier="gxml_dom_document_type_get_system_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_system_id" invoker="get_system_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomDocumentTypeIface" c:type="GXmlDomDocumentTypeIface" glib:is-gtype-struct-for="DomDocumentType">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_public_id">
			<callback name="get_public_id" c:type="get_public_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_system_id">
			<callback name="get_system_id" c:type="get_system_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomElement" c:type="GXmlDomElement" glib:type-name="GXmlDomElement" glib:get-type="gxml_dom_element_get_type" glib:type-struct="DomElementIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomChildNode"/>
		<prerequisite name="GXml.DomNonDocumentTypeChildNode"/>
		<prerequisite name="GXml.DomParentNode"/>
		<method name="get_attribute" c:identifier="gxml_dom_element_get_attribute">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute" invoker="get_attribute">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_attribute_ns" c:identifier="gxml_dom_element_get_attribute_ns">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute_ns" invoker="get_attribute_ns">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute" c:identifier="gxml_dom_element_set_attribute" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute" invoker="set_attribute" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute_ns" c:identifier="gxml_dom_element_set_attribute_ns" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute_ns" invoker="set_attribute_ns" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_attribute" c:identifier="gxml_dom_element_remove_attribute">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_attribute" invoker="remove_attribute">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_attribute_ns" c:identifier="gxml_dom_element_remove_attribute_ns">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_attribute_ns" invoker="remove_attribute_ns">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_attribute" c:identifier="gxml_dom_element_has_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="has_attribute" invoker="has_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_attribute_ns" c:identifier="gxml_dom_element_has_attribute_ns">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="has_attribute_ns" invoker="has_attribute_ns">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_tag_name" c:identifier="gxml_dom_element_get_elements_by_tag_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_tag_name" invoker="get_elements_by_tag_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_tag_name_ns" c:identifier="gxml_dom_element_get_elements_by_tag_name_ns">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_tag_name_ns" invoker="get_elements_by_tag_name_ns">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="namespace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_class_name" c:identifier="gxml_dom_element_get_elements_by_class_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="class_names" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_class_name" invoker="get_elements_by_class_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<parameter name="class_names" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="namespace-uri">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_namespace_uri" c:identifier="gxml_dom_element_get_namespace_uri">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_namespace_uri" invoker="get_namespace_uri">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="prefix">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gxml_dom_element_get_prefix">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_prefix" invoker="get_prefix">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="local-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_local_name" c:identifier="gxml_dom_element_get_local_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_local_name" invoker="get_local_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="tag-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_tag_name" c:identifier="gxml_dom_element_get_tag_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_tag_name" invoker="get_tag_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="gxml_dom_element_get_id">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_id" c:identifier="gxml_dom_element_set_id">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_id" invoker="set_id">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="class-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_class_name" c:identifier="gxml_dom_element_get_class_name">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_class_name" invoker="get_class_name">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_class_name" c:identifier="gxml_dom_element_set_class_name">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_class_name" invoker="set_class_name">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="class-list">
			<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
		</property>
		<method name="get_class_list" c:identifier="gxml_dom_element_get_class_list">
			<return-value transfer-ownership="full">
				<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
			</return-value>
		</method>
		<virtual-method name="get_class_list" invoker="get_class_list">
			<return-value transfer-ownership="full">
				<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
			</return-value>
		</virtual-method>
		<property name="attributes">
			<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
		</property>
		<method name="get_attributes" c:identifier="gxml_dom_element_get_attributes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
			</return-value>
		</method>
		<virtual-method name="get_attributes" invoker="get_attributes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomElementIface" c:type="GXmlDomElementIface" glib:is-gtype-struct-for="DomElement">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_attribute">
			<callback name="get_attribute" c:type="get_attribute">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_ns">
			<callback name="get_attribute_ns" c:type="get_attribute_ns">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute">
			<callback name="set_attribute" c:type="set_attribute" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute_ns">
			<callback name="set_attribute_ns" c:type="set_attribute_ns" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_attribute">
			<callback name="remove_attribute" c:type="remove_attribute">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_attribute_ns">
			<callback name="remove_attribute_ns" c:type="remove_attribute_ns">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_attribute">
			<callback name="has_attribute" c:type="has_attribute">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_attribute_ns">
			<callback name="has_attribute_ns" c:type="has_attribute_ns">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_tag_name">
			<callback name="get_elements_by_tag_name" c:type="get_elements_by_tag_name">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_tag_name_ns">
			<callback name="get_elements_by_tag_name_ns" c:type="get_elements_by_tag_name_ns">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_class_name">
			<callback name="get_elements_by_class_name" c:type="get_elements_by_class_name">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="class_names" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_namespace_uri">
			<callback name="get_namespace_uri" c:type="get_namespace_uri">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_prefix">
			<callback name="get_prefix" c:type="get_prefix">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_local_name">
			<callback name="get_local_name" c:type="get_local_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_tag_name">
			<callback name="get_tag_name" c:type="get_tag_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_id">
			<callback name="set_id" c:type="set_id">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_class_name">
			<callback name="get_class_name" c:type="get_class_name">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_class_name">
			<callback name="set_class_name" c:type="set_class_name">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_class_list">
			<callback name="get_class_list" c:type="get_class_list">
				<return-value transfer-ownership="full">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attributes">
			<callback name="get_attributes" c:type="get_attributes">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomEventTarget" c:type="GXmlDomEventTarget" glib:type-name="GXmlDomEventTarget" glib:get-type="gxml_dom_event_target_get_type" glib:type-struct="DomEventTargetIface">
		<prerequisite name="GObject.Object"/>
		<method name="add_event_listener" c:identifier="gxml_dom_event_target_add_event_listener">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
				</parameter>
				<parameter name="capture" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_event_listener" invoker="add_event_listener">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
				</parameter>
				<parameter name="capture" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_event_listener" c:identifier="gxml_dom_event_target_remove_event_listener">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
				</parameter>
				<parameter name="capture" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_event_listener" invoker="remove_event_listener">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
				</parameter>
				<parameter name="capture" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="dispatch_event" c:identifier="gxml_dom_event_target_dispatch_event" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="event" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="dispatch_event" invoker="dispatch_event" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="event" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomEventTargetIface" c:type="GXmlDomEventTargetIface" glib:is-gtype-struct-for="DomEventTarget">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="add_event_listener">
			<callback name="add_event_listener" c:type="add_event_listener">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="callback" transfer-ownership="none" allow-none="1">
						<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
					</parameter>
					<parameter name="capture" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_event_listener">
			<callback name="remove_event_listener" c:type="remove_event_listener">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="callback" transfer-ownership="none" allow-none="1">
						<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
					</parameter>
					<parameter name="capture" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="dispatch_event">
			<callback name="dispatch_event" c:type="dispatch_event" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
					</parameter>
					<parameter name="event" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomEventListener" c:type="GXmlDomEventListener" glib:type-name="GXmlDomEventListener" glib:get-type="gxml_dom_event_listener_get_type" glib:type-struct="DomEventListenerIface">
		<prerequisite name="GObject.Object"/>
		<method name="handle_event" c:identifier="gxml_dom_event_listener_handle_event">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="event" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="handle_event" invoker="handle_event">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="event" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomEventListenerIface" c:type="GXmlDomEventListenerIface" glib:is-gtype-struct-for="DomEventListener">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="handle_event">
			<callback name="handle_event" c:type="handle_event">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
					</parameter>
					<parameter name="event" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomEvent" c:type="GXmlDomEvent" glib:type-name="GXmlDomEvent" glib:get-type="gxml_dom_event_get_type" glib:type-struct="DomEventIface">
		<prerequisite name="GObject.Object"/>
		<method name="stop_propagation" c:identifier="gxml_dom_event_stop_propagation">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="stop_propagation" invoker="stop_propagation">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="stop_immediate_propagation" c:identifier="gxml_dom_event_stop_immediate_propagation">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="stop_immediate_propagation" invoker="stop_immediate_propagation">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="prevent_default" c:identifier="gxml_dom_event_prevent_default">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="prevent_default" invoker="prevent_default">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="init_event" c:identifier="gxml_dom_event_init_event">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="bubbles" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancelable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="init_event" invoker="init_event">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="bubbles" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancelable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="etype">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_etype" c:identifier="gxml_dom_event_get_etype">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_etype" invoker="get_etype">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="event-target">
			<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
		</property>
		<method name="get_event_target" c:identifier="gxml_dom_event_get_event_target">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
			</return-value>
		</method>
		<virtual-method name="get_event_target" invoker="get_event_target">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
			</return-value>
		</virtual-method>
		<property name="current-target">
			<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
		</property>
		<method name="get_current_target" c:identifier="gxml_dom_event_get_current_target">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
			</return-value>
		</method>
		<virtual-method name="get_current_target" invoker="get_current_target">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
			</return-value>
		</virtual-method>
		<property name="bubbles">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_bubbles" c:identifier="gxml_dom_event_get_bubbles">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_bubbles" invoker="get_bubbles">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<property name="cancelable">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_cancelable" c:identifier="gxml_dom_event_get_cancelable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_cancelable" invoker="get_cancelable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<property name="is-trusted">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_trusted" c:identifier="gxml_dom_event_get_is_trusted">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_is_trusted" invoker="get_is_trusted">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<property name="time-stamp">
			<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
		</property>
		<method name="get_time_stamp" c:identifier="gxml_dom_event_get_time_stamp">
			<return-value transfer-ownership="none">
				<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
			</return-value>
		</method>
		<virtual-method name="get_time_stamp" invoker="get_time_stamp">
			<return-value transfer-ownership="none">
				<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
			</return-value>
		</virtual-method>
		<property name="default-prevented">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_default_prevented" c:identifier="gxml_dom_event_get_default_prevented">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_default_prevented" invoker="get_default_prevented">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<property name="event-phase">
			<type name="GXml.DomEventPhase" c:type="GXmlDomEventPhase"/>
		</property>
		<method name="get_event_phase" c:identifier="gxml_dom_event_get_event_phase">
			<return-value transfer-ownership="none">
				<type name="GXml.DomEventPhase" c:type="GXmlDomEventPhase"/>
			</return-value>
		</method>
		<virtual-method name="get_event_phase" invoker="get_event_phase">
			<return-value transfer-ownership="none">
				<type name="GXml.DomEventPhase" c:type="GXmlDomEventPhase"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomEventIface" c:type="GXmlDomEventIface" glib:is-gtype-struct-for="DomEvent">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="stop_propagation">
			<callback name="stop_propagation" c:type="stop_propagation">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="stop_immediate_propagation">
			<callback name="stop_immediate_propagation" c:type="stop_immediate_propagation">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="prevent_default">
			<callback name="prevent_default" c:type="prevent_default">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="init_event">
			<callback name="init_event" c:type="init_event">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="bubbles" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
					<parameter name="cancelable" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_etype">
			<callback name="get_etype" c:type="get_etype">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_event_target">
			<callback name="get_event_target" c:type="get_event_target">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_current_target">
			<callback name="get_current_target" c:type="get_current_target">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_bubbles">
			<callback name="get_bubbles" c:type="get_bubbles">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_cancelable">
			<callback name="get_cancelable" c:type="get_cancelable">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_is_trusted">
			<callback name="get_is_trusted" c:type="get_is_trusted">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_time_stamp">
			<callback name="get_time_stamp" c:type="get_time_stamp">
				<return-value transfer-ownership="none">
					<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_default_prevented">
			<callback name="get_default_prevented" c:type="get_default_prevented">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_event_phase">
			<callback name="get_event_phase" c:type="get_event_phase">
				<return-value transfer-ownership="none">
					<type name="GXml.DomEventPhase" c:type="GXmlDomEventPhase"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<enumeration name="DomEventPhase" c:type="GXmlDomEventPhase" glib:type-name="GXmlDomEventPhase" glib:get-type="gxml_dom_event_phase_get_type">
		<member name="none" c:identifier="GXML_DOM_EVENT_PHASE_NONE" value="0"/>
		<member name="capturing_phase" c:identifier="GXML_DOM_EVENT_PHASE_CAPTURING_PHASE" value="0"/>
		<member name="at_target" c:identifier="GXML_DOM_EVENT_PHASE_AT_TARGET" value="1"/>
		<member name="bubbling_phase" c:identifier="GXML_DOM_EVENT_PHASE_BUBBLING_PHASE" value="2"/>
	</enumeration>
	<bitfield name="DomEventFlags" c:type="GXmlDomEventFlags" glib:type-name="GXmlDomEventFlags" glib:get-type="gxml_dom_event_flags_get_type">
		<member name="stop_propagation_flag" c:identifier="GXML_DOM_EVENT_FLAGS_STOP_PROPAGATION_FLAG" value="1"/>
		<member name="stop_immediate_propagation_flag" c:identifier="GXML_DOM_EVENT_FLAGS_STOP_IMMEDIATE_PROPAGATION_FLAG" value="2"/>
		<member name="canceled_flag" c:identifier="GXML_DOM_EVENT_FLAGS_CANCELED_FLAG" value="4"/>
		<member name="initialized_flag" c:identifier="GXML_DOM_EVENT_FLAGS_INITIALIZED_FLAG" value="8"/>
		<member name="dispatch_flag" c:identifier="GXML_DOM_EVENT_FLAGS_DISPATCH_FLAG" value="16"/>
	</bitfield>
	<interface name="DomCustomEvent" c:type="GXmlDomCustomEvent" glib:type-name="GXmlDomCustomEvent" glib:get-type="gxml_dom_custom_event_get_type" glib:type-struct="DomCustomEventIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomEvent"/>
		<method name="init_custom_event" c:identifier="gxml_dom_custom_event_init_custom_event">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="bubbles" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancelable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="detail" transfer-ownership="none" allow-none="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="init_custom_event" invoker="init_custom_event">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="bubbles" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancelable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="detail" transfer-ownership="none" allow-none="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="detail">
			<type name="GObject.Value" c:type="GValue*"/>
		</property>
		<method name="get_detail" c:identifier="gxml_dom_custom_event_get_detail">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GObject.Value" c:type="GValue*"/>
			</return-value>
		</method>
		<virtual-method name="get_detail" invoker="get_detail">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GObject.Value" c:type="GValue*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomCustomEventIface" c:type="GXmlDomCustomEventIface" glib:is-gtype-struct-for="DomCustomEvent">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="init_custom_event">
			<callback name="init_custom_event" c:type="init_custom_event">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCustomEvent" c:type="GXmlDomCustomEvent*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="bubbles" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
					<parameter name="cancelable" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
					<parameter name="detail" transfer-ownership="none" allow-none="1">
						<type name="GObject.Value" c:type="GValue*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_detail">
			<callback name="get_detail" c:type="get_detail">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCustomEvent" c:type="GXmlDomCustomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomMutationObserver" c:type="GXmlDomMutationObserver" glib:type-name="GXmlDomMutationObserver" glib:get-type="gxml_dom_mutation_observer_get_type" glib:type-struct="DomMutationObserverIface">
		<prerequisite name="GObject.Object"/>
		<method name="observe" c:identifier="gxml_dom_mutation_observer_observe">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="observe" invoker="observe">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="disconnect" c:identifier="gxml_dom_mutation_observer_disconnect">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="disconnect" invoker="disconnect">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="take_records" c:identifier="gxml_dom_mutation_observer_take_records">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="take_records" invoker="take_records">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</type>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomMutationObserverIface" c:type="GXmlDomMutationObserverIface" glib:is-gtype-struct-for="DomMutationObserver">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="observe">
			<callback name="observe" c:type="observe">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
					</parameter>
					<parameter name="target" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="disconnect">
			<callback name="disconnect" c:type="disconnect">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="take_records">
			<callback name="take_records" c:type="take_records">
				<return-value transfer-ownership="full">
					<type name="Gee.List" c:type="GeeList*">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomMutationRecord" c:type="GXmlDomMutationRecord" glib:type-name="GXmlDomMutationRecord" glib:get-type="gxml_dom_mutation_record_get_type" glib:type-struct="DomMutationRecordIface">
		<prerequisite name="GObject.Object"/>
		<property name="mtype">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_mtype" c:identifier="gxml_dom_mutation_record_get_mtype">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_mtype" invoker="get_mtype">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="target">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_target" c:identifier="gxml_dom_mutation_record_get_target">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_target" invoker="get_target">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="added-nodes" writable="1">
			<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
		</property>
		<method name="get_added_nodes" c:identifier="gxml_dom_mutation_record_get_added_nodes">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
		</method>
		<virtual-method name="get_added_nodes" invoker="get_added_nodes">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
		</virtual-method>
		<method name="set_added_nodes" c:identifier="gxml_dom_mutation_record_set_added_nodes">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_added_nodes" invoker="set_added_nodes">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="removed-nodes" writable="1">
			<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
		</property>
		<method name="get_removed_nodes" c:identifier="gxml_dom_mutation_record_get_removed_nodes">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
		</method>
		<virtual-method name="get_removed_nodes" invoker="get_removed_nodes">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
		</virtual-method>
		<method name="set_removed_nodes" c:identifier="gxml_dom_mutation_record_set_removed_nodes">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_removed_nodes" invoker="set_removed_nodes">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="previous-sibling">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_previous_sibling" c:identifier="gxml_dom_mutation_record_get_previous_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_previous_sibling" invoker="get_previous_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="next-sibling">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_next_sibling" c:identifier="gxml_dom_mutation_record_get_next_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_next_sibling" invoker="get_next_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="attribute-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_name" c:identifier="gxml_dom_mutation_record_get_attribute_name">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_attribute_name" invoker="get_attribute_name">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="attribute-namespace">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_namespace" c:identifier="gxml_dom_mutation_record_get_attribute_namespace">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_attribute_namespace" invoker="get_attribute_namespace">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="old-value">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_old_value" c:identifier="gxml_dom_mutation_record_get_old_value">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_old_value" invoker="get_old_value">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomMutationRecordIface" c:type="GXmlDomMutationRecordIface" glib:is-gtype-struct-for="DomMutationRecord">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_mtype">
			<callback name="get_mtype" c:type="get_mtype">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_target">
			<callback name="get_target" c:type="get_target">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_added_nodes">
			<callback name="get_added_nodes" c:type="get_added_nodes">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_added_nodes">
			<callback name="set_added_nodes" c:type="set_added_nodes">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_removed_nodes">
			<callback name="get_removed_nodes" c:type="get_removed_nodes">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_removed_nodes">
			<callback name="set_removed_nodes" c:type="set_removed_nodes">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_previous_sibling">
			<callback name="get_previous_sibling" c:type="get_previous_sibling">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_next_sibling">
			<callback name="get_next_sibling" c:type="get_next_sibling">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_name">
			<callback name="get_attribute_name" c:type="get_attribute_name">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_namespace">
			<callback name="get_attribute_namespace" c:type="get_attribute_namespace">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_old_value">
			<callback name="get_old_value" c:type="get_old_value">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomNode" c:type="GXmlDomNode" glib:type-name="GXmlDomNode" glib:get-type="gxml_dom_node_get_type" glib:type-struct="DomNodeIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomEventTarget"/>
		<method name="has_child_nodes" c:identifier="gxml_dom_node_has_child_nodes">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="has_child_nodes" invoker="has_child_nodes">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="normalize" c:identifier="gxml_dom_node_normalize">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="normalize" invoker="normalize">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="is_equal_node" c:identifier="gxml_dom_node_is_equal_node">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="is_equal_node" invoker="is_equal_node">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="compare_document_position" c:identifier="gxml_dom_node_compare_document_position">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeDocumentPosition" c:type="GXmlDomNodeDocumentPosition"/>
			</return-value>
			<parameters>
				<parameter name="other" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="compare_document_position" invoker="compare_document_position">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeDocumentPosition" c:type="GXmlDomNodeDocumentPosition"/>
			</return-value>
			<parameters>
				<parameter name="other" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="contains" c:identifier="gxml_dom_node_contains">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="other" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="contains" invoker="contains">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="other" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="lookup_prefix" c:identifier="gxml_dom_node_lookup_prefix">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="nspace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="lookup_prefix" invoker="lookup_prefix">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="nspace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="lookup_namespace_uri" c:identifier="gxml_dom_node_lookup_namespace_uri">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="lookup_namespace_uri" invoker="lookup_namespace_uri">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="is_default_namespace" c:identifier="gxml_dom_node_is_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="nspace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="is_default_namespace" invoker="is_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="nspace" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="insert_before" c:identifier="gxml_dom_node_insert_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="child" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="insert_before" invoker="insert_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="child" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="append_child" c:identifier="gxml_dom_node_append_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="append_child" invoker="append_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="replace_child" c:identifier="gxml_dom_node_replace_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="child" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_child" invoker="replace_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="child" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_child" c:identifier="gxml_dom_node_remove_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="child" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_child" invoker="remove_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="child" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="clone_node" c:identifier="gxml_dom_node_clone_node">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="clone_node" invoker="clone_node">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<function name="copy" c:identifier="gxml_dom_node_copy">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</function>
		<property name="node-type">
			<type name="GXml.DomNodeNodeType" c:type="GXmlDomNodeNodeType"/>
		</property>
		<method name="get_node_type" c:identifier="gxml_dom_node_get_node_type">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNodeNodeType" c:type="GXmlDomNodeNodeType"/>
			</return-value>
		</method>
		<virtual-method name="get_node_type" invoker="get_node_type">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNodeNodeType" c:type="GXmlDomNodeNodeType"/>
			</return-value>
		</virtual-method>
		<property name="node-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_node_name" c:identifier="gxml_dom_node_get_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_node_name" invoker="get_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="base-uri">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_base_uri" c:identifier="gxml_dom_node_get_base_uri">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_base_uri" invoker="get_base_uri">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="owner-document" writable="1" construct="1">
			<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
		</property>
		<method name="get_owner_document" c:identifier="gxml_dom_node_get_owner_document">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
			</return-value>
		</method>
		<virtual-method name="get_owner_document" invoker="get_owner_document">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
			</return-value>
		</virtual-method>
		<method name="set_owner_document" c:identifier="gxml_dom_node_set_owner_document">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_owner_document" invoker="set_owner_document">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="parent-node">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_parent_node" c:identifier="gxml_dom_node_get_parent_node">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_parent_node" invoker="get_parent_node">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="parent-element">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_parent_element" c:identifier="gxml_dom_node_get_parent_element">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</method>
		<virtual-method name="get_parent_element" invoker="get_parent_element">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</virtual-method>
		<property name="child-nodes">
			<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
		</property>
		<method name="get_child_nodes" c:identifier="gxml_dom_node_get_child_nodes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
		</method>
		<virtual-method name="get_child_nodes" invoker="get_child_nodes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
		</virtual-method>
		<property name="first-child">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_first_child" c:identifier="gxml_dom_node_get_first_child">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_first_child" invoker="get_first_child">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="last-child">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_last_child" c:identifier="gxml_dom_node_get_last_child">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_last_child" invoker="get_last_child">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="previous-sibling">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_previous_sibling" c:identifier="gxml_dom_node_get_previous_sibling">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_previous_sibling" invoker="get_previous_sibling">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="next-sibling">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_next_sibling" c:identifier="gxml_dom_node_get_next_sibling">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_next_sibling" invoker="get_next_sibling">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="node-value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_node_value" c:identifier="gxml_dom_node_get_node_value">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_node_value" invoker="get_node_value">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_node_value" c:identifier="gxml_dom_node_set_node_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_node_value" invoker="set_node_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="text-content" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_text_content" c:identifier="gxml_dom_node_get_text_content">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_text_content" invoker="get_text_content">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_text_content" c:identifier="gxml_dom_node_set_text_content">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_text_content" invoker="set_text_content">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomNodeIface" c:type="GXmlDomNodeIface" glib:is-gtype-struct-for="DomNode">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="has_child_nodes">
			<callback name="has_child_nodes" c:type="has_child_nodes">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="normalize">
			<callback name="normalize" c:type="normalize">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="is_equal_node">
			<callback name="is_equal_node" c:type="is_equal_node">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none" allow-none="1">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="compare_document_position">
			<callback name="compare_document_position" c:type="compare_document_position">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNodeDocumentPosition" c:type="GXmlDomNodeDocumentPosition"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="other" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="contains">
			<callback name="contains" c:type="contains">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="other" transfer-ownership="none" allow-none="1">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="lookup_prefix">
			<callback name="lookup_prefix" c:type="lookup_prefix">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="nspace" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="lookup_namespace_uri">
			<callback name="lookup_namespace_uri" c:type="lookup_namespace_uri">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="prefix" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="is_default_namespace">
			<callback name="is_default_namespace" c:type="is_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="nspace" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="insert_before">
			<callback name="insert_before" c:type="insert_before" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="child" transfer-ownership="none" allow-none="1">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="append_child">
			<callback name="append_child" c:type="append_child" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="replace_child">
			<callback name="replace_child" c:type="replace_child" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="child" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_child">
			<callback name="remove_child" c:type="remove_child" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="child" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clone_node">
			<callback name="clone_node" c:type="clone_node">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="deep" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_node_type">
			<callback name="get_node_type" c:type="get_node_type">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNodeNodeType" c:type="GXmlDomNodeNodeType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_node_name">
			<callback name="get_node_name" c:type="get_node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_base_uri">
			<callback name="get_base_uri" c:type="get_base_uri">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_owner_document">
			<callback name="get_owner_document" c:type="get_owner_document">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_owner_document">
			<callback name="set_owner_document" c:type="set_owner_document">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" allow-none="1">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_parent_node">
			<callback name="get_parent_node" c:type="get_parent_node">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_parent_element">
			<callback name="get_parent_element" c:type="get_parent_element">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_child_nodes">
			<callback name="get_child_nodes" c:type="get_child_nodes">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_first_child">
			<callback name="get_first_child" c:type="get_first_child">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_last_child">
			<callback name="get_last_child" c:type="get_last_child">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_previous_sibling">
			<callback name="get_previous_sibling" c:type="get_previous_sibling">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_next_sibling">
			<callback name="get_next_sibling" c:type="get_next_sibling">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_node_value">
			<callback name="get_node_value" c:type="get_node_value">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_node_value">
			<callback name="set_node_value" c:type="set_node_value">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_text_content">
			<callback name="get_text_content" c:type="get_text_content">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_text_content">
			<callback name="set_text_content" c:type="set_text_content">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<enumeration name="DomNodeNodeType" c:type="GXmlDomNodeNodeType" glib:type-name="GXmlDomNodeNodeType" glib:get-type="gxml_dom_node_node_type_get_type">
		<member name="invalid" c:identifier="GXML_DOM_NODE_NODE_TYPE_INVALID" value="0"/>
		<member name="element_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_ELEMENT_NODE" value="1"/>
		<member name="attribute_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_ATTRIBUTE_NODE" value="0"/>
		<member name="text_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_TEXT_NODE" value="1"/>
		<member name="cdata_section_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_CDATA_SECTION_NODE" value="2"/>
		<member name="entity_reference_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_ENTITY_REFERENCE_NODE" value="3"/>
		<member name="entity_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_ENTITY_NODE" value="4"/>
		<member name="processing_instruction_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_PROCESSING_INSTRUCTION_NODE" value="5"/>
		<member name="comment_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_COMMENT_NODE" value="6"/>
		<member name="document_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_DOCUMENT_NODE" value="7"/>
		<member name="document_type_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_DOCUMENT_TYPE_NODE" value="8"/>
		<member name="document_fragment_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_DOCUMENT_FRAGMENT_NODE" value="9"/>
		<member name="notation_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_NOTATION_NODE" value="10"/>
	</enumeration>
	<bitfield name="DomNodeDocumentPosition" c:type="GXmlDomNodeDocumentPosition" glib:type-name="GXmlDomNodeDocumentPosition" glib:get-type="gxml_dom_node_document_position_get_type">
		<member name="none" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_NONE" value="1"/>
		<member name="disconnected" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_DISCONNECTED" value="2"/>
		<member name="preceding" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_PRECEDING" value="4"/>
		<member name="following" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_FOLLOWING" value="8"/>
		<member name="contains" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_CONTAINS" value="16"/>
		<member name="contained_by" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_CONTAINED_BY" value="32"/>
		<member name="implementation_specific" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC" value="64"/>
	</bitfield>
	<interface name="DomRange" c:type="GXmlDomRange" glib:type-name="GXmlDomRange" glib:get-type="gxml_dom_range_get_type" glib:type-struct="DomRangeIface">
		<prerequisite name="GObject.Object"/>
		<method name="set_start" c:identifier="gxml_dom_range_set_start" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_start" invoker="set_start" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_end" c:identifier="gxml_dom_range_set_end" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_end" invoker="set_end" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_start_before" c:identifier="gxml_dom_range_set_start_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_start_before" invoker="set_start_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_start_after" c:identifier="gxml_dom_range_set_start_after" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_start_after" invoker="set_start_after" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_end_before" c:identifier="gxml_dom_range_set_end_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_end_before" invoker="set_end_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_end_after" c:identifier="gxml_dom_range_set_end_after" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_end_after" invoker="set_end_after" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="collapse" c:identifier="gxml_dom_range_collapse" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="to_start" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="collapse" invoker="collapse" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="to_start" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="select_node" c:identifier="gxml_dom_range_select_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="select_node" invoker="select_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="select_node_contents" c:identifier="gxml_dom_range_select_node_contents" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="select_node_contents" invoker="select_node_contents" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="compare_boundary_points" c:identifier="gxml_dom_range_compare_boundary_points" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<parameter name="how" transfer-ownership="none">
					<type name="GXml.DomRangeBoundaryPoints" c:type="GXmlDomRangeBoundaryPoints"/>
				</parameter>
				<parameter name="sourceRange" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="compare_boundary_points" invoker="compare_boundary_points" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<parameter name="how" transfer-ownership="none">
					<type name="GXml.DomRangeBoundaryPoints" c:type="GXmlDomRangeBoundaryPoints"/>
				</parameter>
				<parameter name="sourceRange" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="delete_contents" c:identifier="gxml_dom_range_delete_contents" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="delete_contents" invoker="delete_contents" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="extract_contents" c:identifier="gxml_dom_range_extract_contents" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
		</method>
		<virtual-method name="extract_contents" invoker="extract_contents" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
		</virtual-method>
		<method name="clone_contents" c:identifier="gxml_dom_range_clone_contents" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
		</method>
		<virtual-method name="clone_contents" invoker="clone_contents" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
		</virtual-method>
		<method name="insert_node" c:identifier="gxml_dom_range_insert_node">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="insert_node" invoker="insert_node">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="surround_contents" c:identifier="gxml_dom_range_surround_contents">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="newParent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="surround_contents" invoker="surround_contents">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="newParent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="clone_range" c:identifier="gxml_dom_range_clone_range">
			<return-value transfer-ownership="full">
				<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
			</return-value>
		</method>
		<virtual-method name="clone_range" invoker="clone_range">
			<return-value transfer-ownership="full">
				<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
			</return-value>
		</virtual-method>
		<method name="detach" c:identifier="gxml_dom_range_detach">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="detach" invoker="detach">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="is_point_in_range" c:identifier="gxml_dom_range_is_point_in_range">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="is_point_in_range" invoker="is_point_in_range">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="compare_point" c:identifier="gxml_dom_range_compare_point">
			<return-value transfer-ownership="full">
				<type name="gshort" c:type="gshort"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="compare_point" invoker="compare_point">
			<return-value transfer-ownership="full">
				<type name="gshort" c:type="gshort"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="intersects_node" c:identifier="gxml_dom_range_intersects_node">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="intersects_node" invoker="intersects_node">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_dom_range_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="start-container">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_start_container" c:identifier="gxml_dom_range_get_start_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_start_container" invoker="get_start_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="start-offset">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_start_offset" c:identifier="gxml_dom_range_get_start_offset">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_start_offset" invoker="get_start_offset">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
		<property name="end-container">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_end_container" c:identifier="gxml_dom_range_get_end_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_end_container" invoker="get_end_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
		<property name="end-offset">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_end_offset" c:identifier="gxml_dom_range_get_end_offset">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_end_offset" invoker="get_end_offset">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
		<property name="collapsed">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_collapsed" c:identifier="gxml_dom_range_get_collapsed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_collapsed" invoker="get_collapsed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<property name="common-ancestor-container">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_common_ancestor_container" c:identifier="gxml_dom_range_get_common_ancestor_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_common_ancestor_container" invoker="get_common_ancestor_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="DomRangeIface" c:type="GXmlDomRangeIface" glib:is-gtype-struct-for="DomRange">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="set_start">
			<callback name="set_start" c:type="set_start" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_end">
			<callback name="set_end" c:type="set_end" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_start_before">
			<callback name="set_start_before" c:type="set_start_before" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_start_after">
			<callback name="set_start_after" c:type="set_start_after" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_end_before">
			<callback name="set_end_before" c:type="set_end_before" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_end_after">
			<callback name="set_end_after" c:type="set_end_after" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="collapse">
			<callback name="collapse" c:type="collapse" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="to_start" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="select_node">
			<callback name="select_node" c:type="select_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="select_node_contents">
			<callback name="select_node_contents" c:type="select_node_contents" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="compare_boundary_points">
			<callback name="compare_boundary_points" c:type="compare_boundary_points" throws="1">
				<return-value transfer-ownership="full">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="how" transfer-ownership="none">
						<type name="GXml.DomRangeBoundaryPoints" c:type="GXmlDomRangeBoundaryPoints"/>
					</parameter>
					<parameter name="sourceRange" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="delete_contents">
			<callback name="delete_contents" c:type="delete_contents" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="extract_contents">
			<callback name="extract_contents" c:type="extract_contents" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clone_contents">
			<callback name="clone_contents" c:type="clone_contents" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="insert_node">
			<callback name="insert_node" c:type="insert_node">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="surround_contents">
			<callback name="surround_contents" c:type="surround_contents">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="newParent" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clone_range">
			<callback name="clone_range" c:type="clone_range">
				<return-value transfer-ownership="full">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="detach">
			<callback name="detach" c:type="detach">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="is_point_in_range">
			<callback name="is_point_in_range" c:type="is_point_in_range">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="compare_point">
			<callback name="compare_point" c:type="compare_point">
				<return-value transfer-ownership="full">
					<type name="gshort" c:type="gshort"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="intersects_node">
			<callback name="intersects_node" c:type="intersects_node">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_start_container">
			<callback name="get_start_container" c:type="get_start_container">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_start_offset">
			<callback name="get_start_offset" c:type="get_start_offset">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_end_container">
			<callback name="get_end_container" c:type="get_end_container">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_end_offset">
			<callback name="get_end_offset" c:type="get_end_offset">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_collapsed">
			<callback name="get_collapsed" c:type="get_collapsed">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_common_ancestor_container">
			<callback name="get_common_ancestor_container" c:type="get_common_ancestor_container">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<enumeration name="DomRangeBoundaryPoints" c:type="GXmlDomRangeBoundaryPoints" glib:type-name="GXmlDomRangeBoundaryPoints" glib:get-type="gxml_dom_range_boundary_points_get_type">
		<member name="start_to_start" c:identifier="GXML_DOM_RANGE_BOUNDARY_POINTS_START_TO_START" value="0"/>
		<member name="start_to_end" c:identifier="GXML_DOM_RANGE_BOUNDARY_POINTS_START_TO_END" value="0"/>
		<member name="end_to_end" c:identifier="GXML_DOM_RANGE_BOUNDARY_POINTS_END_TO_END" value="1"/>
		<member name="end_to_start" c:identifier="GXML_DOM_RANGE_BOUNDARY_POINTS_END_TO_START" value="2"/>
	</enumeration>
	<interface name="XPathContext" c:type="GXmlXPathContext" glib:type-name="GXmlXPathContext" glib:get-type="gxml_xpath_context_get_type" glib:type-struct="XPathContextIface">
		<prerequisite name="GObject.Object"/>
		<method name="evaluate" c:identifier="gxml_xpath_context_evaluate" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
			</return-value>
			<parameters>
				<parameter name="expression" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="resolver" transfer-ownership="none" allow-none="1">
					<type name="Gee.List" c:type="GeeList*">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="evaluate" invoker="evaluate" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
			</return-value>
			<parameters>
				<parameter name="expression" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="resolver" transfer-ownership="none" allow-none="1">
					<type name="Gee.List" c:type="GeeList*">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</type>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="XPathContextIface" c:type="GXmlXPathContextIface" glib:is-gtype-struct-for="XPathContext">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="evaluate">
			<callback name="evaluate" c:type="evaluate" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathContext" c:type="GXmlXPathContext*"/>
					</parameter>
					<parameter name="expression" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="resolver" transfer-ownership="none" allow-none="1">
						<type name="Gee.List" c:type="GeeList*">
							<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="XPathObject" c:type="GXmlXPathObject" glib:type-name="GXmlXPathObject" glib:get-type="gxml_xpath_object_get_type" glib:type-struct="XPathObjectIface">
		<prerequisite name="GObject.Object"/>
		<property name="object-type">
			<type name="GXml.XPathObjectType" c:type="GXmlXPathObjectType"/>
		</property>
		<method name="get_object_type" c:identifier="gxml_xpath_object_get_object_type">
			<return-value transfer-ownership="none">
				<type name="GXml.XPathObjectType" c:type="GXmlXPathObjectType"/>
			</return-value>
		</method>
		<virtual-method name="get_object_type" invoker="get_object_type">
			<return-value transfer-ownership="none">
				<type name="GXml.XPathObjectType" c:type="GXmlXPathObjectType"/>
			</return-value>
		</virtual-method>
		<property name="boolean-value">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_boolean_value" c:identifier="gxml_xpath_object_get_boolean_value">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_boolean_value" invoker="get_boolean_value">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<property name="string-value">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_string_value" c:identifier="gxml_xpath_object_get_string_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_string_value" invoker="get_string_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="number-value">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_number_value" c:identifier="gxml_xpath_object_get_number_value">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<virtual-method name="get_number_value" invoker="get_number_value">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</virtual-method>
		<property name="nodeset">
			<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
		</property>
		<method name="get_nodeset" c:identifier="gxml_xpath_object_get_nodeset">
			<return-value transfer-ownership="none">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
		</method>
		<virtual-method name="get_nodeset" invoker="get_nodeset">
			<return-value transfer-ownership="none">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="XPathObjectIface" c:type="GXmlXPathObjectIface" glib:is-gtype-struct-for="XPathObject">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_object_type">
			<callback name="get_object_type" c:type="get_object_type">
				<return-value transfer-ownership="none">
					<type name="GXml.XPathObjectType" c:type="GXmlXPathObjectType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_boolean_value">
			<callback name="get_boolean_value" c:type="get_boolean_value">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_string_value">
			<callback name="get_string_value" c:type="get_string_value">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_number_value">
			<callback name="get_number_value" c:type="get_number_value">
				<return-value transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_nodeset">
			<callback name="get_nodeset" c:type="get_nodeset">
				<return-value transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="GomObject" c:type="GXmlGomObject" glib:type-name="GXmlGomObject" glib:get-type="gxml_gom_object_get_type" glib:type-struct="GomObjectIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomElement"/>
		<method name="use_nick_name" c:identifier="gxml_gom_object_use_nick_name">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="use_nick_name" invoker="use_nick_name">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="get_properties_list" c:identifier="gxml_gom_object_get_properties_list">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_properties_list" invoker="get_properties_list">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="get_object_properties_list" c:identifier="gxml_gom_object_get_object_properties_list">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_object_properties_list" invoker="get_object_properties_list">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="find_property_name" c:identifier="gxml_gom_object_find_property_name">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="nick" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_name" invoker="find_property_name">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="nick" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_property_element_list" c:identifier="gxml_gom_object_get_property_element_list">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_property_element_list" invoker="get_property_element_list">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="get_attribute" c:identifier="gxml_gom_object_get_attribute">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute" invoker="get_attribute">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute" c:identifier="gxml_gom_object_set_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute" invoker="set_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_child" c:identifier="gxml_gom_object_get_child">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_child" invoker="get_child">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_attribute" c:identifier="gxml_gom_object_remove_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_attribute" invoker="remove_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="GomObjectIface" c:type="GXmlGomObjectIface" glib:is-gtype-struct-for="GomObject">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="use_nick_name">
			<callback name="use_nick_name" c:type="use_nick_name">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomObject" c:type="GXmlGomObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_properties_list">
			<callback name="get_properties_list" c:type="get_properties_list">
				<return-value transfer-ownership="full">
					<type name="GLib.List" c:type="GList*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomObject" c:type="GXmlGomObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_object_properties_list">
			<callback name="get_object_properties_list" c:type="get_object_properties_list">
				<return-value transfer-ownership="full">
					<type name="GLib.List" c:type="GList*">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomObject" c:type="GXmlGomObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="find_property_name">
			<callback name="find_property_name" c:type="find_property_name">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomObject" c:type="GXmlGomObject*"/>
					</parameter>
					<parameter name="nick" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_property_element_list">
			<callback name="get_property_element_list" c:type="get_property_element_list">
				<return-value transfer-ownership="full">
					<type name="GLib.List" c:type="GList*">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomObject" c:type="GXmlGomObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute">
			<callback name="get_attribute" c:type="get_attribute">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomObject" c:type="GXmlGomObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute">
			<callback name="set_attribute" c:type="set_attribute">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomObject" c:type="GXmlGomObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="val" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_child">
			<callback name="get_child" c:type="get_child">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomObject" c:type="GXmlGomObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_attribute">
			<callback name="remove_attribute" c:type="remove_attribute">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomObject" c:type="GXmlGomObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="GomCollection" c:type="GXmlGomCollection" glib:type-name="GXmlGomCollection" glib:get-type="gxml_gom_collection_get_type" glib:type-struct="GomCollectionIface">
		<prerequisite name="GObject.Object"/>
		<method name="search" c:identifier="gxml_gom_collection_search" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="search" invoker="search" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="get_item" c:identifier="gxml_gom_collection_get_item" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_item" invoker="get_item" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="append" c:identifier="gxml_gom_collection_append" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="append" invoker="append" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="nodes-index">
			<type name="GLib.Queue" c:type="GQueue*">
				<type name="gint" c:type="gint"/>
			</type>
		</property>
		<method name="get_nodes_index" c:identifier="gxml_gom_collection_get_nodes_index">
			<return-value transfer-ownership="none">
				<type name="GLib.Queue" c:type="GQueue*">
					<type name="gint" c:type="gint"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_nodes_index" invoker="get_nodes_index">
			<return-value transfer-ownership="none">
				<type name="GLib.Queue" c:type="GQueue*">
					<type name="gint" c:type="gint"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="element" writable="1" construct="1">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_element" c:identifier="gxml_gom_collection_get_element">
			<return-value transfer-ownership="none">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</method>
		<virtual-method name="get_element" invoker="get_element">
			<return-value transfer-ownership="none">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
		</virtual-method>
		<method name="set_element" c:identifier="gxml_gom_collection_set_element">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_element" invoker="set_element">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="items-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_items_name" c:identifier="gxml_gom_collection_get_items_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_items_name" invoker="get_items_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="items-type" writable="1" construct="1">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_items_type" c:identifier="gxml_gom_collection_get_items_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<virtual-method name="get_items_type" invoker="get_items_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</virtual-method>
		<method name="set_items_type" c:identifier="gxml_gom_collection_set_items_type">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_items_type" invoker="set_items_type">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_gom_collection_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="GomCollectionIface" c:type="GXmlGomCollectionIface" glib:is-gtype-struct-for="GomCollection">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="search">
			<callback name="search" c:type="search" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomCollection" c:type="GXmlGomCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_item">
			<callback name="get_item" c:type="get_item" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomCollection" c:type="GXmlGomCollection*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="append">
			<callback name="append" c:type="append" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomCollection" c:type="GXmlGomCollection*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_nodes_index">
			<callback name="get_nodes_index" c:type="get_nodes_index">
				<return-value transfer-ownership="none">
					<type name="GLib.Queue" c:type="GQueue*">
						<type name="gint" c:type="gint"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomCollection" c:type="GXmlGomCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_element">
			<callback name="get_element" c:type="get_element">
				<return-value transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomCollection" c:type="GXmlGomCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_element">
			<callback name="set_element" c:type="set_element">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomCollection" c:type="GXmlGomCollection*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_items_name">
			<callback name="get_items_name" c:type="get_items_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomCollection" c:type="GXmlGomCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_items_type">
			<callback name="get_items_type" c:type="get_items_type">
				<return-value transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomCollection" c:type="GXmlGomCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_items_type">
			<callback name="set_items_type" c:type="set_items_type">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomCollection" c:type="GXmlGomCollection*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomCollection" c:type="GXmlGomCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="GomProperty" c:type="GXmlGomProperty" glib:type-name="GXmlGomProperty" glib:get-type="gxml_gom_property_get_type" glib:type-struct="GomPropertyIface">
		<prerequisite name="GObject.Object"/>
		<property name="attribute-name" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_name" c:identifier="gxml_gom_property_get_attribute_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_attribute_name" invoker="get_attribute_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_attribute_name" c:identifier="gxml_gom_property_set_attribute_name">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute_name" invoker="set_attribute_name">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_gom_property_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_gom_property_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="GomPropertyIface" c:type="GXmlGomPropertyIface" glib:is-gtype-struct-for="GomProperty">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_attribute_name">
			<callback name="get_attribute_name" c:type="get_attribute_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomProperty" c:type="GXmlGomProperty*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute_name">
			<callback name="set_attribute_name" c:type="set_attribute_name">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomProperty" c:type="GXmlGomProperty*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomProperty" c:type="GXmlGomProperty*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_value">
			<callback name="set_value" c:type="set_value">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GomProperty" c:type="GXmlGomProperty*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Parser" c:type="GXmlParser" glib:type-name="GXmlParser" glib:get-type="gxml_parser_get_type" glib:type-struct="ParserIface">
		<prerequisite name="GObject.Object"/>
		<method name="write_file" c:identifier="gxml_parser_write_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_file" invoker="write_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_string" c:identifier="gxml_parser_write_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="write_string" invoker="write_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="write_stream" c:identifier="gxml_parser_write_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_stream" invoker="write_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_file" c:identifier="gxml_parser_read_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_file" invoker="read_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_stream" c:identifier="gxml_parser_read_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_stream" invoker="read_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_string" c:identifier="gxml_parser_read_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_string" invoker="read_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="backup" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_backup" c:identifier="gxml_parser_get_backup">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_backup" invoker="get_backup">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_backup" c:identifier="gxml_parser_set_backup">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_backup" invoker="set_backup">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="indent" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_indent" c:identifier="gxml_parser_get_indent">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_indent" invoker="get_indent">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_indent" c:identifier="gxml_parser_set_indent">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_indent" invoker="set_indent">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="node">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_node" c:identifier="gxml_parser_get_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_node" invoker="get_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="ParserIface" c:type="GXmlParserIface" glib:is-gtype-struct-for="Parser">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="write_file">
			<callback name="write_file" c:type="write_file" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="file" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_string">
			<callback name="write_string" c:type="write_string" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_stream">
			<callback name="write_stream" c:type="write_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.OutputStream" c:type="GOutputStream*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_file">
			<callback name="read_file" c:type="read_file" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="file" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_stream">
			<callback name="read_stream" c:type="read_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.InputStream" c:type="GInputStream*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_string">
			<callback name="read_string" c:type="read_string" throws="1">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="str" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_backup">
			<callback name="get_backup" c:type="get_backup">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_backup">
			<callback name="set_backup" c:type="set_backup">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_indent">
			<callback name="get_indent" c:type="get_indent">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_indent">
			<callback name="set_indent" c:type="set_indent">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_node">
			<callback name="get_node" c:type="get_node">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<callback name="DomMutationCallback" c:type="GXmlDomMutationCallback">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="mutations" transfer-ownership="none">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</type>
			</parameter>
			<parameter name="observer" transfer-ownership="none">
				<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="2">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
</namespace>
</repository>
