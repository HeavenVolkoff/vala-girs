<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="3.0"/>
  <c:include name="nautilus-extension.h"/>
  <namespace name="Nautilus"
             version="3.0"
             shared-library="libnautilus-extension.so.1"
             c:identifier-prefixes="Nautilus"
             c:symbol-prefixes="nautilus">
    <alias name="ColumnProviderIface" c:type="NautilusColumnProviderIface">
      <type name="ColumnProviderInterface"
            c:type="NautilusColumnProviderInterface"/>
    </alias>
    <alias name="InfoProviderIface" c:type="NautilusInfoProviderIface">
      <type name="InfoProviderInterface"
            c:type="NautilusInfoProviderInterface"/>
    </alias>
    <alias name="LocationWidgetProviderIface"
           c:type="NautilusLocationWidgetProviderIface">
      <type name="LocationWidgetProviderInterface"
            c:type="NautilusLocationWidgetProviderInterface"/>
    </alias>
    <alias name="MenuProviderIface" c:type="NautilusMenuProviderIface">
      <type name="MenuProviderInterface"
            c:type="NautilusMenuProviderInterface"/>
    </alias>
    <alias name="PropertyPageProviderIface"
           c:type="NautilusPropertyPageProviderIface">
      <type name="PropertyPageProviderInterface"
            c:type="NautilusPropertyPageProviderInterface"/>
    </alias>
    <class name="Column"
           c:symbol-prefix="column"
           c:type="NautilusColumn"
           parent="GObject.Object"
           glib:type-name="NautilusColumn"
           glib:get-type="nautilus_column_get_type"
           glib:type-struct="ColumnClass">
      <constructor name="new" c:identifier="nautilus_column_new">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #NautilusColumn</doc>
          <type name="Column" c:type="NautilusColumn*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve">identifier of the column</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="attribute" transfer-ownership="none">
            <doc xml:space="preserve">the file attribute to be displayed in the column</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve">the user-visible label for the column</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve">a user-visible description of the column</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="attribute" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="attribute-q" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="default-sort-order"
                writable="1"
                transfer-ownership="none">
        <type name="Gtk.SortType"/>
      </property>
      <property name="description" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="label" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="xalign" writable="1" transfer-ownership="none">
        <type name="gfloat" c:type="gfloat"/>
      </property>
    </class>
    <record name="ColumnClass"
            c:type="NautilusColumnClass"
            glib:is-gtype-struct-for="Column">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="ColumnProvider"
               c:symbol-prefix="column_provider"
               c:type="NautilusColumnProvider"
               glib:type-name="NautilusColumnProvider"
               glib:get-type="nautilus_column_provider_get_type">
      <method name="get_columns"
              c:identifier="nautilus_column_provider_get_columns">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the provided #NautilusColumn objects</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Column"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusColumnProvider</doc>
            <type name="ColumnProvider" c:type="NautilusColumnProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
    </interface>
    <record name="ColumnProviderInterface"
            c:type="NautilusColumnProviderInterface">
      <doc xml:space="preserve">Interface for extensions to provide additional list view columns.</doc>
      <field name="g_iface" writable="1">
        <doc xml:space="preserve">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_columns" introspectable="0">
        <callback name="get_columns" introspectable="0">
          <return-value>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="ColumnProvider" c:type="NautilusColumnProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="File" c:type="NautilusFile" disguised="1">
    </record>
    <interface name="FileInfo"
               c:symbol-prefix="file_info"
               c:type="NautilusFileInfo"
               glib:type-name="NautilusFileInfo"
               glib:get-type="nautilus_file_info_get_type"
               glib:type-struct="FileInfoInterface">
      <function name="create" c:identifier="nautilus_file_info_create">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a #NautilusFileInfo</doc>
          <type name="FileInfo" c:type="NautilusFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve">the location to create the file info for</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_for_uri"
                c:identifier="nautilus_file_info_create_for_uri">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a #NautilusFileInfo</doc>
          <type name="FileInfo" c:type="NautilusFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve">the URI to lookup the file info for</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </function>
      <function name="list_copy" c:identifier="nautilus_file_info_list_copy">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a copy of @files.
 Use #nautilus_file_info_list_free to free the list and unref its contents.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="FileInfo"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="files" transfer-ownership="none">
            <doc xml:space="preserve">the files to copy</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="FileInfo"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="list_free" c:identifier="nautilus_file_info_list_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="files" transfer-ownership="none">
            <doc xml:space="preserve">a list created with #nautilus_file_info_list_copy</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="FileInfo"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="lookup" c:identifier="nautilus_file_info_lookup">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a #NautilusFileInfo</doc>
          <type name="FileInfo" c:type="NautilusFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve">the location for which to look up a corresponding #NautilusFileInfo object</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </function>
      <function name="lookup_for_uri"
                c:identifier="nautilus_file_info_lookup_for_uri">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a #NautilusFileInfo</doc>
          <type name="FileInfo" c:type="NautilusFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve">the URI to lookup the file info for</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="add_emblem" invoker="add_emblem">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
          <parameter name="emblem_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_string_attribute"
                      invoker="add_string_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
          <parameter name="attribute_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_write" invoker="can_write">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_activation_uri" invoker="get_activation_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_file_type" invoker="get_file_type">
        <return-value transfer-ownership="none">
          <type name="Gio.FileType" c:type="GFileType"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_location" invoker="get_location">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a #GFile for the location of @file_info</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusFileInfo</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mime_type" invoker="get_mime_type">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mount" invoker="get_mount">
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve">a #GMount for the mount of @file_info,
                                     or %NULL if @file_info has no mount</doc>
          <type name="Gio.Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusFileInfo</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_parent_info" invoker="get_parent_info">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the MIME type of @file_info</doc>
          <type name="FileInfo" c:type="NautilusFileInfo*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusFileInfo</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_parent_location" invoker="get_parent_location">
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve">a #GFile for the parent location of @file_info,
  or %NULL if @file_info has no parent</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusFileInfo</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_parent_uri" invoker="get_parent_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_string_attribute"
                      invoker="get_string_attribute">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
          <parameter name="attribute_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_uri" invoker="get_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_uri_scheme" invoker="get_uri_scheme">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="invalidate_extension_info"
                      invoker="invalidate_extension_info">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_directory" invoker="is_directory">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_gone" invoker="is_gone">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">whether the file has been deleted</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusFileInfo</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_mime_type" invoker="is_mime_type">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
          <parameter name="mime_type" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_emblem" c:identifier="nautilus_file_info_add_emblem">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
          <parameter name="emblem_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_string_attribute"
              c:identifier="nautilus_file_info_add_string_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
          <parameter name="attribute_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_write" c:identifier="nautilus_file_info_can_write">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_activation_uri"
              c:identifier="nautilus_file_info_get_activation_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_file_type"
              c:identifier="nautilus_file_info_get_file_type">
        <return-value transfer-ownership="none">
          <type name="Gio.FileType" c:type="GFileType"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="nautilus_file_info_get_location">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a #GFile for the location of @file_info</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusFileInfo</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime_type"
              c:identifier="nautilus_file_info_get_mime_type">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mount" c:identifier="nautilus_file_info_get_mount">
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve">a #GMount for the mount of @file_info,
                                     or %NULL if @file_info has no mount</doc>
          <type name="Gio.Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusFileInfo</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="nautilus_file_info_get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent_info"
              c:identifier="nautilus_file_info_get_parent_info">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the MIME type of @file_info</doc>
          <type name="FileInfo" c:type="NautilusFileInfo*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusFileInfo</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent_location"
              c:identifier="nautilus_file_info_get_parent_location">
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve">a #GFile for the parent location of @file_info,
  or %NULL if @file_info has no parent</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusFileInfo</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent_uri"
              c:identifier="nautilus_file_info_get_parent_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string_attribute"
              c:identifier="nautilus_file_info_get_string_attribute">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
          <parameter name="attribute_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uri" c:identifier="nautilus_file_info_get_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri_scheme"
              c:identifier="nautilus_file_info_get_uri_scheme">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="invalidate_extension_info"
              c:identifier="nautilus_file_info_invalidate_extension_info">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_directory"
              c:identifier="nautilus_file_info_is_directory">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_gone" c:identifier="nautilus_file_info_is_gone">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">whether the file has been deleted</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusFileInfo</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_mime_type"
              c:identifier="nautilus_file_info_is_mime_type">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </instance-parameter>
          <parameter name="mime_type" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="FileInfoInterface"
            c:type="NautilusFileInfoInterface"
            glib:is-gtype-struct-for="FileInfo">
      <doc xml:space="preserve">Interface for extensions to provide additional menu items.</doc>
      <field name="g_iface">
        <doc xml:space="preserve">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="is_gone">
        <callback name="is_gone">
          <return-value transfer-ownership="none">
            <doc xml:space="preserve">whether the file has been deleted</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <doc xml:space="preserve">a #NautilusFileInfo</doc>
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uri">
        <callback name="get_uri">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_parent_uri">
        <callback name="get_parent_uri">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uri_scheme">
        <callback name="get_uri_scheme">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mime_type">
        <callback name="get_mime_type">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_mime_type">
        <callback name="is_mime_type">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
            <parameter name="mime_type" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_directory">
        <callback name="is_directory">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_emblem">
        <callback name="add_emblem">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
            <parameter name="emblem_name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_string_attribute">
        <callback name="get_string_attribute">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
            <parameter name="attribute_name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_string_attribute">
        <callback name="add_string_attribute">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
            <parameter name="attribute_name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="invalidate_extension_info">
        <callback name="invalidate_extension_info">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_activation_uri">
        <callback name="get_activation_uri">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_file_type">
        <callback name="get_file_type">
          <return-value transfer-ownership="none">
            <type name="Gio.FileType" c:type="GFileType"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_location">
        <callback name="get_location">
          <return-value transfer-ownership="full">
            <doc xml:space="preserve">a #GFile for the location of @file_info</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <doc xml:space="preserve">a #NautilusFileInfo</doc>
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_parent_location">
        <callback name="get_parent_location">
          <return-value transfer-ownership="full" nullable="1">
            <doc xml:space="preserve">a #GFile for the parent location of @file_info,
  or %NULL if @file_info has no parent</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <doc xml:space="preserve">a #NautilusFileInfo</doc>
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_parent_info">
        <callback name="get_parent_info">
          <return-value transfer-ownership="full">
            <doc xml:space="preserve">the MIME type of @file_info</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <doc xml:space="preserve">a #NautilusFileInfo</doc>
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mount">
        <callback name="get_mount">
          <return-value transfer-ownership="full" nullable="1">
            <doc xml:space="preserve">a #GMount for the mount of @file_info,
                                     or %NULL if @file_info has no mount</doc>
            <type name="Gio.Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <doc xml:space="preserve">a #NautilusFileInfo</doc>
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_write">
        <callback name="can_write">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file_info" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="InfoProvider"
               c:symbol-prefix="info_provider"
               c:type="NautilusInfoProvider"
               glib:type-name="NautilusInfoProvider"
               glib:get-type="nautilus_info_provider_get_type">
      <function name="update_complete_invoke"
                c:identifier="nautilus_info_provider_update_complete_invoke">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="update_complete" transfer-ownership="none">
            <type name="GObject.Closure" c:type="GClosure*"/>
          </parameter>
          <parameter name="provider" transfer-ownership="none">
            <type name="InfoProvider" c:type="NautilusInfoProvider*"/>
          </parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="OperationHandle" c:type="NautilusOperationHandle*"/>
          </parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="OperationResult" c:type="NautilusOperationResult"/>
          </parameter>
        </parameters>
      </function>
      <method name="cancel_update"
              c:identifier="nautilus_info_provider_cancel_update">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <type name="InfoProvider" c:type="NautilusInfoProvider*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="OperationHandle" c:type="NautilusOperationHandle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_file_info"
              c:identifier="nautilus_info_provider_update_file_info">
        <return-value transfer-ownership="none">
          <type name="OperationResult" c:type="NautilusOperationResult"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <type name="InfoProvider" c:type="NautilusInfoProvider*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </parameter>
          <parameter name="update_complete" transfer-ownership="none">
            <type name="GObject.Closure" c:type="GClosure*"/>
          </parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="OperationHandle" c:type="NautilusOperationHandle**"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="InfoProviderInterface"
            c:type="NautilusInfoProviderInterface">
      <doc xml:space="preserve">Interface for extensions to provide additional information about files.</doc>
      <field name="g_iface" writable="1">
        <doc xml:space="preserve">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="update_file_info">
        <callback name="update_file_info">
          <return-value transfer-ownership="none">
            <type name="OperationResult" c:type="NautilusOperationResult"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="InfoProvider" c:type="NautilusInfoProvider*"/>
            </parameter>
            <parameter name="file" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
            <parameter name="update_complete" transfer-ownership="none">
              <type name="GObject.Closure" c:type="GClosure*"/>
            </parameter>
            <parameter name="handle" transfer-ownership="none">
              <type name="OperationHandle" c:type="NautilusOperationHandle**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="cancel_update">
        <callback name="cancel_update">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="InfoProvider" c:type="NautilusInfoProvider*"/>
            </parameter>
            <parameter name="handle" transfer-ownership="none">
              <type name="OperationHandle" c:type="NautilusOperationHandle*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="LocationWidgetProvider"
               c:symbol-prefix="location_widget_provider"
               c:type="NautilusLocationWidgetProvider"
               glib:type-name="NautilusLocationWidgetProvider"
               glib:get-type="nautilus_location_widget_provider_get_type">
      <method name="get_widget"
              c:identifier="nautilus_location_widget_provider_get_widget">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the location widget for @provider at @uri</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusLocationWidgetProvider</doc>
            <type name="LocationWidgetProvider"
                  c:type="NautilusLocationWidgetProvider*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve">the URI of the location</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve">parent #GtkWindow</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="LocationWidgetProviderInterface"
            c:type="NautilusLocationWidgetProviderInterface">
      <doc xml:space="preserve">Interface for extensions to provide additional location widgets.</doc>
      <field name="g_iface" writable="1">
        <doc xml:space="preserve">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_widget" introspectable="0">
        <callback name="get_widget" introspectable="0">
          <return-value>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="LocationWidgetProvider"
                    c:type="NautilusLocationWidgetProvider*"/>
            </parameter>
            <parameter name="uri" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="window" transfer-ownership="none">
              <type name="Gtk.Widget" c:type="GtkWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Menu"
           c:symbol-prefix="menu"
           c:type="NautilusMenu"
           parent="GObject.Object"
           glib:type-name="NautilusMenu"
           glib:get-type="nautilus_menu_get_type"
           glib:type-struct="MenuClass">
      <constructor name="new" c:identifier="nautilus_menu_new">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #NautilusMenu.</doc>
          <type name="Menu" c:type="NautilusMenu*"/>
        </return-value>
      </constructor>
      <method name="append_item" c:identifier="nautilus_menu_append_item">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="menu" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusMenu</doc>
            <type name="Menu" c:type="NautilusMenu*"/>
          </instance-parameter>
          <parameter name="item" transfer-ownership="full">
            <doc xml:space="preserve">a #NautilusMenuItem to append</doc>
            <type name="MenuItem" c:type="NautilusMenuItem*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_items" c:identifier="nautilus_menu_get_items">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the provided #NautilusMenuItem list</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="MenuItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="menu" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusMenu</doc>
            <type name="Menu" c:type="NautilusMenu*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="MenuClass"
            c:type="NautilusMenuClass"
            glib:is-gtype-struct-for="Menu">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="MenuItem"
           c:symbol-prefix="menu_item"
           c:type="NautilusMenuItem"
           parent="GObject.Object"
           glib:type-name="NautilusMenuItem"
           glib:get-type="nautilus_menu_item_get_type"
           glib:type-struct="MenuItemClass">
      <constructor name="new" c:identifier="nautilus_menu_item_new">
        <doc xml:space="preserve">Creates a new menu item that can be added to the toolbar or to a contextual menu.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #NautilusMenuItem</doc>
          <type name="MenuItem" c:type="NautilusMenuItem*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve">the identifier for the menu item</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve">the user-visible label of the menu item</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="tip" transfer-ownership="none">
            <doc xml:space="preserve">the tooltip of the menu item</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve">the name of the icon to display in the menu item</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="list_free" c:identifier="nautilus_menu_item_list_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="item_list" transfer-ownership="none">
            <doc xml:space="preserve">a list of #NautilusMenuItem</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="MenuItem"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="activate" invoker="activate">
        <doc xml:space="preserve">Emits #NautilusMenuItem::activate.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve">pointer to a #NautilusMenuItem</doc>
            <type name="MenuItem" c:type="NautilusMenuItem*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="activate" c:identifier="nautilus_menu_item_activate">
        <doc xml:space="preserve">Emits #NautilusMenuItem::activate.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve">pointer to a #NautilusMenuItem</doc>
            <type name="MenuItem" c:type="NautilusMenuItem*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_submenu" c:identifier="nautilus_menu_item_set_submenu">
        <doc xml:space="preserve">Attaches a menu to the given #NautilusMenuItem.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve">pointer to a #NautilusMenuItem</doc>
            <type name="MenuItem" c:type="NautilusMenuItem*"/>
          </instance-parameter>
          <parameter name="menu" transfer-ownership="full">
            <doc xml:space="preserve">pointer to a #NautilusMenu to attach to the button</doc>
            <type name="Menu" c:type="NautilusMenu*"/>
          </parameter>
        </parameters>
      </method>
      <property name="icon" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="label" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="menu" writable="1" transfer-ownership="none">
        <type name="Menu"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="priority" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="sensitive" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="tip" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="activate" when="last">
        <doc xml:space="preserve">Signals that the user has activated this menu item.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="MenuItemClass"
            c:type="NautilusMenuItemClass"
            glib:is-gtype-struct-for="MenuItem">
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="activate">
        <callback name="activate">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="item" transfer-ownership="none">
              <doc xml:space="preserve">pointer to a #NautilusMenuItem</doc>
              <type name="MenuItem" c:type="NautilusMenuItem*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="MenuProvider"
               c:symbol-prefix="menu_provider"
               c:type="NautilusMenuProvider"
               glib:type-name="NautilusMenuProvider"
               glib:get-type="nautilus_menu_provider_get_type">
      <method name="emit_items_updated_signal"
              c:identifier="nautilus_menu_provider_emit_items_updated_signal">
        <doc xml:space="preserve">Emits #NautilusMenuProvider::items-updated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusMenuProvider</doc>
            <type name="MenuProvider" c:type="NautilusMenuProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_background_items"
              c:identifier="nautilus_menu_provider_get_background_items">
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve">the provided list of #NautilusMenuItem.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="MenuItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusMenuProvider</doc>
            <type name="MenuProvider" c:type="NautilusMenuProvider*"/>
          </instance-parameter>
          <parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve">the parent #GtkWidget window</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="current_folder" transfer-ownership="none">
            <doc xml:space="preserve">the folder for which background items are requested</doc>
            <type name="FileInfo" c:type="NautilusFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_file_items"
              c:identifier="nautilus_menu_provider_get_file_items">
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve">the provided list of #NautilusMenuItem.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="MenuItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusMenuProvider</doc>
            <type name="MenuProvider" c:type="NautilusMenuProvider*"/>
          </instance-parameter>
          <parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve">the parent #GtkWidget window</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <doc xml:space="preserve">a list of #NautilusFileInfo</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="FileInfo"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="items-updated" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="MenuProviderInterface"
            c:type="NautilusMenuProviderInterface">
      <doc xml:space="preserve">Interface for extensions to provide additional menu items.</doc>
      <field name="g_iface" writable="1">
        <doc xml:space="preserve">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_file_items" introspectable="0">
        <callback name="get_file_items" introspectable="0">
          <return-value>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="MenuProvider" c:type="NautilusMenuProvider*"/>
            </parameter>
            <parameter name="window" transfer-ownership="none">
              <type name="Gtk.Widget" c:type="GtkWidget*"/>
            </parameter>
            <parameter name="files" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*">
                <type name="gpointer" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_background_items" introspectable="0">
        <callback name="get_background_items" introspectable="0">
          <return-value>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="MenuProvider" c:type="NautilusMenuProvider*"/>
            </parameter>
            <parameter name="window" transfer-ownership="none">
              <type name="Gtk.Widget" c:type="GtkWidget*"/>
            </parameter>
            <parameter name="current_folder" transfer-ownership="none">
              <type name="FileInfo" c:type="NautilusFileInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="OperationHandle"
            c:type="NautilusOperationHandle"
            disguised="1">
      <doc xml:space="preserve">Handle for asynchronous interfaces. These are opaque handles that must
be unique within an extension object. These are returned by operations
that return #NAUTILUS_OPERATION_IN_PROGRESS.</doc>
    </record>
    <enumeration name="OperationResult"
                 glib:type-name="NautilusOperationResult"
                 glib:get-type="nautilus_operation_result_get_type"
                 c:type="NautilusOperationResult">
      <doc xml:space="preserve">Return values for asynchronous operations performed by the extension.
See nautilus_info_provider_update_file_info().</doc>
      <member name="complete"
              value="0"
              c:identifier="NAUTILUS_OPERATION_COMPLETE"
              glib:nick="complete">
        <doc xml:space="preserve">the operation succeeded, and the extension
 is done with the request.</doc>
      </member>
      <member name="failed"
              value="1"
              c:identifier="NAUTILUS_OPERATION_FAILED"
              glib:nick="failed">
        <doc xml:space="preserve">the operation failed.</doc>
      </member>
      <member name="in_progress"
              value="2"
              c:identifier="NAUTILUS_OPERATION_IN_PROGRESS"
              glib:nick="in-progress">
        <doc xml:space="preserve">the extension has begin an async operation.
 When this value is returned, the extension must set the handle parameter
 and call the callback closure when the operation is complete.</doc>
      </member>
    </enumeration>
    <class name="PropertyPage"
           c:symbol-prefix="property_page"
           c:type="NautilusPropertyPage"
           parent="GObject.Object"
           glib:type-name="NautilusPropertyPage"
           glib:get-type="nautilus_property_page_get_type"
           glib:type-struct="PropertyPageClass">
      <constructor name="new" c:identifier="nautilus_property_page_new">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #NautilusPropertyPage</doc>
          <type name="PropertyPage" c:type="NautilusPropertyPage*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve">the identifier for the property page</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve">the user-visible label of the property page</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve">the property page to display</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="label" writable="1" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="page" writable="1" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
    </class>
    <record name="PropertyPageClass"
            c:type="NautilusPropertyPageClass"
            glib:is-gtype-struct-for="PropertyPage">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="PropertyPageProvider"
               c:symbol-prefix="property_page_provider"
               c:type="NautilusPropertyPageProvider"
               glib:type-name="NautilusPropertyPageProvider"
               glib:get-type="nautilus_property_page_provider_get_type">
      <method name="get_pages"
              c:identifier="nautilus_property_page_provider_get_pages">
        <doc xml:space="preserve">This function is called by Nautilus when it wants property page
items from the extension.

This function is called in the main thread before a property page
is shown, so it should return quickly.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A #GList of allocated #NautilusPropertyPage items.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="PropertyPage"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve">a #NautilusPropertyPageProvider</doc>
            <type name="PropertyPageProvider"
                  c:type="NautilusPropertyPageProvider*"/>
          </instance-parameter>
          <parameter name="files" transfer-ownership="none">
            <doc xml:space="preserve">a #GList of #NautilusFileInfo</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="FileInfo"/>
            </type>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="PropertyPageProviderInterface"
            c:type="NautilusPropertyPageProviderInterface">
      <doc xml:space="preserve">Interface for extensions to provide additional property pages.</doc>
      <field name="g_iface" writable="1">
        <doc xml:space="preserve">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_pages" introspectable="0">
        <callback name="get_pages" introspectable="0">
          <return-value>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <type name="PropertyPageProvider"
                    c:type="NautilusPropertyPageProvider*"/>
            </parameter>
            <parameter name="files" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*">
                <type name="gpointer" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <function name="file_info_create"
              c:identifier="nautilus_file_info_create"
              moved-to="FileInfo.create">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">a #NautilusFileInfo</doc>
        <type name="FileInfo" c:type="NautilusFileInfo*"/>
      </return-value>
      <parameters>
        <parameter name="location" transfer-ownership="none">
          <doc xml:space="preserve">the location to create the file info for</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_info_create_for_uri"
              c:identifier="nautilus_file_info_create_for_uri"
              moved-to="FileInfo.create_for_uri">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">a #NautilusFileInfo</doc>
        <type name="FileInfo" c:type="NautilusFileInfo*"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <doc xml:space="preserve">the URI to lookup the file info for</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_info_list_copy"
              c:identifier="nautilus_file_info_list_copy"
              moved-to="FileInfo.list_copy">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">a copy of @files.
 Use #nautilus_file_info_list_free to free the list and unref its contents.</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="FileInfo"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="files" transfer-ownership="none">
          <doc xml:space="preserve">the files to copy</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="FileInfo"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="file_info_list_free"
              c:identifier="nautilus_file_info_list_free"
              moved-to="FileInfo.list_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="files" transfer-ownership="none">
          <doc xml:space="preserve">a list created with #nautilus_file_info_list_copy</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="FileInfo"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="file_info_lookup"
              c:identifier="nautilus_file_info_lookup"
              moved-to="FileInfo.lookup">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">a #NautilusFileInfo</doc>
        <type name="FileInfo" c:type="NautilusFileInfo*"/>
      </return-value>
      <parameters>
        <parameter name="location" transfer-ownership="none">
          <doc xml:space="preserve">the location for which to look up a corresponding #NautilusFileInfo object</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_info_lookup_for_uri"
              c:identifier="nautilus_file_info_lookup_for_uri"
              moved-to="FileInfo.lookup_for_uri">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">a #NautilusFileInfo</doc>
        <type name="FileInfo" c:type="NautilusFileInfo*"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <doc xml:space="preserve">the URI to lookup the file info for</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="info_provider_update_complete_invoke"
              c:identifier="nautilus_info_provider_update_complete_invoke"
              moved-to="InfoProvider.update_complete_invoke">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="update_complete" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="provider" transfer-ownership="none">
          <type name="InfoProvider" c:type="NautilusInfoProvider*"/>
        </parameter>
        <parameter name="handle" transfer-ownership="none">
          <type name="OperationHandle" c:type="NautilusOperationHandle*"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="OperationResult" c:type="NautilusOperationResult"/>
        </parameter>
      </parameters>
    </function>
    <function name="module_initialize"
              c:identifier="nautilus_module_initialize">
      <doc xml:space="preserve">Called when the extension is begin loaded to register the types it exports
and to perform other initializations.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="module" transfer-ownership="none">
          <doc xml:space="preserve">a #GTypeModule used in type registration</doc>
          <type name="GObject.TypeModule" c:type="GTypeModule*"/>
        </parameter>
      </parameters>
    </function>
    <function name="module_list_types"
              c:identifier="nautilus_module_list_types">
      <doc xml:space="preserve">Called after the extension has been initialized and has registered all the
types it exports, to load them into Nautilus.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="types"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">array of GType *</doc>
          <array length="1" zero-terminated="0" c:type="const GType**">
            <type name="GType" c:type="GType*"/>
          </array>
        </parameter>
        <parameter name="num_types"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve">the number of types in the array</doc>
          <type name="gint" c:type="int*"/>
        </parameter>
      </parameters>
    </function>
    <function name="module_shutdown" c:identifier="nautilus_module_shutdown">
      <doc xml:space="preserve">Called when the extension is being unloaded.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
  </namespace>
</repository>
