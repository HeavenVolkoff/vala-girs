<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gtk" version="3.0"/>
  <package name="gladeui-2.0"/>
  <c:include name="gladeui/glade.h"/>
  <namespace name="Gladeui"
             version="2.0"
             shared-library="libgladeui-2.so.6"
             c:identifier-prefixes="Glade"
             c:symbol-prefixes="glade">
    <callback name="ActionActivateFunc" c:type="GladeActionActivateFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="477">This delagate function is used to catch actions from the core.</doc>
      <source-position filename="glade-widget-adaptor.h" line="486"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4108">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4109">The #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="action_path" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4110">The action identifier in the action tree</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ActionSubmenuFunc"
              c:type="GladeActionSubmenuFunc"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="506">This delagate function is used to create dynamically customized
submenus. Called only for actions that dont have children.</doc>
      <source-position filename="glade-widget-adaptor.h" line="516"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4161">A newly created #GtkMenu or %NULL</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4154">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4155">The #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="action_path" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4156">The action identifier in the action tree</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="AdaptorChooser"
           c:symbol-prefix="adaptor_chooser"
           c:type="GladeAdaptorChooser"
           parent="Gtk.Box"
           glib:type-name="GladeAdaptorChooser"
           glib:get-type="glade_adaptor_chooser_get_type"
           glib:type-struct="AdaptorChooserClass">
      <source-position filename="glade-adaptor-chooser.h" line="33"/>
      <implements name="Atk.Implementor"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="glade_adaptor_chooser_new">
        <source-position filename="glade-adaptor-chooser.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_project"
              c:identifier="glade_adaptor_chooser_get_project"
              introspectable="0">
        <source-position filename="glade-adaptor-chooser.h" line="39"/>
        <return-value>
          <type name="Project" c:type="GladeProject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="bar" transfer-ownership="none">
            <type name="AdaptorChooser" c:type="GladeAdaptorChooser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_project"
              c:identifier="glade_adaptor_chooser_set_project">
        <source-position filename="glade-adaptor-chooser.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="bar" transfer-ownership="none">
            <type name="AdaptorChooser" c:type="GladeAdaptorChooser*"/>
          </instance-parameter>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </method>
      <property name="project" writable="1" transfer-ownership="none">
        <type name="Project"/>
      </property>
    </class>
    <record name="AdaptorChooserClass"
            c:type="GladeAdaptorChooserClass"
            glib:is-gtype-struct-for="AdaptorChooser">
      <source-position filename="glade-adaptor-chooser.h" line="33"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <callback name="AddChildFunc" c:type="GladeAddChildFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="370">Called to add @child to @parent.</doc>
      <source-position filename="glade-widget-adaptor.h" line="378"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3528">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.h"
               line="373">A #GObject container</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3530">The #GObject child</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="AddChildVerifyFunc" c:type="GladeAddChildVerifyFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="337">Checks whether @child can be added to @parent.

If @user_feedback is %TRUE and @child cannot be
added then this shows a notification dialog to the user
explaining why.</doc>
      <source-position filename="glade-widget-adaptor.h" line="353"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3510">whether @child can be added to @parent.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3498">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3499">A #GObject container</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3500">A #GObject child</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="user_feedback" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3501">whether a notification dialog should be
presented in the case that the child cannot not be added.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </callback>
    <class name="App"
           c:symbol-prefix="app"
           c:type="GladeApp"
           parent="GObject.Object"
           glib:type-name="GladeApp"
           glib:get-type="glade_app_get_type"
           glib:type-struct="AppClass">
      <source-position filename="glade-app.h" line="67"/>
      <constructor name="new" c:identifier="glade_app_new">
        <source-position filename="glade-app.h" line="72"/>
        <return-value transfer-ownership="full">
          <type name="App" c:type="GladeApp*"/>
        </return-value>
      </constructor>
      <function name="add_project" c:identifier="glade_app_add_project">
        <source-position filename="glade-app.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </function>
      <function name="config_save" c:identifier="glade_app_config_save">
        <doc xml:space="preserve"
             filename="glade-app.c"
             line="514">Saves the GKeyFile to "g_get_user_config_dir()/GLADE_CONFIG_FILENAME"

Return 0 on success.</doc>
        <source-position filename="glade-app.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
      </function>
      <function name="do_event" c:identifier="glade_app_do_event">
        <doc xml:space="preserve"
             filename="glade-app.c"
             line="484">This function has to be called in an event handler for widget selection to work.
See gdk_event_handler_set()</doc>
        <source-position filename="glade-app.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-app.c"
               line="491">true if the event was handled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-app.c"
                 line="486">the event to process.</doc>
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get" c:identifier="glade_app_get" introspectable="0">
        <source-position filename="glade-app.h" line="73"/>
        <return-value>
          <type name="App" c:type="GladeApp*"/>
        </return-value>
      </function>
      <function name="get_accel_group"
                c:identifier="glade_app_get_accel_group"
                introspectable="0">
        <source-position filename="glade-app.h" line="96"/>
        <return-value>
          <type name="Gtk.AccelGroup" c:type="GtkAccelGroup*"/>
        </return-value>
      </function>
      <function name="get_bin_dir" c:identifier="glade_app_get_bin_dir">
        <source-position filename="glade-app.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </function>
      <function name="get_catalog"
                c:identifier="glade_app_get_catalog"
                introspectable="0">
        <source-position filename="glade-app.h" line="83"/>
        <return-value>
          <type name="Catalog" c:type="GladeCatalog*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_catalog_version"
                c:identifier="glade_app_get_catalog_version">
        <source-position filename="glade-app.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="major" transfer-ownership="none">
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="minor" transfer-ownership="none">
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_catalogs"
                c:identifier="glade_app_get_catalogs"
                introspectable="0">
        <source-position filename="glade-app.h" line="82"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-app.c"
               line="706">catalogs</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Catalog"/>
          </type>
        </return-value>
      </function>
      <function name="get_catalogs_dir"
                c:identifier="glade_app_get_catalogs_dir">
        <source-position filename="glade-app.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </function>
      <function name="get_clipboard"
                c:identifier="glade_app_get_clipboard"
                introspectable="0">
        <source-position filename="glade-app.h" line="84"/>
        <return-value>
          <type name="Clipboard" c:type="GladeClipboard*"/>
        </return-value>
      </function>
      <function name="get_config" c:identifier="glade_app_get_config">
        <source-position filename="glade-app.h" line="74"/>
        <return-value transfer-ownership="full">
          <type name="GLib.KeyFile" c:type="GKeyFile*"/>
        </return-value>
      </function>
      <function name="get_lib_dir" c:identifier="glade_app_get_lib_dir">
        <source-position filename="glade-app.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </function>
      <function name="get_locale_dir" c:identifier="glade_app_get_locale_dir">
        <source-position filename="glade-app.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </function>
      <function name="get_modules_dir"
                c:identifier="glade_app_get_modules_dir">
        <source-position filename="glade-app.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </function>
      <function name="get_pixmaps_dir"
                c:identifier="glade_app_get_pixmaps_dir">
        <source-position filename="glade-app.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </function>
      <function name="get_project_by_path"
                c:identifier="glade_app_get_project_by_path"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-app.c"
             line="756">Finds an open project with @path</doc>
        <source-position filename="glade-app.h" line="90"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-app.c"
               line="762">A #GladeProject, or NULL if no such open project was found</doc>
          <type name="Project" c:type="GladeProject*"/>
        </return-value>
        <parameters>
          <parameter name="project_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-app.c"
                 line="758">The path of an open project</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_projects"
                c:identifier="glade_app_get_projects"
                introspectable="0">
        <source-position filename="glade-app.h" line="88"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
      </function>
      <function name="get_window"
                c:identifier="glade_app_get_window"
                introspectable="0">
        <source-position filename="glade-app.h" line="93"/>
        <return-value>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </function>
      <function name="is_project_loaded"
                c:identifier="glade_app_is_project_loaded">
        <source-position filename="glade-app.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="project_path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="remove_project" c:identifier="glade_app_remove_project">
        <source-position filename="glade-app.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </function>
      <function name="search_docs" c:identifier="glade_app_search_docs">
        <source-position filename="glade-app.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="book" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="page" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="search" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_accel_group"
                c:identifier="glade_app_set_accel_group">
        <source-position filename="glade-app.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="accel_group" transfer-ownership="none">
            <type name="Gtk.AccelGroup" c:type="GtkAccelGroup*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_window" c:identifier="glade_app_set_window">
        <source-position filename="glade-app.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="window" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="AppPrivate" c:type="GladeAppPrivate*"/>
      </field>
      <glib:signal name="doc-search" when="last">
        <doc xml:space="preserve"
             filename="glade-app.c"
             line="427">Emitted when the glade core requests that a doc-search be performed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-app.c"
                 line="430">the (#gchar *) book to search or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="arg2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-app.c"
                 line="431">the (#gchar *) page to search or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="arg3" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-app.c"
                 line="432">the (#gchar *) search string or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="signal-editor-created" when="last">
        <doc xml:space="preserve"
             filename="glade-app.c"
             line="444">Emitted when a new signal editor created.
A tree view is created in the default handler.
Connect your handler before the default handler for setting a custom column or renderer
and after it for connecting to the tree view signals</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="signal_editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-app.c"
                 line="447">the new #GladeSignalEditor.</doc>
            <type name="GObject.Object"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="widget-adaptor-registered" when="last">
        <doc xml:space="preserve"
             filename="glade-app.c"
             line="462">Emitted when a new widget adaptor is registered.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-app.c"
                 line="465">the newlly registered #GladeWidgetAdaptor.</doc>
            <type name="GObject.Object"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="AppClass"
            c:type="GladeAppClass"
            glib:is-gtype-struct-for="App">
      <source-position filename="glade-app.h" line="67"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-app.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-app.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-app.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-app.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved5">
        <callback name="glade_reserved5">
          <source-position filename="glade-app.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved6">
        <callback name="glade_reserved6">
          <source-position filename="glade-app.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="AppPrivate" c:type="GladeAppPrivate" disguised="1">
      <source-position filename="glade-app.h" line="47"/>
    </record>
    <class name="BaseEditor"
           c:symbol-prefix="base_editor"
           c:type="GladeBaseEditor"
           parent="Gtk.Box"
           glib:type-name="GladeBaseEditor"
           glib:get-type="glade_base_editor_get_type"
           glib:type-struct="BaseEditorClass">
      <source-position filename="glade-base-editor.h" line="65"/>
      <implements name="Atk.Implementor"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="glade_base_editor_new"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="1723">Creates a new GladeBaseEditor with @container toplevel
support for all the object types indicated in the variable argument list.
Argument List:
  o The type name
  o The GType the editor will support</doc>
        <source-position filename="glade-base-editor.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-base-editor.c"
               line="1735">a new GladeBaseEditor.</doc>
          <type name="BaseEditor" c:type="GladeBaseEditor*"/>
        </return-value>
        <parameters>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1725">a container this new editor will edit.</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="main_editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1726">the custom #GladeEditable for @container, or %NULL
@... A NULL terminated list of gchar *, GType</doc>
            <type name="Editable" c:type="GladeEditable*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="build_child" introspectable="0">
        <source-position filename="glade-base-editor.h" line="55"/>
        <return-value>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="arg2" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="change_type">
        <source-position filename="glade-base-editor.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="arg2" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_selected">
        <source-position filename="glade-base-editor.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="delete_child">
        <source-position filename="glade-base-editor.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="arg2" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_display_name">
        <source-position filename="glade-base-editor.h" line="54"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move_child">
        <source-position filename="glade-base-editor.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="arg2" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_default_properties"
              c:identifier="glade_base_editor_add_default_properties">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="1849">Add @gchild name and type property to @editor

NOTE: This function is intended to be used in "child-selected" callbacks</doc>
        <source-position filename="glade-base-editor.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1851">a #GladeBaseEditor</doc>
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="gchild" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1852">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_editable"
              c:identifier="glade_base_editor_add_editable">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="1961">Add @gchild editor of type @page to the base editor

NOTE: This function is intended to be used in "child-selected" callbacks</doc>
        <source-position filename="glade-base-editor.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1963">a #GladeBaseEditor</doc>
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="gchild" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1964">the #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1965">the #GladeEditorPageType of the desired page for @gchild</doc>
            <type name="EditorPageType" c:type="GladeEditorPageType"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_label" c:identifier="glade_base_editor_add_label">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="2000">Adds a new label to @editor

NOTE: This function is intended to be used in "child-selected" callbacks</doc>
        <source-position filename="glade-base-editor.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="2002">a #GladeBaseEditor</doc>
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="2003">the label string</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_properties"
              c:identifier="glade_base_editor_add_properties"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="1920">Add @gchild properties to @editor

NOTE: This function is intended to be used in "child-selected" callbacks</doc>
        <source-position filename="glade-base-editor.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1922">a #GladeBaseEditor</doc>
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="gchild" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1923">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="packing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1924">whether we are adding packing properties or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1925">A NULL terminated list of properties names.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="append_types"
              c:identifier="glade_base_editor_append_types"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="1804">Appends support for all the object types indicated in the variable argument list.
Argument List:
  o The type name
  o The GType the editor will support for parents of type @type</doc>
        <source-position filename="glade-base-editor.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1806">A #GladeBaseEditor</doc>
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="parent_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1807">the parent type these child types will apply to
@... A NULL terminated list of gchar *, GType</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_new_window"
              c:identifier="glade_base_editor_pack_new_window"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="2072">This convenience function create a new dialog window and packs @editor in it.</doc>
        <source-position filename="glade-base-editor.h" line="97"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-base-editor.c"
               line="2080">the newly created window</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="2074">a #GladeBaseEditor</doc>
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="2075">the window title</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="help_markup" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="2076">the help text</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_signal_editor"
              c:identifier="glade_base_editor_set_show_signal_editor">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="2037">Shows/hide @editor 's signal editor</doc>
        <source-position filename="glade-base-editor.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="2039">a #GladeBaseEditor</doc>
            <type name="BaseEditor" c:type="GladeBaseEditor*"/>
          </instance-parameter>
          <parameter name="val" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="container" writable="1" transfer-ownership="none">
        <type name="GObject.Object"/>
      </property>
      <field name="parent">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="BaseEditorPrivate" c:type="GladeBaseEditorPrivate*"/>
      </field>
      <glib:signal name="build-child" when="last" introspectable="0">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="1652">Create a child widget here if something else must be done other than
calling glade_command_create() such as creating an intermediate parent.</doc>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-base-editor.c"
               line="1661">the newly created #GladeWidget or NULL if child cant be created</doc>
          <type name="GObject.Object"/>
        </return-value>
        <parameters>
          <parameter name="gparent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1655">the parent of the new child</doc>
            <type name="GObject.Object"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1656">the #GType of the child</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="change-type" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="child-selected" when="last">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="1600">Emited when the user selects a child in the editor's treeview.
You can add the relevant child properties here using
glade_base_editor_add_default_properties() and glade_base_editor_add_properties()
You can also add labels with glade_base_editor_add_label to make the
editor look pretty.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gchild" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1603">the selected #GladeWidget.</doc>
            <type name="GObject.Object"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="delete-child" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="gparent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1674">the parent</doc>
            <type name="GObject.Object"/>
          </parameter>
          <parameter name="gchild" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1675">the child to delete</doc>
            <type name="GObject.Object"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="get-display-name" when="last">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-base-editor.c"
               line="1641">a newly allocated string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="gchild" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1638">the child to get display name string to show in @gladebaseeditor
treeview.</doc>
            <type name="GObject.Object"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="move-child" when="last">
        <doc xml:space="preserve"
             filename="glade-base-editor.c"
             line="1686">Move child here if something else must be done other than cut &amp; paste.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-base-editor.c"
               line="1694">wheater child has been sucessfully moved or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="gparent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1689">the new parent of @gchild</doc>
            <type name="GObject.Object"/>
          </parameter>
          <parameter name="gchild" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-base-editor.c"
                 line="1690">the #GladeWidget to move</doc>
            <type name="GObject.Object"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="BaseEditorClass"
            c:type="GladeBaseEditorClass"
            glib:is-gtype-struct-for="BaseEditor">
      <source-position filename="glade-base-editor.h" line="65"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="child_selected">
        <callback name="child_selected">
          <source-position filename="glade-base-editor.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="BaseEditor" c:type="GladeBaseEditor*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="change_type">
        <callback name="change_type">
          <source-position filename="glade-base-editor.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="BaseEditor" c:type="GladeBaseEditor*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg2" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_display_name">
        <callback name="get_display_name">
          <source-position filename="glade-base-editor.h" line="54"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="BaseEditor" c:type="GladeBaseEditor*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="build_child" introspectable="0">
        <callback name="build_child" introspectable="0">
          <source-position filename="glade-base-editor.h" line="55"/>
          <return-value>
            <type name="Widget" c:type="GladeWidget*"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="BaseEditor" c:type="GladeBaseEditor*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg2" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delete_child">
        <callback name="delete_child">
          <source-position filename="glade-base-editor.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="BaseEditor" c:type="GladeBaseEditor*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg2" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move_child">
        <callback name="move_child">
          <source-position filename="glade-base-editor.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="BaseEditor" c:type="GladeBaseEditor*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg2" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-base-editor.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-base-editor.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-base-editor.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-base-editor.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved5">
        <callback name="glade_reserved5">
          <source-position filename="glade-base-editor.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved6">
        <callback name="glade_reserved6">
          <source-position filename="glade-base-editor.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BaseEditorPrivate"
            c:type="GladeBaseEditorPrivate"
            disguised="1">
      <source-position filename="glade-base-editor.h" line="38"/>
    </record>
    <record name="Catalog" c:type="GladeCatalog" disguised="1">
      <source-position filename="glade-catalog.h" line="36"/>
      <method name="get_adaptors"
              c:identifier="glade_catalog_get_adaptors"
              introspectable="0">
        <source-position filename="glade-catalog.h" line="74"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="849">the list of widget class adaptors</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="847">a catalog object</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_book" c:identifier="glade_catalog_get_book">
        <source-position filename="glade-catalog.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="751">The Devhelp search domain.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="749">a catalog object</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_domain" c:identifier="glade_catalog_get_domain">
        <source-position filename="glade-catalog.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="765">The domain to be used to translate strings from this catalog</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="763">a catalog object</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_prefix"
              c:identifier="glade_catalog_get_icon_prefix">
        <source-position filename="glade-catalog.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="779">The prefix for icons.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="777">a catalog object</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_major_version"
              c:identifier="glade_catalog_get_major_version">
        <source-position filename="glade-catalog.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="793">The catalog version</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="791">a catalog object</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_minor_version"
              c:identifier="glade_catalog_get_minor_version">
        <source-position filename="glade-catalog.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="807">The catalog minor version</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="805">a catalog object</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="glade_catalog_get_name">
        <source-position filename="glade-catalog.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="723">The symbolic catalog name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="721">a catalog object</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_prefix" c:identifier="glade_catalog_get_prefix">
        <source-position filename="glade-catalog.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="737">The catalog path prefix.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="735">a catalog object</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_targets"
              c:identifier="glade_catalog_get_targets"
              introspectable="0">
        <source-position filename="glade-catalog.h" line="67"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="821">the list of suitable version targets.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="819">a catalog object</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_widget_groups"
              c:identifier="glade_catalog_get_widget_groups"
              introspectable="0">
        <source-position filename="glade-catalog.h" line="72"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="835">the list of widget groups (palette)</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="833">a catalog object</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="add_path" c:identifier="glade_catalog_add_path">
        <doc xml:space="preserve"
             filename="glade-catalog.c"
             line="569">Adds a new path to the list of path to look catalogs for.</doc>
        <source-position filename="glade-catalog.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="destroy_all" c:identifier="glade_catalog_destroy_all">
        <doc xml:space="preserve"
             filename="glade-catalog.c"
             line="873">Destroy and free all resources related with every loaded catalog.</doc>
        <source-position filename="glade-catalog.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="get_extra_paths"
                c:identifier="glade_catalog_get_extra_paths"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-catalog.c"
             line="607">Returns a list paths added by glade_catalog_add_path()</doc>
        <source-position filename="glade-catalog.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="GLib.List" c:type="const GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
      </function>
      <function name="is_loaded" c:identifier="glade_catalog_is_loaded">
        <source-position filename="glade-catalog.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="863">Whether @name is loaded or not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="861">a catalog object</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="load_all"
                c:identifier="glade_catalog_load_all"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-catalog.c"
             line="618">Loads all available catalogs in the system.
First loads catalogs from GLADE_ENV_CATALOG_PATH,
then from glade_app_get_catalogs_dir() and finally from paths specified with
glade_catalog_add_path()</doc>
        <source-position filename="glade-catalog.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="626">the list of loaded GladeCatalog *</doc>
          <type name="GLib.List" c:type="const GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
      </function>
      <function name="remove_path" c:identifier="glade_catalog_remove_path">
        <doc xml:space="preserve"
             filename="glade-catalog.c"
             line="584">Remove path from the list of path to look catalogs for.
NULL to remove all paths.</doc>
        <source-position filename="glade-catalog.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <callback name="CatalogInitFunc" c:type="GladeCatalogInitFunc">
      <doc xml:space="preserve"
           filename="glade-catalog.h"
           line="40">Called once at glade startup time for every catalog, catalogs
are initialized in order of dependancies.</doc>
      <source-position filename="glade-catalog.h" line="47"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.h"
               line="42">The name of the catalog</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="CellRendererIcon"
           c:symbol-prefix="cell_renderer_icon"
           c:type="GladeCellRendererIcon"
           parent="Gtk.CellRendererPixbuf"
           glib:type-name="GladeCellRendererIcon"
           glib:get-type="glade_cell_renderer_icon_get_type"
           glib:type-struct="CellRendererIconClass">
      <source-position filename="glade-cell-renderer-icon.h" line="55"/>
      <constructor name="new" c:identifier="glade_cell_renderer_icon_new">
        <source-position filename="glade-cell-renderer-icon.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </return-value>
      </constructor>
      <virtual-method name="activate">
        <source-position filename="glade-cell-renderer-icon.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cell_renderer_icon"
                              transfer-ownership="none">
            <type name="CellRendererIcon" c:type="GladeCellRendererIcon*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_activatable"
              c:identifier="glade_cell_renderer_icon_get_activatable">
        <source-position filename="glade-cell-renderer-icon.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <type name="CellRendererIcon" c:type="GladeCellRendererIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_active"
              c:identifier="glade_cell_renderer_icon_get_active">
        <source-position filename="glade-cell-renderer-icon.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <type name="CellRendererIcon" c:type="GladeCellRendererIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_activatable"
              c:identifier="glade_cell_renderer_icon_set_activatable">
        <source-position filename="glade-cell-renderer-icon.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <type name="CellRendererIcon" c:type="GladeCellRendererIcon*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_active"
              c:identifier="glade_cell_renderer_icon_set_active">
        <source-position filename="glade-cell-renderer-icon.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <type name="CellRendererIcon" c:type="GladeCellRendererIcon*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="activatable" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="active" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="Gtk.CellRendererPixbuf" c:type="GtkCellRendererPixbuf"/>
      </field>
      <field name="priv">
        <type name="CellRendererIconPrivate"
              c:type="GladeCellRendererIconPrivate*"/>
      </field>
      <glib:signal name="activate" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CellRendererIconClass"
            c:type="GladeCellRendererIconClass"
            glib:is-gtype-struct-for="CellRendererIcon">
      <source-position filename="glade-cell-renderer-icon.h" line="55"/>
      <field name="parent_class">
        <type name="Gtk.CellRendererPixbufClass"
              c:type="GtkCellRendererPixbufClass"/>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="glade-cell-renderer-icon.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell_renderer_icon" transfer-ownership="none">
              <type name="CellRendererIcon" c:type="GladeCellRendererIcon*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="CellRendererIconPrivate"
            c:type="GladeCellRendererIconPrivate"
            disguised="1">
      <source-position filename="glade-cell-renderer-icon.h" line="40"/>
    </record>
    <callback name="ChildActionActivateFunc"
              c:type="GladeChildActionActivateFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="490">This delagate function is used to catch packing actions from the core.</doc>
      <source-position filename="glade-widget-adaptor.h" line="500"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4129">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="container" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.h"
               line="493">The #GtkContainer</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4130">The #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="action_path" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4131">The action identifier in the action tree</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ChildGetPropertyFunc" c:type="GladeChildGetPropertyFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="298">Called to get the packing property @property_name
on the @child object of @container into @value.</doc>
      <source-position filename="glade-widget-adaptor.h" line="309"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3665">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="container" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3666">The #GObject container</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3667">The #GObject child</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3668">The id of the property</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3669">The @GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ChildSetPropertyFunc" c:type="GladeChildSetPropertyFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="281">Called to set the packing property @property_name to @value
on the @child object of @container.</doc>
      <source-position filename="glade-widget-adaptor.h" line="292"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3630">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="container" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3631">The #GObject container</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3632">The #GObject child</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3633">The id of the property</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3634">The @GValue</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ChildVerifyPropertyFunc"
              c:type="GladeChildVerifyPropertyFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="315">This delagate function is always called whenever setting any
properties with the exception of load time, and copy/paste time
(basicly the two places where we recreate a hierarchy that we
already know "works") its basicly an optional backend provided
boundry checker for properties.</doc>
      <source-position filename="glade-widget-adaptor.h" line="331"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3708">whether or not its OK to set @value on @object, this function
will silently return TRUE if the class did not provide a verify function.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3696">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="container" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3697">The #GObject container</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3698">The #GObject child</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3699">The id of the property</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3700">The @GValue</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Clipboard"
           c:symbol-prefix="clipboard"
           c:type="GladeClipboard"
           parent="GObject.Object"
           glib:type-name="GladeClipboard"
           glib:get-type="glade_clipboard_get_type"
           glib:type-struct="ClipboardClass">
      <source-position filename="glade-clipboard.h" line="31"/>
      <constructor name="new" c:identifier="glade_clipboard_new">
        <source-position filename="glade-clipboard.h" line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-clipboard.c"
               line="146">a new #GladeClipboard object</doc>
          <type name="Clipboard" c:type="GladeClipboard*"/>
        </return-value>
      </constructor>
      <method name="add" c:identifier="glade_clipboard_add" introspectable="0">
        <doc xml:space="preserve"
             filename="glade-clipboard.c"
             line="154">Adds @widgets to @clipboard.
This increases the reference count of each #GladeWidget in @widgets.</doc>
        <source-position filename="glade-clipboard.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="clipboard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-clipboard.c"
                 line="156">a #GladeClipboard</doc>
            <type name="Clipboard" c:type="GladeClipboard*"/>
          </instance-parameter>
          <parameter name="widgets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-clipboard.c"
                 line="157">a #GList of #GladeWidgets</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="clear" c:identifier="glade_clipboard_clear">
        <doc xml:space="preserve"
             filename="glade-clipboard.c"
             line="185">Removes all widgets from the @clipboard.</doc>
        <source-position filename="glade-clipboard.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="clipboard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-clipboard.c"
                 line="187">a #GladeClipboard</doc>
            <type name="Clipboard" c:type="GladeClipboard*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_selection"
              c:identifier="glade_clipboard_get_has_selection">
        <source-position filename="glade-clipboard.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-clipboard.c"
               line="124">TRUE if this clipboard has selected items to paste.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="clipboard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-clipboard.c"
                 line="122">a #GladeClipboard</doc>
            <type name="Clipboard" c:type="GladeClipboard*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="widgets"
              c:identifier="glade_clipboard_widgets"
              introspectable="0">
        <source-position filename="glade-clipboard.h" line="42"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="clipboard" transfer-ownership="none">
            <type name="Clipboard" c:type="GladeClipboard*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="has-selection" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ClipboardPrivate" c:type="GladeClipboardPrivate*"/>
      </field>
    </class>
    <record name="ClipboardClass"
            c:type="GladeClipboardClass"
            glib:is-gtype-struct-for="Clipboard">
      <source-position filename="glade-clipboard.h" line="31"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-clipboard.h" line="27"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-clipboard.h" line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-clipboard.h" line="29"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-clipboard.h" line="30"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ClipboardPrivate"
            c:type="GladeClipboardPrivate"
            disguised="1">
      <source-position filename="glade-clipboard.h" line="14"/>
    </record>
    <class name="Command"
           c:symbol-prefix="command"
           c:type="GladeCommand"
           parent="GObject.Object"
           glib:type-name="GladeCommand"
           glib:get-type="glade_command_get_type"
           glib:type-struct="CommandClass">
      <source-position filename="glade-command.h" line="62"/>
      <function name="add" c:identifier="glade_command_add" introspectable="0">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="1199">@widgets (element-type GladeWidget): a #Glist
Performs an add command on all widgets in @widgets to @parent, possibly
replacing @placeholder (note toplevels dont need a parent; the active project
will be used when pasting toplevel objects).
Pasted widgets will persist packing properties from thier cut/copy source
while newly added widgets will prefer packing defaults.</doc>
        <source-position filename="glade-command.h" line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="widgets" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="1202">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="placeholder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="1203">a #GladePlaceholder</doc>
            <type name="Placeholder" c:type="GladePlaceholder*"/>
          </parameter>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="pasting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="1204">whether we are pasting an existing widget or creating a new one.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <function name="add_signal" c:identifier="glade_command_add_signal">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="2167">TODO: write me</doc>
        <source-position filename="glade-command.h" line="162"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="glade_widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2169">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2170">a #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </parameter>
        </parameters>
      </function>
      <function name="change_signal"
                c:identifier="glade_command_change_signal">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="2196">TODO: write me</doc>
        <source-position filename="glade-command.h" line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="glade_widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2198">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="old_signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2199">a #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </parameter>
          <parameter name="new_signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2200">a #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create"
                c:identifier="glade_command_create"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="1790">Creates a new widget using @adaptor and put in place of the @placeholder
in the @project</doc>
        <source-position filename="glade-command.h" line="142"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-command.c"
               line="1800">the newly created widget.</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="1792">A #GladeWidgetAdaptor
@parent (allow-none): the parent #GladeWidget to add the new widget to.
@placeholder (allow-none): the placeholder which will be substituted by the widget</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="placeholder" transfer-ownership="none">
            <type name="Placeholder" c:type="GladePlaceholder*"/>
          </parameter>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="1795">the project his widget belongs to.</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </function>
      <function name="cut" c:identifier="glade_command_cut" introspectable="0">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="1864">@widgets (element-type GladeWidget): a #GList of #GladeWidgets
Removes the list of widgets and adds them to the clipboard.</doc>
        <source-position filename="glade-command.h" line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="widgets" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="delete"
                c:identifier="glade_command_delete"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="1843">@widgets (element-type GladeWidget): a #GList of #GladeWidgets
Performs a delete command on the list of widgets.</doc>
        <source-position filename="glade-command.h" line="140"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="widgets" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="dnd" c:identifier="glade_command_dnd" introspectable="0">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="1996">@widgets (element-type GladeWidget): a #GList of #GladeWidget
@parent (allow-none): a #GladeWidget
@placeholder (allow-none): a #GladePlaceholder
Performs a drag-n-drop command, i.e. removes the list of widgets and adds them
to the new parent, possibly replacing @placeholder (note toplevels dont need a
parent; the active project will be used when pasting toplevel objects).</doc>
        <source-position filename="glade-command.h" line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="widgets" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="placeholder" transfer-ownership="none">
            <type name="Placeholder" c:type="GladePlaceholder*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_group_depth"
                c:identifier="glade_command_get_group_depth">
        <source-position filename="glade-command.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
      </function>
      <function name="lock_widget" c:identifier="glade_command_lock_widget">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="2464">Sets @locked to be in a locked up state
spoken for by @widget, locked widgets cannot
be removed from the project until unlocked.</doc>
        <source-position filename="glade-command.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2466">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="lock" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </function>
      <function name="paste"
                c:identifier="glade_command_paste"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="1953">@widgets (element-type GladeWidget): a #GList of #GladeWidget
@parent (allow-none): a #GladeWidget
@placeholder (allow-none): a #GladePlaceholder
Performs a paste command on all widgets in @widgets to @parent, possibly
replacing @placeholder (note toplevels dont need a parent; the active project
will be used when pasting toplevel objects).</doc>
        <source-position filename="glade-command.h" line="151"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="widgets" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="placeholder" transfer-ownership="none">
            <type name="Placeholder" c:type="GladePlaceholder*"/>
          </parameter>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </function>
      <function name="pop_group" c:identifier="glade_command_pop_group">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="314">Mark the end of a command group.</doc>
        <source-position filename="glade-command.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="push_group"
                c:identifier="glade_command_push_group"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="288">Marks the begining of a group.</doc>
        <source-position filename="glade-command.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fmt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="290">The collective desctiption of the command group.
              only the description of the first group on the
              stack is used when embedding groups.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="293">args to the format string.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </function>
      <function name="remove_signal"
                c:identifier="glade_command_remove_signal">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="2181">TODO: write me</doc>
        <source-position filename="glade-command.h" line="165"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="glade_widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2183">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2184">a #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_i18n" c:identifier="glade_command_set_i18n">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="2335">Sets the i18n data on the property.</doc>
        <source-position filename="glade-command.h" line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2337">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
          <parameter name="translatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2338">a #gboolean</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2339">a #const gchar *</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="comment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2340">a #const gchar *</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_name" c:identifier="glade_command_set_name">
        <source-position filename="glade-command.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="glade_widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_project_domain"
                c:identifier="glade_command_set_project_domain">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="2987">Sets @domain as the translation domain for @project.</doc>
        <source-position filename="glade-command.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2989">A #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2990">The translation domain for @project</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_project_license"
                c:identifier="glade_command_set_project_license">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="2925">Sets the license agreement for @project. It will be saved in the xml as comment.</doc>
        <source-position filename="glade-command.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2927">A #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="license" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2928">License of @project</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_project_resource_path"
                c:identifier="glade_command_set_project_resource_path">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="2956">Sets a resource path @project.</doc>
        <source-position filename="glade-command.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2958">A #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2959">path to load resources from.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_project_target"
                c:identifier="glade_command_set_project_target">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="2658">Sets the target of @catalog to @major.@minor in @project.</doc>
        <source-position filename="glade-command.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2660">A #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2661">The name of the catalog to set the project's target for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="major" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2662">The new major version of @catalog to target</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="minor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2663">The new minor version of @catalog to target</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_project_template"
                c:identifier="glade_command_set_project_template">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="3027">Sets @widget to be the template widget in @project.</doc>
        <source-position filename="glade-command.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="3029">A #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="3030">The #GladeWidget to make template</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_properties"
                c:identifier="glade_command_set_properties"
                introspectable="0">
        <source-position filename="glade-command.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
          <parameter name="old_value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
          <parameter name="new_value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <varargs/>
          </parameter>
        </parameters>
      </function>
      <function name="set_properties_list"
                c:identifier="glade_command_set_properties_list"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="839">@props (element-type GladeProperty): List of #GladeProperty</doc>
        <source-position filename="glade-command.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="props" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="set_property"
                c:identifier="glade_command_set_property"
                introspectable="0">
        <source-position filename="glade-command.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <varargs/>
          </parameter>
        </parameters>
      </function>
      <function name="set_property_enabled"
                c:identifier="glade_command_set_property_enabled">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="464">Enables or disables @property.

@property must be an optional property.</doc>
        <source-position filename="glade-command.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="466">An optional #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="467">Whether the property should be enabled</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_property_value"
                c:identifier="glade_command_set_property_value">
        <source-position filename="glade-command.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </function>
      <function name="unlock_widget"
                c:identifier="glade_command_unlock_widget">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="2507">Unlocks @widget so that it can be removed
from the project again</doc>
        <source-position filename="glade-command.h" line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="2509">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="collapse" invoker="collapse">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="273">Merges @other into @command, so that @command now
covers both commands and @other can be dispensed with.</doc>
        <source-position filename="glade-command.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="this_cmd" transfer-ownership="none">
            <type name="Command" c:type="GladeCommand*"/>
          </instance-parameter>
          <parameter name="other_cmd" transfer-ownership="none">
            <type name="Command" c:type="GladeCommand*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="execute" invoker="execute">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="218">Executes @command</doc>
        <source-position filename="glade-command.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-command.c"
               line="224">whether the command was successfully executed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="this_cmd" transfer-ownership="none">
            <type name="Command" c:type="GladeCommand*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="undo" invoker="undo">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="234">Undo the effects of @command</doc>
        <source-position filename="glade-command.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-command.c"
               line="240">whether the command was successfully reversed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="this_cmd" transfer-ownership="none">
            <type name="Command" c:type="GladeCommand*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unifies" invoker="unifies">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="249">Checks whether @command and @other can be unified
to make one single command.</doc>
        <source-position filename="glade-command.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-command.c"
               line="257">whether they can be unified.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="this_cmd" transfer-ownership="none">
            <type name="Command" c:type="GladeCommand*"/>
          </instance-parameter>
          <parameter name="other_cmd" transfer-ownership="none">
            <type name="Command" c:type="GladeCommand*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="collapse" c:identifier="glade_command_collapse">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="273">Merges @other into @command, so that @command now
covers both commands and @other can be dispensed with.</doc>
        <source-position filename="glade-command.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="275">A #GladeCommand</doc>
            <type name="Command" c:type="GladeCommand*"/>
          </instance-parameter>
          <parameter name="other" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="276">another #GladeCommand</doc>
            <type name="Command" c:type="GladeCommand*"/>
          </parameter>
        </parameters>
      </method>
      <method name="description" c:identifier="glade_command_description">
        <source-position filename="glade-command.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="command" transfer-ownership="none">
            <type name="Command" c:type="GladeCommand*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="execute" c:identifier="glade_command_execute">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="218">Executes @command</doc>
        <source-position filename="glade-command.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-command.c"
               line="224">whether the command was successfully executed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="220">A #GladeCommand</doc>
            <type name="Command" c:type="GladeCommand*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="group_id" c:identifier="glade_command_group_id">
        <source-position filename="glade-command.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="command" transfer-ownership="none">
            <type name="Command" c:type="GladeCommand*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="undo" c:identifier="glade_command_undo">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="234">Undo the effects of @command</doc>
        <source-position filename="glade-command.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-command.c"
               line="240">whether the command was successfully reversed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="236">A #GladeCommand</doc>
            <type name="Command" c:type="GladeCommand*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unifies" c:identifier="glade_command_unifies">
        <doc xml:space="preserve"
             filename="glade-command.c"
             line="249">Checks whether @command and @other can be unified
to make one single command.</doc>
        <source-position filename="glade-command.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-command.c"
               line="257">whether they can be unified.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="251">A #GladeCommand</doc>
            <type name="Command" c:type="GladeCommand*"/>
          </instance-parameter>
          <parameter name="other" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="252">another #GladeCommand</doc>
            <type name="Command" c:type="GladeCommand*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="CommandPrivate" c:type="GladeCommandPrivate*"/>
      </field>
    </class>
    <record name="CommandClass"
            c:type="GladeCommandClass"
            glib:is-gtype-struct-for="Command">
      <source-position filename="glade-command.h" line="62"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="execute">
        <callback name="execute">
          <source-position filename="glade-command.h" line="53"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="224">whether the command was successfully executed</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="this_cmd" transfer-ownership="none">
              <type name="Command" c:type="GladeCommand*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="undo">
        <callback name="undo">
          <source-position filename="glade-command.h" line="54"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="240">whether the command was successfully reversed</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="this_cmd" transfer-ownership="none">
              <type name="Command" c:type="GladeCommand*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unifies">
        <callback name="unifies">
          <source-position filename="glade-command.h" line="55"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-command.c"
                 line="257">whether they can be unified.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="this_cmd" transfer-ownership="none">
              <type name="Command" c:type="GladeCommand*"/>
            </parameter>
            <parameter name="other_cmd" transfer-ownership="none">
              <type name="Command" c:type="GladeCommand*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="collapse">
        <callback name="collapse">
          <source-position filename="glade-command.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="this_cmd" transfer-ownership="none">
              <type name="Command" c:type="GladeCommand*"/>
            </parameter>
            <parameter name="other_cmd" transfer-ownership="none">
              <type name="Command" c:type="GladeCommand*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-command.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-command.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-command.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-command.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CommandPrivate" c:type="GladeCommandPrivate" disguised="1">
      <source-position filename="glade-command.h" line="23"/>
    </record>
    <callback name="ConstructObjectFunc"
              c:type="GladeConstructObjectFunc"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="410">This function is called to construct a GObject instance.
(for language bindings that may need to construct a wrapper
object).</doc>
      <source-position filename="glade-widget-adaptor.h" line="423"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3276">A newly created #GObject</doc>
        <type name="GObject.Object" c:type="GObject*"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3267">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="n_parameters" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3268">amount of construct parameters</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3269">array of construct #GParameter args to create
             the new object with.</doc>
          <type name="GObject.Parameter" c:type="GParameter*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="CreateEPropFunc"
              c:type="GladeCreateEPropFunc"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="567">Creates a GladeEditorProperty to edit @klass</doc>
      <source-position filename="glade-widget-adaptor.h" line="578"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4333">A newly created #GladeEditorProperty</doc>
        <type name="EditorProperty" c:type="GladeEditorProperty*"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4326">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="klass" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4327">The #GladePropertyClass to be edited</doc>
          <type name="PropertyClass" c:type="GladePropertyClass*"/>
        </parameter>
        <parameter name="use_command" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4328">whether to use the GladeCommand interface
to commit property changes</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="CreateEditableFunc"
              c:type="GladeCreateEditableFunc"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="601">This is used to allow the backend to override the way an
editor page is layed out (note that editor widgets are created
on demand and not at startup).</doc>
      <source-position filename="glade-widget-adaptor.h" line="612"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4456">A new #GladeEditable widget</doc>
        <type name="Editable" c:type="GladeEditable*"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4449">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4450">The #GladeEditorPageType</doc>
          <type name="EditorPageType" c:type="GladeEditorPageType"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="CreateReason"
                 glib:type-name="GladeCreateReason"
                 glib:get-type="glade_create_reason_get_type"
                 c:type="GladeCreateReason">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="186">These are the reasons your #GladePostCreateFunc can be called.</doc>
      <member name="user"
              value="0"
              c:identifier="GLADE_CREATE_USER"
              glib:nick="user">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.h"
             line="188">Was created at the user's request
                    (this is a good time to set any properties
                    or add children to the project; like GtkFrame's
                    label for example).</doc>
      </member>
      <member name="copy"
              value="1"
              c:identifier="GLADE_CREATE_COPY"
              glib:nick="copy">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.h"
             line="192">Was created as a result of the copy/paste
                    mechanism, at this point you can count on glade
                    to follow up with properties and children on
                    its own.</doc>
      </member>
      <member name="load"
              value="2"
              c:identifier="GLADE_CREATE_LOAD"
              glib:nick="load">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.h"
             line="196">Was created during the load process.</doc>
      </member>
      <member name="rebuild"
              value="3"
              c:identifier="GLADE_CREATE_REBUILD"
              glib:nick="rebuild">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.h"
             line="197">Was created as a replacement for another project
                       object; this only happens when the user is
                       changing a property that is marked by the type
                       system as G_PARAM_SPEC_CONSTRUCT_ONLY.</doc>
      </member>
      <member name="reasons"
              value="4"
              c:identifier="GLADE_CREATE_REASONS"
              glib:nick="reasons">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.h"
             line="201">Never used.</doc>
      </member>
    </enumeration>
    <callback name="CreateWidgetFunc"
              c:type="GladeCreateWidgetFunc"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="214">This entry point allows the backend to create a specialized GladeWidget
derived object for handling instances in the core.</doc>
      <source-position filename="glade-widget-adaptor.h" line="226"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.h"
             line="224">A newly created #GladeWidget for the said adaptor.</doc>
        <type name="Widget" c:type="GladeWidget*"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.h"
               line="216">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="first_property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.h"
               line="217">the name of the first property</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="var_args" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.h"
               line="218">the value of the first property, followed optionally by more
 name/value pairs, followed by %NULL</doc>
          <type name="va_list" c:type="va_list"/>
        </parameter>
      </parameters>
    </callback>
    <record name="Cursor" c:type="GladeCursor">
      <source-position filename="glade-cursor.h" line="29"/>
      <field name="selector" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="add_widget" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="resize_top_left" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="resize_top_right" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="resize_bottom_left" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="resize_bottom_right" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="resize_left" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="resize_right" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="resize_top" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="resize_bottom" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="drag" writable="1">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="add_widget_pixbuf" writable="1">
        <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
      </field>
      <function name="get_add_widget_pixbuf"
                c:identifier="glade_cursor_get_add_widget_pixbuf">
        <source-position filename="glade-cursor.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="GdkPixbuf.Pixbuf" c:type="const GdkPixbuf*"/>
        </return-value>
      </function>
      <function name="init" c:identifier="glade_cursor_init">
        <doc xml:space="preserve"
             filename="glade-cursor.c"
             line="149">Initializes cursors for use with glade_cursor_set().</doc>
        <source-position filename="glade-cursor.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="set" c:identifier="glade_cursor_set">
        <doc xml:space="preserve"
             filename="glade-cursor.c"
             line="77">Sets the cursor for @window to something appropriate based on @type.
(also sets the cursor on all visible project widgets)</doc>
        <source-position filename="glade-cursor.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-cursor.c"
                 line="79">a #GdkWindow</doc>
            <type name="Gdk.Window" c:type="GdkWindow*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-cursor.c"
                 line="80">a #GladeCursorType</doc>
            <type name="CursorType" c:type="GladeCursorType"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="CursorType"
                 glib:type-name="GladeCursorType"
                 glib:get-type="glade_cursor_type_get_type"
                 c:type="GladeCursorType">
      <member name="selector"
              value="0"
              c:identifier="GLADE_CURSOR_SELECTOR"
              glib:nick="selector">
      </member>
      <member name="add_widget"
              value="1"
              c:identifier="GLADE_CURSOR_ADD_WIDGET"
              glib:nick="add-widget">
      </member>
      <member name="resize_top_left"
              value="2"
              c:identifier="GLADE_CURSOR_RESIZE_TOP_LEFT"
              glib:nick="resize-top-left">
      </member>
      <member name="resize_top_right"
              value="3"
              c:identifier="GLADE_CURSOR_RESIZE_TOP_RIGHT"
              glib:nick="resize-top-right">
      </member>
      <member name="resize_bottom_left"
              value="4"
              c:identifier="GLADE_CURSOR_RESIZE_BOTTOM_LEFT"
              glib:nick="resize-bottom-left">
      </member>
      <member name="resize_bottom_right"
              value="5"
              c:identifier="GLADE_CURSOR_RESIZE_BOTTOM_RIGHT"
              glib:nick="resize-bottom-right">
      </member>
      <member name="resize_left"
              value="6"
              c:identifier="GLADE_CURSOR_RESIZE_LEFT"
              glib:nick="resize-left">
      </member>
      <member name="resize_right"
              value="7"
              c:identifier="GLADE_CURSOR_RESIZE_RIGHT"
              glib:nick="resize-right">
      </member>
      <member name="resize_top"
              value="8"
              c:identifier="GLADE_CURSOR_RESIZE_TOP"
              glib:nick="resize-top">
      </member>
      <member name="resize_bottom"
              value="9"
              c:identifier="GLADE_CURSOR_RESIZE_BOTTOM"
              glib:nick="resize-bottom">
      </member>
      <member name="drag"
              value="10"
              c:identifier="GLADE_CURSOR_DRAG"
              glib:nick="drag">
      </member>
    </enumeration>
    <constant name="DEVHELP_FALLBACK_ICON_FILE"
              value="devhelp.png"
              c:type="GLADE_DEVHELP_FALLBACK_ICON_FILE">
      <source-position filename="glade-utils.h" line="10"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVHELP_ICON_NAME"
              value="devhelp"
              c:type="GLADE_DEVHELP_ICON_NAME">
      <source-position filename="glade-utils.h" line="9"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <bitfield name="DebugFlag"
              glib:type-name="GladeDebugFlag"
              glib:get-type="glade_debug_flag_get_type"
              c:type="GladeDebugFlag">
      <member name="ref_counts"
              value="1"
              c:identifier="GLADE_DEBUG_REF_COUNTS"
              glib:nick="ref-counts">
      </member>
      <member name="widget_events"
              value="2"
              c:identifier="GLADE_DEBUG_WIDGET_EVENTS"
              glib:nick="widget-events">
      </member>
      <member name="commands"
              value="4"
              c:identifier="GLADE_DEBUG_COMMANDS"
              glib:nick="commands">
      </member>
      <member name="properties"
              value="8"
              c:identifier="GLADE_DEBUG_PROPERTIES"
              glib:nick="properties">
      </member>
      <member name="verify"
              value="16"
              c:identifier="GLADE_DEBUG_VERIFY"
              glib:nick="verify">
      </member>
    </bitfield>
    <callback name="DependsFunc" c:type="GladeDependsFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="521">Checks whether @widget depends on @another to be placed earlier in
the glade file.</doc>
      <source-position filename="glade-widget-adaptor.h" line="533"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4190">whether @widget depends on @another being parsed first in
the resulting glade file.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4183">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4184">A #GladeWidget of the adaptor</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </parameter>
        <parameter name="another" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4185">another #GladeWidget</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="DesignView"
           c:symbol-prefix="design_view"
           c:type="GladeDesignView"
           parent="Gtk.Box"
           glib:type-name="GladeDesignView"
           glib:get-type="glade_design_view_get_type"
           glib:type-struct="DesignViewClass">
      <source-position filename="glade-design-view.h" line="61"/>
      <implements name="Atk.Implementor"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="glade_design_view_new">
        <source-position filename="glade-design-view.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_from_project"
                c:identifier="glade_design_view_get_from_project"
                introspectable="0">
        <source-position filename="glade-design-view.h" line="70"/>
        <return-value>
          <type name="DesignView" c:type="GladeDesignView*"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_project"
              c:identifier="glade_design_view_get_project"
              introspectable="0">
        <source-position filename="glade-design-view.h" line="68"/>
        <return-value>
          <type name="Project" c:type="GladeProject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="DesignView" c:type="GladeDesignView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="project"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Project"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="DesignViewPrivate" c:type="GladeDesignViewPrivate*"/>
      </field>
    </class>
    <record name="DesignViewClass"
            c:type="GladeDesignViewClass"
            glib:is-gtype-struct-for="DesignView">
      <source-position filename="glade-design-view.h" line="61"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-design-view.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-design-view.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-design-view.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-design-view.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DesignViewPrivate"
            c:type="GladeDesignViewPrivate"
            disguised="1">
      <source-position filename="glade-design-view.h" line="43"/>
    </record>
    <callback name="DestroyObjectFunc" c:type="GladeDestroyObjectFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="427">This function is called to break any additional references to
a GObject instance. Note that this function is not responsible
for calling g_object_unref() on @object, the reference count
of @object belongs to it's #GladeWidget wrapper.

The #GtkWidget adaptor will call gtk_widget_destroy() before
chaining up in this function.

If your adaptor adds any references in any way at
#GladePostCreateFunc time or #GladeConstructObjectFunc
time, then this function must be implemented to also
remove that reference.</doc>
      <source-position filename="glade-widget-adaptor.h" line="446"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3292">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3293">The object to destroy</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
      </parameters>
    </callback>
    <constant name="ENV_BUNDLED"
              value="GLADE_BUNDLED"
              c:type="GLADE_ENV_BUNDLED">
      <source-position filename="glade-app.h" line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ENV_CATALOG_PATH"
              value="GLADE_CATALOG_SEARCH_PATH"
              c:type="GLADE_ENV_CATALOG_PATH">
      <source-position filename="glade-app.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ENV_ICON_THEME_PATH"
              value="GLADE_ICON_THEME_PATH"
              c:type="GLADE_ENV_ICON_THEME_PATH">
      <source-position filename="glade-app.h" line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ENV_MODULE_PATH"
              value="GLADE_MODULE_SEARCH_PATH"
              c:type="GLADE_ENV_MODULE_PATH">
      <source-position filename="glade-app.h" line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ENV_PIXMAP_DIR"
              value="GLADE_PIXMAP_DIR"
              c:type="GLADE_ENV_PIXMAP_DIR">
      <source-position filename="glade-app.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ENV_TESTING"
              value="GLADE_TESTING"
              c:type="GLADE_ENV_TESTING">
      <source-position filename="glade-app.h" line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="EPropBool"
           c:symbol-prefix="eprop_bool"
           parent="EditorProperty"
           glib:type-name="GladeEPropBool"
           glib:get-type="glade_eprop_bool_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <class name="EPropCheck"
           c:symbol-prefix="eprop_check"
           parent="EditorProperty"
           glib:type-name="GladeEPropCheck"
           glib:get-type="glade_eprop_check_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <class name="EPropColor"
           c:symbol-prefix="eprop_color"
           parent="EditorProperty"
           glib:type-name="GladeEPropColor"
           glib:get-type="glade_eprop_color_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <class name="EPropEnum"
           c:symbol-prefix="eprop_enum"
           parent="EditorProperty"
           glib:type-name="GladeEPropEnum"
           glib:get-type="glade_eprop_enum_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <class name="EPropFlags"
           c:symbol-prefix="eprop_flags"
           parent="EditorProperty"
           glib:type-name="GladeEPropFlags"
           glib:get-type="glade_eprop_flags_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <class name="EPropNamedIcon"
           c:symbol-prefix="eprop_named_icon"
           parent="EditorProperty"
           glib:type-name="GladeEPropNamedIcon"
           glib:get-type="glade_eprop_named_icon_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <class name="EPropNumeric"
           c:symbol-prefix="eprop_numeric"
           parent="EditorProperty"
           glib:type-name="GladeEPropNumeric"
           glib:get-type="glade_eprop_numeric_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <class name="EPropObject"
           c:symbol-prefix="eprop_object"
           parent="EditorProperty"
           glib:type-name="GladeEPropObject"
           glib:get-type="glade_eprop_object_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <class name="EPropObjects"
           c:symbol-prefix="eprop_objects"
           parent="EditorProperty"
           glib:type-name="GladeEPropObjects"
           glib:get-type="glade_eprop_objects_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <class name="EPropText"
           c:symbol-prefix="eprop_text"
           parent="EditorProperty"
           glib:type-name="GladeEPropText"
           glib:get-type="glade_eprop_text_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <class name="EPropUnichar"
           c:symbol-prefix="eprop_unichar"
           parent="EditorProperty"
           glib:type-name="GladeEPropUnichar"
           glib:get-type="glade_eprop_unichar_get_type">
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
    </class>
    <interface name="Editable"
               c:symbol-prefix="editable"
               c:type="GladeEditable"
               glib:type-name="GladeEditable"
               glib:get-type="glade_editable_get_type"
               glib:type-struct="EditableIface">
      <source-position filename="glade-editable.h" line="18"/>
      <prerequisite name="Gtk.Widget"/>
      <virtual-method name="load" invoker="load">
        <doc xml:space="preserve"
             filename="glade-editable.c"
             line="117">Loads @widget property values into @editable
(the editable will watch the widgets properties
until its loaded with another widget or %NULL)</doc>
        <source-position filename="glade-editable.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editable.c"
                 line="119">A #GladeEditable</doc>
            <type name="Editable" c:type="GladeEditable*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editable.c"
                 line="120">the #GladeWidget to load</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_show_name" invoker="set_show_name">
        <doc xml:space="preserve"
             filename="glade-editable.c"
             line="156">This only applies for the general page in the property
editor, editables that embed the #GladeEditorTable implementation
for the general page should use this to forward the message
to its embedded editable.</doc>
        <source-position filename="glade-editable.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editable.c"
                 line="158">A #GladeEditable</doc>
            <type name="Editable" c:type="GladeEditable*"/>
          </instance-parameter>
          <parameter name="show_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editable.c"
                 line="159">Whether or not to show the name entry</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="block" c:identifier="glade_editable_block">
        <source-position filename="glade-editable.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editable" transfer-ownership="none">
            <type name="Editable" c:type="GladeEditable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="glade_editable_load">
        <doc xml:space="preserve"
             filename="glade-editable.c"
             line="117">Loads @widget property values into @editable
(the editable will watch the widgets properties
until its loaded with another widget or %NULL)</doc>
        <source-position filename="glade-editable.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editable.c"
                 line="119">A #GladeEditable</doc>
            <type name="Editable" c:type="GladeEditable*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editable.c"
                 line="120">the #GladeWidget to load</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="loaded_widget"
              c:identifier="glade_editable_loaded_widget"
              introspectable="0">
        <source-position filename="glade-editable.h" line="48"/>
        <return-value>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="editable" transfer-ownership="none">
            <type name="Editable" c:type="GladeEditable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="loading" c:identifier="glade_editable_loading">
        <source-position filename="glade-editable.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="editable" transfer-ownership="none">
            <type name="Editable" c:type="GladeEditable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_show_name" c:identifier="glade_editable_set_show_name">
        <doc xml:space="preserve"
             filename="glade-editable.c"
             line="156">This only applies for the general page in the property
editor, editables that embed the #GladeEditorTable implementation
for the general page should use this to forward the message
to its embedded editable.</doc>
        <source-position filename="glade-editable.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editable.c"
                 line="158">A #GladeEditable</doc>
            <type name="Editable" c:type="GladeEditable*"/>
          </instance-parameter>
          <parameter name="show_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editable.c"
                 line="159">Whether or not to show the name entry</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="unblock" c:identifier="glade_editable_unblock">
        <source-position filename="glade-editable.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editable" transfer-ownership="none">
            <type name="Editable" c:type="GladeEditable*"/>
          </instance-parameter>
        </parameters>
      </method>
    </interface>
    <record name="EditableIface"
            c:type="GladeEditableIface"
            glib:is-gtype-struct-for="Editable">
      <source-position filename="glade-editable.h" line="18"/>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="load">
        <callback name="load">
          <source-position filename="glade-editable.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="editable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-editable.c"
                   line="119">A #GladeEditable</doc>
              <type name="Editable" c:type="GladeEditable*"/>
            </parameter>
            <parameter name="widget" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-editable.c"
                   line="120">the #GladeWidget to load</doc>
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_show_name">
        <callback name="set_show_name">
          <source-position filename="glade-editable.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="editable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-editable.c"
                   line="158">A #GladeEditable</doc>
              <type name="Editable" c:type="GladeEditable*"/>
            </parameter>
            <parameter name="show_name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-editable.c"
                   line="159">Whether or not to show the name entry</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="EditableInterface" c:type="GladeEditableInterface">
      <source-position filename="glade-editable.h" line="40"/>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="load">
        <callback name="load">
          <source-position filename="glade-editable.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="editable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-editable.c"
                   line="119">A #GladeEditable</doc>
              <type name="Editable" c:type="GladeEditable*"/>
            </parameter>
            <parameter name="widget" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-editable.c"
                   line="120">the #GladeWidget to load</doc>
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_show_name">
        <callback name="set_show_name">
          <source-position filename="glade-editable.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="editable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-editable.c"
                   line="158">A #GladeEditable</doc>
              <type name="Editable" c:type="GladeEditable*"/>
            </parameter>
            <parameter name="show_name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-editable.c"
                   line="159">Whether or not to show the name entry</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Editor"
           c:symbol-prefix="editor"
           c:type="GladeEditor"
           parent="Gtk.Box"
           glib:type-name="GladeEditor"
           glib:get-type="glade_editor_get_type"
           glib:type-struct="EditorClass">
      <source-position filename="glade-editor.h" line="40"/>
      <implements name="Atk.Implementor"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="glade_editor_new">
        <source-position filename="glade-editor.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-editor.c"
               line="718">a new #GladeEditor</doc>
          <type name="Editor" c:type="GladeEditor*"/>
        </return-value>
      </constructor>
      <function name="dialog_for_widget"
                c:identifier="glade_editor_dialog_for_widget"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-editor.c"
             line="1316">This convenience function creates a new dialog window to edit @widget
specifically.</doc>
        <source-position filename="glade-editor.h" line="57"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-editor.c"
               line="1323">the newly created dialog window</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor.c"
                 line="1318">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </function>
      <function name="query_dialog" c:identifier="glade_editor_query_dialog">
        <source-position filename="glade-editor.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </function>
      <function name="reset_dialog_run"
                c:identifier="glade_editor_reset_dialog_run">
        <source-position filename="glade-editor.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="gwidget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </function>
      <method name="hide_class_field"
              c:identifier="glade_editor_hide_class_field">
        <source-position filename="glade-editor.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="Editor" c:type="GladeEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hide_info" c:identifier="glade_editor_hide_info">
        <source-position filename="glade-editor.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="Editor" c:type="GladeEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_widget" c:identifier="glade_editor_load_widget">
        <doc xml:space="preserve"
             filename="glade-editor.c"
             line="730">Load @widget into @editor. If @widget is %NULL, clear the editor.</doc>
        <source-position filename="glade-editor.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor.c"
                 line="732">a #GladeEditor</doc>
            <type name="Editor" c:type="GladeEditor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor.c"
                 line="733">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_class_field"
              c:identifier="glade_editor_show_class_field">
        <source-position filename="glade-editor.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="Editor" c:type="GladeEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="show_info" c:identifier="glade_editor_show_info">
        <source-position filename="glade-editor.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="Editor" c:type="GladeEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="class-field" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="show-boder" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-class-field" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-info" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="signal-editor" transfer-ownership="none">
        <type name="SignalEditor"/>
      </property>
      <property name="widget" writable="1" transfer-ownership="none">
        <type name="Widget"/>
      </property>
      <field name="vbox">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="EditorPrivate" c:type="GladeEditorPrivate*"/>
      </field>
    </class>
    <record name="EditorClass"
            c:type="GladeEditorClass"
            glib:is-gtype-struct-for="Editor">
      <source-position filename="glade-editor.h" line="40"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-editor.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-editor.h" line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-editor.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-editor.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="EditorPageType"
                 glib:type-name="GladeEditorPageType"
                 glib:get-type="glade_editor_page_type_get_type"
                 c:type="GladeEditorPageType">
      <member name="general"
              value="0"
              c:identifier="GLADE_PAGE_GENERAL"
              glib:nick="general">
      </member>
      <member name="common"
              value="1"
              c:identifier="GLADE_PAGE_COMMON"
              glib:nick="common">
      </member>
      <member name="packing"
              value="2"
              c:identifier="GLADE_PAGE_PACKING"
              glib:nick="packing">
      </member>
      <member name="atk"
              value="3"
              c:identifier="GLADE_PAGE_ATK"
              glib:nick="atk">
      </member>
      <member name="query"
              value="4"
              c:identifier="GLADE_PAGE_QUERY"
              glib:nick="query">
      </member>
      <member name="signal"
              value="5"
              c:identifier="GLADE_PAGE_SIGNAL"
              glib:nick="signal">
      </member>
    </enumeration>
    <record name="EditorPrivate" c:type="GladeEditorPrivate" disguised="1">
      <source-position filename="glade-editor.h" line="19"/>
    </record>
    <class name="EditorProperty"
           c:symbol-prefix="editor_property"
           c:type="GladeEditorProperty"
           parent="Gtk.Box"
           glib:type-name="GladeEditorProperty"
           glib:get-type="glade_editor_property_get_type"
           glib:type-struct="EditorPropertyClass">
      <source-position filename="glade-editor-property.h" line="95"/>
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <function name="show_i18n_dialog"
                c:identifier="glade_editor_property_show_i18n_dialog">
        <doc xml:space="preserve"
             filename="glade-editor-property.c"
             line="1983">Runs a dialog and updates the provided values.</doc>
        <source-position filename="glade-editor-property.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-editor-property.c"
               line="1993">%TRUE if OK was selected.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="1985">The parent widget for the dialog.</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="1986">A read/write pointer to the text property</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="1987">A read/write pointer to the translation context</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="comment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="1988">A read/write pointer to the translator comment</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="translatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="1989">A read/write pointer to the translatable setting]</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </function>
      <function name="show_object_dialog"
                c:identifier="glade_editor_property_show_object_dialog">
        <source-position filename="glade-editor-property.h" line="132"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="object_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="exception" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget**"/>
          </parameter>
        </parameters>
      </function>
      <function name="show_resource_dialog"
                c:identifier="glade_editor_property_show_resource_dialog">
        <source-position filename="glade-editor-property.h" line="128"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="changed">
        <source-position filename="glade-editor-property.h" line="89"/>
        <return-value transfer-ownership="none" nullable="1">
          <type name="gpointer" c:type="void*"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="commit" invoker="commit">
        <doc xml:space="preserve"
             filename="glade-editor-property.c"
             line="3740">Commits @value to the property currently being edited by @eprop.</doc>
        <source-position filename="glade-editor-property.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_input" introspectable="0">
        <source-position filename="glade-editor-property.h" line="87"/>
        <return-value>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="load" invoker="load">
        <doc xml:space="preserve"
             filename="glade-editor-property.c"
             line="3757">Loads @property values into @eprop and connects.
(the editor property will watch the property's value
until its loaded with another property or %NULL)</doc>
        <source-position filename="glade-editor-property.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="commit" c:identifier="glade_editor_property_commit">
        <doc xml:space="preserve"
             filename="glade-editor-property.c"
             line="3740">Commits @value to the property currently being edited by @eprop.</doc>
        <source-position filename="glade-editor-property.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="3742">A #GladeEditorProperty</doc>
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="3743">The #GValue to commit</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="commit_no_callback"
              c:identifier="glade_editor_property_commit_no_callback">
        <source-position filename="glade-editor-property.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_custom_text"
              c:identifier="glade_editor_property_get_custom_text">
        <source-position filename="glade-editor-property.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_disable_check"
              c:identifier="glade_editor_property_get_disable_check">
        <source-position filename="glade-editor-property.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_item_label"
              c:identifier="glade_editor_property_get_item_label"
              introspectable="0">
        <source-position filename="glade-editor-property.h" line="118"/>
        <return-value>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pclass"
              c:identifier="glade_editor_property_get_pclass"
              introspectable="0">
        <source-position filename="glade-editor-property.h" line="119"/>
        <return-value>
          <type name="PropertyClass" c:type="GladePropertyClass*"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_property"
              c:identifier="glade_editor_property_get_property"
              introspectable="0">
        <source-position filename="glade-editor-property.h" line="120"/>
        <return-value>
          <type name="Property" c:type="GladeProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="glade_editor_property_load">
        <doc xml:space="preserve"
             filename="glade-editor-property.c"
             line="3757">Loads @property values into @eprop and connects.
(the editor property will watch the property's value
until its loaded with another property or %NULL)</doc>
        <source-position filename="glade-editor-property.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="3759">A #GladeEditorProperty</doc>
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="3760">A #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_by_widget"
              c:identifier="glade_editor_property_load_by_widget">
        <doc xml:space="preserve"
             filename="glade-editor-property.c"
             line="3779">Convenience function to load the appropriate #GladeProperty into
@eprop from @widget</doc>
        <source-position filename="glade-editor-property.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="3781">A #GladeEditorProperty</doc>
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="3782">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="loading" c:identifier="glade_editor_property_loading">
        <source-position filename="glade-editor-property.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_custom_text"
              c:identifier="glade_editor_property_set_custom_text">
        <source-position filename="glade-editor-property.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
          <parameter name="custom_text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_disable_check"
              c:identifier="glade_editor_property_set_disable_check">
        <source-position filename="glade-editor-property.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="eprop" transfer-ownership="none">
            <type name="EditorProperty" c:type="GladeEditorProperty*"/>
          </instance-parameter>
          <parameter name="disable_check" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="custom-text" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="disable-check"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="property-class"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="use-command" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="EditorPropertyPrivate"
              c:type="GladeEditorPropertyPrivate*"/>
      </field>
      <glib:signal name="commit" when="last">
        <doc xml:space="preserve"
             filename="glade-editor-property.c"
             line="704">Emitted when a property's value is committed, can be useful to serialize
commands before and after the property's commit command from custom editors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="707">the new #GValue to commit.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="value-changed" when="last">
        <doc xml:space="preserve"
             filename="glade-editor-property.c"
             line="688">Emitted when a contained property changes value</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-property.c"
                 line="691">the #GladeProperty that's value changed.</doc>
            <type name="Property"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="EditorPropertyClass"
            c:type="GladeEditorPropertyClass"
            glib:is-gtype-struct-for="EditorProperty">
      <source-position filename="glade-editor-property.h" line="95"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="load">
        <callback name="load">
          <source-position filename="glade-editor-property.h" line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="EditorProperty" c:type="GladeEditorProperty*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Property" c:type="GladeProperty*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_input" introspectable="0">
        <callback name="create_input" introspectable="0">
          <source-position filename="glade-editor-property.h" line="87"/>
          <return-value>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="EditorProperty" c:type="GladeEditorProperty*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="commit">
        <callback name="commit">
          <source-position filename="glade-editor-property.h" line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="EditorProperty" c:type="GladeEditorProperty*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="glade-editor-property.h" line="89"/>
          <return-value transfer-ownership="none" nullable="1">
            <type name="gpointer" c:type="void*"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="EditorProperty" c:type="GladeEditorProperty*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Property" c:type="GladeProperty*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-editor-property.h" line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-editor-property.h" line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-editor-property.h" line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-editor-property.h" line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="EditorPropertyPrivate"
            c:type="GladeEditorPropertyPrivate"
            disguised="1">
      <source-position filename="glade-editor-property.h" line="74"/>
    </record>
    <class name="EditorSkeleton"
           c:symbol-prefix="editor_skeleton"
           c:type="GladeEditorSkeleton"
           parent="Gtk.Box"
           glib:type-name="GladeEditorSkeleton"
           glib:get-type="glade_editor_skeleton_get_type"
           glib:type-struct="EditorSkeletonClass">
      <source-position filename="glade-editor-skeleton.h" line="52"/>
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="glade_editor_skeleton_new">
        <source-position filename="glade-editor-skeleton.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="add_editor"
              c:identifier="glade_editor_skeleton_add_editor">
        <source-position filename="glade-editor-skeleton.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="skeleton" transfer-ownership="none">
            <type name="EditorSkeleton" c:type="GladeEditorSkeleton*"/>
          </instance-parameter>
          <parameter name="editor" transfer-ownership="none">
            <type name="Editable" c:type="GladeEditable*"/>
          </parameter>
        </parameters>
      </method>
      <field name="box" readable="0" private="1">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="EditorSkeletonPrivate"
              c:type="GladeEditorSkeletonPrivate*"/>
      </field>
    </class>
    <record name="EditorSkeletonClass"
            c:type="GladeEditorSkeletonClass"
            glib:is-gtype-struct-for="EditorSkeleton">
      <source-position filename="glade-editor-skeleton.h" line="52"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <record name="EditorSkeletonPrivate"
            c:type="GladeEditorSkeletonPrivate"
            disguised="1">
      <source-position filename="glade-editor-skeleton.h" line="39"/>
    </record>
    <class name="EditorTable"
           c:symbol-prefix="editor_table"
           c:type="GladeEditorTable"
           parent="Gtk.Grid"
           glib:type-name="GladeEditorTable"
           glib:get-type="glade_editor_table_get_type"
           glib:type-struct="EditorTableClass">
      <source-position filename="glade-editor-table.h" line="56"/>
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="glade_editor_table_new">
        <doc xml:space="preserve"
             filename="glade-editor-table.c"
             line="624">Creates a new #GladeEditorTable.</doc>
        <source-position filename="glade-editor-table.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-editor-table.c"
               line="631">a new #GladeEditorTable</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-table.c"
                 line="626">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-editor-table.c"
                 line="627">The #GladeEditorPageType</doc>
            <type name="EditorPageType" c:type="GladeEditorPageType"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="page-type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="EditorPageType"/>
      </property>
      <field name="parent">
        <type name="Gtk.Grid" c:type="GtkGrid"/>
      </field>
      <field name="priv">
        <type name="EditorTablePrivate" c:type="GladeEditorTablePrivate*"/>
      </field>
    </class>
    <record name="EditorTableClass"
            c:type="GladeEditorTableClass"
            glib:is-gtype-struct-for="EditorTable">
      <source-position filename="glade-editor-table.h" line="56"/>
      <field name="parent">
        <type name="Gtk.GridClass" c:type="GtkGridClass"/>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-editor-table.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-editor-table.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-editor-table.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-editor-table.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="EditorTablePrivate"
            c:type="GladeEditorTablePrivate"
            disguised="1">
      <source-position filename="glade-editor-table.h" line="39"/>
    </record>
    <glib:boxed glib:name="GList"
                c:symbol-prefix="glist"
                glib:type-name="GladeGList"
                glib:get-type="glade_glist_get_type">
    </glib:boxed>
    <constant name="GTKBUILDER_VERSIONING_BASE_MAJOR"
              value="2"
              c:type="GLADE_GTKBUILDER_VERSIONING_BASE_MAJOR">
      <source-position filename="glade-xml-utils.h" line="29"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GTKBUILDER_VERSIONING_BASE_MINOR"
              value="14"
              c:type="GLADE_GTKBUILDER_VERSIONING_BASE_MINOR">
      <source-position filename="glade-xml-utils.h" line="30"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <callback name="GetChildrenFunc"
              c:type="GladeGetChildrenFunc"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="358">A function called to get @containers children.</doc>
      <source-position filename="glade-widget-adaptor.h" line="367"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3583">A #GList of children</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3578">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="container" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3579">The #GObject container</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GetInternalFunc"
              c:type="GladeGetInternalFunc"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="463">Called to lookup @child in composite object @parent by @name.</doc>
      <source-position filename="glade-widget-adaptor.h" line="473"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3384">The internal #GObject</doc>
        <type name="GObject.Object" c:type="GObject*"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3378">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.h"
               line="466">A #GObject composite object</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.h"
               line="467">A string identifier</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GetPropertyFunc" c:type="GladeGetPropertyFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="247">Gets @value on @object for a given #GladePropertyClass</doc>
      <source-position filename="glade-widget-adaptor.h" line="256"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3436">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3437">The #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3438">The property identifier</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3439">The #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="IDAllocator" c:type="GladeIDAllocator" disguised="1">
      <source-position filename="glade-id-allocator.h" line="32"/>
      <method name="allocate" c:identifier="glade_id_allocator_allocate">
        <source-position filename="glade-id-allocator.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="allocator" transfer-ownership="none">
            <type name="IDAllocator" c:type="GladeIDAllocator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="destroy" c:identifier="glade_id_allocator_destroy">
        <doc xml:space="preserve"
             filename="glade-id-allocator.c"
             line="57">Frees @allocator and its associated memory</doc>
        <source-position filename="glade-id-allocator.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="allocator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-id-allocator.c"
                 line="59">a #GladeIDAllocator</doc>
            <type name="IDAllocator" c:type="GladeIDAllocator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="release" c:identifier="glade_id_allocator_release">
        <doc xml:space="preserve"
             filename="glade-id-allocator.c"
             line="143">TODO: write me</doc>
        <source-position filename="glade-id-allocator.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="allocator" transfer-ownership="none">
            <type name="IDAllocator" c:type="GladeIDAllocator*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <function name="new"
                c:identifier="glade_id_allocator_new"
                introspectable="0">
        <source-position filename="glade-id-allocator.h" line="34"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-id-allocator.c"
               line="42">a new #GladeIDAllocator</doc>
          <type name="IDAllocator" c:type="GladeIDAllocator*"/>
        </return-value>
      </function>
    </record>
    <class name="Inspector"
           c:symbol-prefix="inspector"
           c:type="GladeInspector"
           parent="Gtk.Box"
           glib:type-name="GladeInspector"
           glib:get-type="glade_inspector_get_type"
           glib:type-struct="InspectorClass">
      <doc xml:space="preserve"
           filename="glade-inspector.h"
           line="47">The #GladeInspector struct contains private data only, and should be manipulated using the functions below.</doc>
      <source-position filename="glade-inspector.h" line="71"/>
      <implements name="Atk.Implementor"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="glade_inspector_new">
        <doc xml:space="preserve"
             filename="glade-inspector.c"
             line="1121">Creates a new #GladeInspector</doc>
        <source-position filename="glade-inspector.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-inspector.c"
               line="1126">a new #GladeInspector</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_project"
                   c:identifier="glade_inspector_new_with_project">
        <doc xml:space="preserve"
             filename="glade-inspector.c"
             line="1134">Creates a new #GladeInspector with @project</doc>
        <source-position filename="glade-inspector.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-inspector.c"
               line="1140">a new #GladeInspector</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-inspector.c"
                 line="1136">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="item_activated">
        <source-position filename="glade-inspector.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="inspector" transfer-ownership="none">
            <type name="Inspector" c:type="GladeInspector*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="selection_changed">
        <source-position filename="glade-inspector.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="inspector" transfer-ownership="none">
            <type name="Inspector" c:type="GladeInspector*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_project"
              c:identifier="glade_inspector_get_project"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-inspector.c"
             line="1063">Note that the method does not ref the returned #GladeProject.</doc>
        <source-position filename="glade-inspector.h" line="80"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-inspector.c"
               line="1069">A #GladeProject</doc>
          <type name="Project" c:type="GladeProject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="inspector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-inspector.c"
                 line="1065">a #GladeInspector</doc>
            <type name="Inspector" c:type="GladeInspector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected_items"
              c:identifier="glade_inspector_get_selected_items"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-inspector.c"
             line="1079">Returns the selected items in the inspector.</doc>
        <source-position filename="glade-inspector.h" line="81"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-inspector.c"
               line="1085">A #GList</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="inspector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-inspector.c"
                 line="1081">a #GladeInspector</doc>
            <type name="Inspector" c:type="GladeInspector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_project" c:identifier="glade_inspector_set_project">
        <doc xml:space="preserve"
             filename="glade-inspector.c"
             line="1011">Sets the current project of @inspector to @project. To unset the current
project, pass %NULL for @project.</doc>
        <source-position filename="glade-inspector.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="inspector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-inspector.c"
                 line="1013">a #GladeInspector</doc>
            <type name="Inspector" c:type="GladeInspector*"/>
          </instance-parameter>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-inspector.c"
                 line="1014">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </method>
      <property name="project" writable="1" transfer-ownership="none">
        <type name="Project"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="InspectorPrivate" c:type="GladeInspectorPrivate*"/>
      </field>
      <glib:signal name="item-activated" when="last">
        <doc xml:space="preserve"
             filename="glade-inspector.c"
             line="181">Emitted when a item is activated in the GladeInspector.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="selection-changed" when="last">
        <doc xml:space="preserve"
             filename="glade-inspector.c"
             line="168">Emitted when the selection changes in the GladeInspector.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="InspectorClass"
            c:type="GladeInspectorClass"
            glib:is-gtype-struct-for="Inspector">
      <source-position filename="glade-inspector.h" line="71"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="selection_changed">
        <callback name="selection_changed">
          <source-position filename="glade-inspector.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="inspector" transfer-ownership="none">
              <type name="Inspector" c:type="GladeInspector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="item_activated">
        <callback name="item_activated">
          <source-position filename="glade-inspector.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="inspector" transfer-ownership="none">
              <type name="Inspector" c:type="GladeInspector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-inspector.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-inspector.h" line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-inspector.h" line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-inspector.h" line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="InspectorPrivate"
            c:type="GladeInspectorPrivate"
            disguised="1">
      <source-position filename="glade-inspector.h" line="45"/>
    </record>
    <enumeration name="ItemAppearance"
                 glib:type-name="GladeItemAppearance"
                 glib:get-type="glade_item_appearance_get_type"
                 c:type="GladeItemAppearance">
      <member name="icon_and_label"
              value="0"
              c:identifier="GLADE_ITEM_ICON_AND_LABEL"
              glib:nick="icon-and-label">
      </member>
      <member name="icon_only"
              value="1"
              c:identifier="GLADE_ITEM_ICON_ONLY"
              glib:nick="icon-only">
      </member>
      <member name="label_only"
              value="2"
              c:identifier="GLADE_ITEM_LABEL_ONLY"
              glib:nick="label-only">
      </member>
    </enumeration>
    <record name="NameContext" c:type="GladeNameContext" disguised="1">
      <source-position filename="glade-name-context.h" line="8"/>
      <method name="add_name" c:identifier="glade_name_context_add_name">
        <source-position filename="glade-name-context.h" line="21"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="NameContext" c:type="GladeNameContext*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="destroy" c:identifier="glade_name_context_destroy">
        <source-position filename="glade-name-context.h" line="11"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="NameContext" c:type="GladeNameContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_name" c:identifier="glade_name_context_has_name">
        <source-position filename="glade-name-context.h" line="18"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="NameContext" c:type="GladeNameContext*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="n_names" c:identifier="glade_name_context_n_names">
        <source-position filename="glade-name-context.h" line="16"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="NameContext" c:type="GladeNameContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_name" c:identifier="glade_name_context_new_name">
        <source-position filename="glade-name-context.h" line="13"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="NameContext" c:type="GladeNameContext*"/>
          </instance-parameter>
          <parameter name="base_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="release_name"
              c:identifier="glade_name_context_release_name">
        <source-position filename="glade-name-context.h" line="24"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="NameContext" c:type="GladeNameContext*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <function name="new"
                c:identifier="glade_name_context_new"
                introspectable="0">
        <source-position filename="glade-name-context.h" line="10"/>
        <return-value>
          <type name="NameContext" c:type="GladeNameContext*"/>
        </return-value>
      </function>
    </record>
    <class name="NamedIconChooserDialog"
           c:symbol-prefix="named_icon_chooser_dialog"
           c:type="GladeNamedIconChooserDialog"
           parent="Gtk.Dialog"
           glib:type-name="GladeNamedIconChooserDialog"
           glib:get-type="glade_named_icon_chooser_dialog_get_type"
           glib:type-struct="NamedIconChooserDialogClass">
      <source-position filename="glade-named-icon-chooser-dialog.h" line="60"/>
      <implements name="Atk.Implementor"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="glade_named_icon_chooser_dialog_new"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="glade-named-icon-chooser-dialog.c"
             line="1730">Creates a new #GladeNamedIconChooserDialog.  This function is analogous to
gtk_dialog_new_with_buttons().</doc>
        <source-position filename="glade-named-icon-chooser-dialog.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-named-icon-chooser-dialog.c"
               line="1741">a new #GladeNamedIconChooserDialog</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-named-icon-chooser-dialog.c"
                 line="1732">Title of the dialog, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-named-icon-chooser-dialog.c"
                 line="1733">Transient parent of the dialog, or %NULL,</doc>
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </parameter>
          <parameter name="first_button_text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-named-icon-chooser-dialog.c"
                 line="1734">stock ID or text to go in the first button, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-named-icon-chooser-dialog.c"
                 line="1735">response ID for the first button, then additional (button, id)
  pairs, ending with %NULL</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="icon_activated">
        <source-position filename="glade-named-icon-chooser-dialog.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <type name="NamedIconChooserDialog"
                  c:type="GladeNamedIconChooserDialog*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="selection_changed">
        <source-position filename="glade-named-icon-chooser-dialog.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <type name="NamedIconChooserDialog"
                  c:type="GladeNamedIconChooserDialog*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_context"
              c:identifier="glade_named_icon_chooser_dialog_get_context">
        <source-position filename="glade-named-icon-chooser-dialog.h"
                         line="77"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chooser" transfer-ownership="none">
            <type name="NamedIconChooserDialog"
                  c:type="GladeNamedIconChooserDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="glade_named_icon_chooser_dialog_get_icon_name">
        <source-position filename="glade-named-icon-chooser-dialog.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chooser" transfer-ownership="none">
            <type name="NamedIconChooserDialog"
                  c:type="GladeNamedIconChooserDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_context"
              c:identifier="glade_named_icon_chooser_dialog_set_context">
        <source-position filename="glade-named-icon-chooser-dialog.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="chooser" transfer-ownership="none">
            <type name="NamedIconChooserDialog"
                  c:type="GladeNamedIconChooserDialog*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="glade_named_icon_chooser_dialog_set_icon_name">
        <source-position filename="glade-named-icon-chooser-dialog.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="chooser" transfer-ownership="none">
            <type name="NamedIconChooserDialog"
                  c:type="GladeNamedIconChooserDialog*"/>
          </instance-parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Dialog" c:type="GtkDialog"/>
      </field>
      <field name="priv">
        <type name="NamedIconChooserDialogPrivate"
              c:type="GladeNamedIconChooserDialogPrivate*"/>
      </field>
      <glib:signal name="icon-activated" when="last">
        <doc xml:space="preserve"
             filename="glade-named-icon-chooser-dialog.c"
             line="1527">This signal is emitted when the user "activates" an icon
in the named icon chooser.  This can happen by double-clicking on an item
in the recently used resources list, or by pressing
&lt;keycap&gt;Enter&lt;/keycap&gt;.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="selection-changed" when="last">
        <doc xml:space="preserve"
             filename="glade-named-icon-chooser-dialog.c"
             line="1544">This signal is emitted when there is a change in the set of
selected icon names.  This can happen when a user
modifies the selection with the mouse or the keyboard, or when
explicitely calling functions to change the selection.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="NamedIconChooserDialogClass"
            c:type="GladeNamedIconChooserDialogClass"
            glib:is-gtype-struct-for="NamedIconChooserDialog">
      <source-position filename="glade-named-icon-chooser-dialog.h" line="60"/>
      <field name="parent_class">
        <type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
      </field>
      <field name="icon_activated">
        <callback name="icon_activated">
          <source-position filename="glade-named-icon-chooser-dialog.h"
                           line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="dialog" transfer-ownership="none">
              <type name="NamedIconChooserDialog"
                    c:type="GladeNamedIconChooserDialog*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="selection_changed">
        <callback name="selection_changed">
          <source-position filename="glade-named-icon-chooser-dialog.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="dialog" transfer-ownership="none">
              <type name="NamedIconChooserDialog"
                    c:type="GladeNamedIconChooserDialog*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-named-icon-chooser-dialog.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-named-icon-chooser-dialog.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-named-icon-chooser-dialog.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-named-icon-chooser-dialog.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="NamedIconChooserDialogPrivate"
            c:type="GladeNamedIconChooserDialogPrivate"
            disguised="1">
      <source-position filename="glade-named-icon-chooser-dialog.h" line="38"/>
    </record>
    <class name="Palette"
           c:symbol-prefix="palette"
           c:type="GladePalette"
           parent="Gtk.Box"
           glib:type-name="GladePalette"
           glib:get-type="glade_palette_get_type"
           glib:type-struct="PaletteClass">
      <source-position filename="glade-palette.h" line="65"/>
      <implements name="Atk.Implementor"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="glade_palette_new">
        <doc xml:space="preserve"
             filename="glade-palette.c"
             line="669">Creates a new #GladePalette widget</doc>
        <source-position filename="glade-palette.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-palette.c"
               line="674">a new #GladePalette</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="refresh">
        <source-position filename="glade-palette.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="palette" transfer-ownership="none">
            <type name="Palette" c:type="GladePalette*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_item_appearance"
              c:identifier="glade_palette_get_item_appearance">
        <source-position filename="glade-palette.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-palette.c"
               line="845">The appearance of the palette items</doc>
          <type name="ItemAppearance" c:type="GladeItemAppearance"/>
        </return-value>
        <parameters>
          <instance-parameter name="palette" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-palette.c"
                 line="843">a #GladePalette</doc>
            <type name="Palette" c:type="GladePalette*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_project"
              c:identifier="glade_palette_get_project"
              introspectable="0">
        <source-position filename="glade-palette.h" line="79"/>
        <return-value>
          <type name="Project" c:type="GladeProject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="palette" transfer-ownership="none">
            <type name="Palette" c:type="GladePalette*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_selector_button"
              c:identifier="glade_palette_get_show_selector_button">
        <source-position filename="glade-palette.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-palette.c"
               line="873">Whether the selector button is visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="palette" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-palette.c"
                 line="871">a #GladePalette</doc>
            <type name="Palette" c:type="GladePalette*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tool_palette"
              c:identifier="glade_palette_get_tool_palette"
              introspectable="0">
        <source-position filename="glade-palette.h" line="98"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-palette.c"
               line="887">the GtkToolPalette associated to this palette.</doc>
          <type name="Gtk.ToolPalette" c:type="GtkToolPalette*"/>
        </return-value>
        <parameters>
          <instance-parameter name="palette" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-palette.c"
                 line="885">a #GladePalette</doc>
            <type name="Palette" c:type="GladePalette*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_small_item_icons"
              c:identifier="glade_palette_get_use_small_item_icons">
        <source-position filename="glade-palette.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-palette.c"
               line="859">Whether small item icons are used</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="palette" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-palette.c"
                 line="857">a #GladePalette</doc>
            <type name="Palette" c:type="GladePalette*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_item_appearance"
              c:identifier="glade_palette_set_item_appearance">
        <doc xml:space="preserve"
             filename="glade-palette.c"
             line="741">Sets the appearance of the palette items.</doc>
        <source-position filename="glade-palette.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="palette" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-palette.c"
                 line="743">a #GladePalette</doc>
            <type name="Palette" c:type="GladePalette*"/>
          </instance-parameter>
          <parameter name="item_appearance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-palette.c"
                 line="744">the item appearance</doc>
            <type name="ItemAppearance" c:type="GladeItemAppearance"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_project" c:identifier="glade_palette_set_project">
        <source-position filename="glade-palette.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="palette" transfer-ownership="none">
            <type name="Palette" c:type="GladePalette*"/>
          </instance-parameter>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_selector_button"
              c:identifier="glade_palette_set_show_selector_button">
        <doc xml:space="preserve"
             filename="glade-palette.c"
             line="813">Sets whether to show the internal widget selector button</doc>
        <source-position filename="glade-palette.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="palette" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-palette.c"
                 line="815">a #GladePalette</doc>
            <type name="Palette" c:type="GladePalette*"/>
          </instance-parameter>
          <parameter name="show_selector_button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-palette.c"
                 line="816">whether to show selector button</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_small_item_icons"
              c:identifier="glade_palette_set_use_small_item_icons">
        <doc xml:space="preserve"
             filename="glade-palette.c"
             line="785">Sets whether to use small item icons.</doc>
        <source-position filename="glade-palette.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="palette" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-palette.c"
                 line="787">a #GladePalette</doc>
            <type name="Palette" c:type="GladePalette*"/>
          </instance-parameter>
          <parameter name="use_small_item_icons" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-palette.c"
                 line="788">Whether to use small item icons</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="item-appearance" writable="1" transfer-ownership="none">
        <type name="ItemAppearance"/>
      </property>
      <property name="project" writable="1" transfer-ownership="none">
        <type name="Project"/>
      </property>
      <property name="show-selector-button"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="use-small-item-icons"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="PalettePrivate" c:type="GladePalettePrivate*"/>
      </field>
      <glib:signal name="refresh" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="PaletteClass"
            c:type="GladePaletteClass"
            glib:is-gtype-struct-for="Palette">
      <source-position filename="glade-palette.h" line="65"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="refresh">
        <callback name="refresh">
          <source-position filename="glade-palette.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="palette" transfer-ownership="none">
              <type name="Palette" c:type="GladePalette*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-palette.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-palette.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-palette.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-palette.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PalettePrivate" c:type="GladePalettePrivate" disguised="1">
      <source-position filename="glade-palette.h" line="45"/>
    </record>
    <class name="ParamObjects"
           c:symbol-prefix="param_objects"
           parent="GObject.ParamSpec"
           glib:type-name="GladeParamObjects"
           glib:get-type="glade_param_objects_get_type"
           glib:fundamental="1">
    </class>
    <record name="ParamSpecObjects"
            c:type="GladeParamSpecObjects"
            disguised="1">
      <source-position filename="glade-builtins.h" line="9"/>
      <method name="get_type" c:identifier="glade_param_spec_objects_get_type">
        <source-position filename="glade-builtins.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="pspec" transfer-ownership="none">
            <type name="ParamSpecObjects" c:type="GladeParamSpecObjects*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_type" c:identifier="glade_param_spec_objects_set_type">
        <source-position filename="glade-builtins.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pspec" transfer-ownership="none">
            <type name="ParamSpecObjects" c:type="GladeParamSpecObjects*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <class name="Placeholder"
           c:symbol-prefix="placeholder"
           c:type="GladePlaceholder"
           parent="Gtk.Widget"
           glib:type-name="GladePlaceholder"
           glib:get-type="glade_placeholder_get_type"
           glib:type-struct="PlaceholderClass">
      <source-position filename="glade-placeholder.h" line="58"/>
      <implements name="Atk.Implementor"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="glade_placeholder_new">
        <source-position filename="glade-placeholder.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-placeholder.c"
               line="636">a new #GladePlaceholder cast as a #GtkWidget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_parent"
              c:identifier="glade_placeholder_get_parent"
              introspectable="0">
        <source-position filename="glade-placeholder.h" line="65"/>
        <return-value>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="placeholder" transfer-ownership="none">
            <type name="Placeholder" c:type="GladePlaceholder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_project"
              c:identifier="glade_placeholder_get_project"
              introspectable="0">
        <source-position filename="glade-placeholder.h" line="64"/>
        <return-value>
          <type name="Project" c:type="GladeProject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="placeholder" transfer-ownership="none">
            <type name="Placeholder" c:type="GladePlaceholder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="packing_actions"
              c:identifier="glade_placeholder_packing_actions"
              introspectable="0">
        <source-position filename="glade-placeholder.h" line="66"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="placeholder" transfer-ownership="none">
            <type name="Placeholder" c:type="GladePlaceholder*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="widget">
        <type name="Gtk.Widget" c:type="GtkWidget"/>
      </field>
      <field name="priv">
        <type name="PlaceholderPrivate" c:type="GladePlaceholderPrivate*"/>
      </field>
    </class>
    <record name="PlaceholderClass"
            c:type="GladePlaceholderClass"
            glib:is-gtype-struct-for="Placeholder">
      <source-position filename="glade-placeholder.h" line="58"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-placeholder.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-placeholder.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-placeholder.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-placeholder.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PlaceholderPrivate"
            c:type="GladePlaceholderPrivate"
            disguised="1">
      <source-position filename="glade-placeholder.h" line="41"/>
    </record>
    <enumeration name="PointerMode"
                 glib:type-name="GladePointerMode"
                 glib:get-type="glade_pointer_mode_get_type"
                 c:type="GladePointerMode">
      <doc xml:space="preserve"
           filename="glade-project.h"
           line="20">Indicates what the pointer is used for in the workspace.</doc>
      <member name="select"
              value="0"
              c:identifier="GLADE_POINTER_SELECT"
              glib:nick="select">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="22">Mouse pointer used for selecting widgets</doc>
      </member>
      <member name="add_widget"
              value="1"
              c:identifier="GLADE_POINTER_ADD_WIDGET"
              glib:nick="add-widget">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="23">Mouse pointer used for adding widgets</doc>
      </member>
      <member name="drag_resize"
              value="2"
              c:identifier="GLADE_POINTER_DRAG_RESIZE"
              glib:nick="drag-resize">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="24">Mouse pointer used for dragging and
                            resizing widgets in containers</doc>
      </member>
      <member name="margin_edit"
              value="3"
              c:identifier="GLADE_POINTER_MARGIN_EDIT"
              glib:nick="margin-edit">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="26">Mouse pointer used to edit widget margins</doc>
      </member>
      <member name="align_edit"
              value="4"
              c:identifier="GLADE_POINTER_ALIGN_EDIT"
              glib:nick="align-edit">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="27">Mouse pointer used to edit widget alignment</doc>
      </member>
    </enumeration>
    <callback name="PostCreateFunc" c:type="GladePostCreateFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="450">This function is called exactly once for any project object
instance and can be for any #GladeCreateReason.</doc>
      <source-position filename="glade-widget-adaptor.h" line="459"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3343">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3344">The #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="reason" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3345">The #GladeCreateReason that @object was created for</doc>
          <type name="CreateReason" c:type="GladeCreateReason"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Project"
           c:symbol-prefix="project"
           c:type="GladeProject"
           parent="GObject.Object"
           glib:type-name="GladeProject"
           glib:get-type="glade_project_get_type"
           glib:type-struct="ProjectClass">
      <source-position filename="glade-project.h" line="127"/>
      <implements name="Gtk.TreeDragSource"/>
      <implements name="Gtk.TreeModel"/>
      <constructor name="new" c:identifier="glade_project_new">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="1360">Creates a new #GladeProject.</doc>
        <source-position filename="glade-project.h" line="132"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="1365">a new #GladeProject</doc>
          <type name="Project" c:type="GladeProject*"/>
        </return-value>
      </constructor>
      <function name="load"
                c:identifier="glade_project_load"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="2245">Opens a project at the given path.</doc>
        <source-position filename="glade-project.h" line="133"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="2251">a new #GladeProject for the opened project on success, %NULL on
         failure</doc>
          <type name="Project" c:type="GladeProject*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="verify_property"
                c:identifier="glade_project_verify_property">
        <source-position filename="glade-project.h" line="273"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
        </parameters>
      </function>
      <function name="verify_signal"
                c:identifier="glade_project_verify_signal">
        <source-position filename="glade-project.h" line="274"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="add_object" invoker="add_object">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="3944">Adds an object to the project.</doc>
        <source-position filename="glade-project.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3946">the #GladeProject the widget is added to</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="changed">
        <source-position filename="glade-project.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="command" transfer-ownership="none">
            <type name="Command" c:type="GladeCommand*"/>
          </parameter>
          <parameter name="forward" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close">
        <source-position filename="glade-project.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="next_redo_item"
                      invoker="next_redo_item"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4687">Gets the next redo item on @project's command stack.</doc>
        <source-position filename="glade-project.h" line="104"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4693">the #GladeCommand</doc>
          <type name="Command" c:type="GladeCommand*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4689">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="next_undo_item"
                      invoker="next_undo_item"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4672">Gets the next undo item on @project's command stack.</doc>
        <source-position filename="glade-project.h" line="103"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4678">the #GladeCommand</doc>
          <type name="Command" c:type="GladeCommand*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4674">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="parse_finished">
        <source-position filename="glade-project.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="push_undo" invoker="push_undo">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4702">Pushes a newly created #GladeCommand onto @projects stack.</doc>
        <source-position filename="glade-project.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4704">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="command" transfer-ownership="none">
            <type name="Command" c:type="GladeCommand*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="redo" invoker="redo">
        <source-position filename="glade-project.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_object" invoker="remove_object">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4079">Removes @object from @project.

Note that when removing the #GObject from the project we
don't change -&gt;project in the associated #GladeWidget; this
way UNDO can work.</doc>
        <source-position filename="glade-project.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4081">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="selection_changed" invoker="selection_changed">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4374">Causes @project to emit a "selection_changed" signal.</doc>
        <source-position filename="glade-project.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4376">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="undo" invoker="undo">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4659">Redoes a #GladeCommand in this project.</doc>
        <source-position filename="glade-project.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4661">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="widget_name_changed">
        <source-position filename="glade-project.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_object" c:identifier="glade_project_add_object">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="3944">Adds an object to the project.</doc>
        <source-position filename="glade-project.h" line="189"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3946">the #GladeProject the widget is added to</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3947">the #GObject to add</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="autosave" c:identifier="glade_project_autosave" throws="1">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="2776">Saves an autosave snapshot of @project to it's currently set path

If the project was never saved, nothing is done and %TRUE is returned.</doc>
        <source-position filename="glade-project.h" line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="2785">%TRUE on success, %FALSE on failure</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="2778">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="available_widget_name"
              c:identifier="glade_project_available_widget_name">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="3713">Checks whether @name is an appropriate name for @widget.</doc>
        <source-position filename="glade-project.h" line="207"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="3721">whether the name is available or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3715">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3716">the #GladeWidget intended to recieve a new name</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3717">base name of the widget to create</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="backup" c:identifier="glade_project_backup" throws="1">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="2731">Backup the last file which @project has saved to
or was loaded from.

If @path is not the same as the current project
path, then the current project path will be
backed up under the new location.

If this the first save, and no persisted file
exists, then %TRUE is returned and no backup is made.</doc>
        <source-position filename="glade-project.h" line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="2747">%TRUE on success, %FALSE on failure</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="2733">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="2734">location to save glade file</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cancel_load" c:identifier="glade_project_cancel_load">
        <source-position filename="glade-project.h" line="150"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="check_reordered"
              c:identifier="glade_project_check_reordered"
              introspectable="0">
        <source-position filename="glade-project.h" line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="old_order" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="command_cut" c:identifier="glade_project_command_cut">
        <source-position filename="glade-project.h" line="280"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_delete"
              c:identifier="glade_project_command_delete">
        <source-position filename="glade-project.h" line="283"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_paste" c:identifier="glade_project_command_paste">
        <source-position filename="glade-project.h" line="281"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="placeholder" transfer-ownership="none">
            <type name="Placeholder" c:type="GladePlaceholder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_selection"
              c:identifier="glade_project_copy_selection">
        <source-position filename="glade-project.h" line="279"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="display_dependencies"
              c:identifier="glade_project_display_dependencies">
        <source-position filename="glade-project.h" line="253"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_add_item"
              c:identifier="glade_project_get_add_item"
              introspectable="0">
        <source-position filename="glade-project.h" line="243"/>
        <return-value>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_css_provider_path"
              c:identifier="glade_project_get_css_provider_path">
        <source-position filename="glade-project.h" line="264"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="5200">the CSS path of the custom provider used for @project</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="5198">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_file_mtime"
              c:identifier="glade_project_get_file_mtime">
        <source-position filename="glade-project.h" line="235"/>
        <return-value transfer-ownership="none">
          <type name="glong" c:type="time_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_selection"
              c:identifier="glade_project_get_has_selection">
        <source-position filename="glade-project.h" line="228"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4428">whether @project currently has a selection</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4426">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_license" c:identifier="glade_project_get_license">
        <source-position filename="glade-project.h" line="175"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_modified" c:identifier="glade_project_get_modified">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4197">Get's whether the project has been modified since it was last saved.</doc>
        <source-position filename="glade-project.h" line="237"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4203">%TRUE if the project has been modified since it was last saved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4199">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="glade_project_get_name">
        <source-position filename="glade-project.h" line="232"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_objects"
              c:identifier="glade_project_get_objects"
              introspectable="0">
        <source-position filename="glade-project.h" line="188"/>
        <return-value transfer-ownership="none">
          <type name="GLib.List" c:type="const GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_path" c:identifier="glade_project_get_path">
        <source-position filename="glade-project.h" line="231"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pointer_mode"
              c:identifier="glade_project_get_pointer_mode">
        <source-position filename="glade-project.h" line="240"/>
        <return-value transfer-ownership="none">
          <type name="PointerMode" c:type="GladePointerMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_readonly" c:identifier="glade_project_get_readonly">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4358">Gets whether the project is read only or not</doc>
        <source-position filename="glade-project.h" line="236"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4364">TRUE if project is read only</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4360">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_resource_path"
              c:identifier="glade_project_get_resource_path">
        <source-position filename="glade-project.h" line="159"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_target_version"
              c:identifier="glade_project_get_target_version">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4332">Fetches the target version of the @project for @catalog.</doc>
        <source-position filename="glade-project.h" line="248"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4334">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4335">the name of the catalog @project includes</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="major" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4336">the return location for the target major version</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="minor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4337">the return location for the target minor version</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_template"
              c:identifier="glade_project_get_template"
              introspectable="0">
        <source-position filename="glade-project.h" line="170"/>
        <return-value>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_translation_domain"
              c:identifier="glade_project_get_translation_domain">
        <source-position filename="glade-project.h" line="259"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="5086">the translation domain</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="5084">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_widget_by_name"
              c:identifier="glade_project_get_widget_by_name"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="3675">Searches under @ancestor in @project looking for a #GladeWidget named @name.</doc>
        <source-position filename="glade-project.h" line="199"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="3682">a pointer to the widget, %NULL if the widget does not exist</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3677">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3678">The user visible name of the widget we are looking for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_object" c:identifier="glade_project_has_object">
        <source-position filename="glade-project.h" line="193"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4046">whether this object is in this project.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4043">the #GladeProject the widget is added to</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4044">the #GObject to search</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_loading" c:identifier="glade_project_is_loading">
        <source-position filename="glade-project.h" line="234"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4959">Whether the project is being loaded or not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4957">A #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_selected" c:identifier="glade_project_is_selected">
        <source-position filename="glade-project.h" line="212"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4443">whether @object is in @project selection</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4440">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4441">a #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_cancelled"
              c:identifier="glade_project_load_cancelled">
        <source-position filename="glade-project.h" line="149"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_from_file"
              c:identifier="glade_project_load_from_file">
        <source-position filename="glade-project.h" line="134"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_widget_name"
              c:identifier="glade_project_new_widget_name">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="3753">Creates a new name for a widget that doesn't collide with any of the names
already in @project. This name will start with @base_name.

Note the @widget parameter is ignored and preserved only for historical reasons.</doc>
        <source-position filename="glade-project.h" line="204"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="3764">a string containing the new name, %NULL if there is not enough
         memory for this string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3755">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3756">the #GladeWidget intended to recieve a new name, or %NULL</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="base_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3757">base name of the widget to create</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_redo_item"
              c:identifier="glade_project_next_redo_item"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4687">Gets the next redo item on @project's command stack.</doc>
        <source-position filename="glade-project.h" line="181"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4693">the #GladeCommand</doc>
          <type name="Command" c:type="GladeCommand*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4689">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next_undo_item"
              c:identifier="glade_project_next_undo_item"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4672">Gets the next undo item on @project's command stack.</doc>
        <source-position filename="glade-project.h" line="180"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4678">the #GladeCommand</doc>
          <type name="Command" c:type="GladeCommand*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4674">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="preview" c:identifier="glade_project_preview">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="3007">Creates and displays a preview window holding a snapshot of @gwidget's
toplevel window in @project. Note that the preview window is only a snapshot
of the current state of the project, there is no limit on how many preview
snapshots can be taken.</doc>
        <source-position filename="glade-project.h" line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3009">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="gwidget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3010">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="properties" c:identifier="glade_project_properties">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4992">Runs a document properties dialog for @project.</doc>
        <source-position filename="glade-project.h" line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4994">A #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="push_progress" c:identifier="glade_project_push_progress">
        <source-position filename="glade-project.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="push_undo" c:identifier="glade_project_push_undo">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4702">Pushes a newly created #GladeCommand onto @projects stack.</doc>
        <source-position filename="glade-project.h" line="182"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4704">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="cmd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4705">the #GladeCommand</doc>
            <type name="Command" c:type="GladeCommand*"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_selection_changed"
              c:identifier="glade_project_queue_selection_changed">
        <source-position filename="glade-project.h" line="226"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="redo" c:identifier="glade_project_redo">
        <source-position filename="glade-project.h" line="179"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="redo_items"
              c:identifier="glade_project_redo_items"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4828">Creates a menu of the undo items in the project stack</doc>
        <source-position filename="glade-project.h" line="185"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4834">A newly created menu</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4830">A #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_object" c:identifier="glade_project_remove_object">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4079">Removes @object from @project.

Note that when removing the #GObject from the project we
don't change -&gt;project in the associated #GladeWidget; this
way UNDO can work.</doc>
        <source-position filename="glade-project.h" line="191"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4081">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4082">the #GObject to remove</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="required_libs"
              c:identifier="glade_project_required_libs"
              introspectable="0">
        <source-position filename="glade-project.h" line="252"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4599">a #GList of allocated strings which are the names
of the required catalogs for this project</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4597">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_path" c:identifier="glade_project_reset_path">
        <source-position filename="glade-project.h" line="233"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="resource_fullpath"
              c:identifier="glade_project_resource_fullpath">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4875">Project resource strings are always relative, this function tranforms a
path relative to project to a full path.</doc>
        <source-position filename="glade-project.h" line="155"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4883">A newly allocated string holding the
         full path to the resource.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4877">The #GladeProject.</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4878">The resource basename</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save" c:identifier="glade_project_save" throws="1">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="2988">Saves @project to the given path.</doc>
        <source-position filename="glade-project.h" line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="2996">%TRUE on success, %FALSE on failure</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="2990">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="2991">location to save glade file</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_verify"
              c:identifier="glade_project_save_verify"
              throws="1">
        <source-position filename="glade-project.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="VerifyFlags" c:type="GladeVerifyFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="selection_add" c:identifier="glade_project_selection_add">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4515">Adds @object to the selection chain of @project

If @emit_signal is %TRUE, calls glade_project_selection_changed().</doc>
        <source-position filename="glade-project.h" line="217"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4517">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4518">a #GObject in @project</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="emit_signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4519">whether or not to emit a signal indicating
              a selection change</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="selection_changed"
              c:identifier="glade_project_selection_changed">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4374">Causes @project to emit a "selection_changed" signal.</doc>
        <source-position filename="glade-project.h" line="225"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4376">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="selection_clear"
              c:identifier="glade_project_selection_clear">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4452">Clears @project's selection chain

If @emit_signal is %TRUE, calls glade_project_selection_changed().</doc>
        <source-position filename="glade-project.h" line="223"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4454">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="emit_signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4455">whether or not to emit a signal indication a selection change</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="selection_get"
              c:identifier="glade_project_selection_get"
              introspectable="0">
        <source-position filename="glade-project.h" line="227"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4585">a #GList containing the #GtkWidget items currently selected in @project</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4583">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="selection_remove"
              c:identifier="glade_project_selection_remove">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4485">Removes @object from the selection chain of @project

If @emit_signal is %TRUE, calls glade_project_selection_changed().</doc>
        <source-position filename="glade-project.h" line="220"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4487">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4488">a #GObject in @project</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="emit_signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4489">whether or not to emit a signal
              indicating a selection change</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="selection_set" c:identifier="glade_project_selection_set">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4553">Set the selection in @project to @object

If @emit_signal is %TRUE, calls glade_project_selection_changed().</doc>
        <source-position filename="glade-project.h" line="214"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4555">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4556">a #GObject in @project</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="emit_signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4557">whether or not to emit a signal
              indicating a selection change</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_add_item" c:identifier="glade_project_set_add_item">
        <source-position filename="glade-project.h" line="241"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_css_provider_path"
              c:identifier="glade_project_set_css_provider_path">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="5145">Set the custom CSS provider path to use in @project</doc>
        <source-position filename="glade-project.h" line="261"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="5147">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="5148">a CSS file path</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_license" c:identifier="glade_project_set_license">
        <source-position filename="glade-project.h" line="172"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="license" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pointer_mode"
              c:identifier="glade_project_set_pointer_mode">
        <source-position filename="glade-project.h" line="238"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="PointerMode" c:type="GladePointerMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_resource_path"
              c:identifier="glade_project_set_resource_path">
        <source-position filename="glade-project.h" line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_target_version"
              c:identifier="glade_project_set_target_version">
        <source-position filename="glade-project.h" line="244"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="catalog" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="major" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="minor" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_template" c:identifier="glade_project_set_template">
        <source-position filename="glade-project.h" line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_translation_domain"
              c:identifier="glade_project_set_translation_domain">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="5056">Set the project translation domain.</doc>
        <source-position filename="glade-project.h" line="257"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="5058">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="5059">the translation domain</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_widget_name"
              c:identifier="glade_project_set_widget_name">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="3843">Sets @name on @widget in @project, if @name is not
available then a new name will be used.</doc>
        <source-position filename="glade-project.h" line="201"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3845">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3846">the #GladeWidget to set a name on</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3847">the name to set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="toplevels"
              c:identifier="glade_project_toplevels"
              introspectable="0">
        <source-position filename="glade-project.h" line="255"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="5046">a #GList containing the #GtkWidget toplevel items in @project</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="5044">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="undo" c:identifier="glade_project_undo">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4659">Redoes a #GladeCommand in this project.</doc>
        <source-position filename="glade-project.h" line="178"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4661">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="undo_items"
              c:identifier="glade_project_undo_items"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4790">Creates a menu of the undo items in the project stack</doc>
        <source-position filename="glade-project.h" line="184"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="4796">A newly created menu</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4792">A #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="verify" c:identifier="glade_project_verify">
        <source-position filename="glade-project.h" line="267"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="saving" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="VerifyFlags" c:type="GladeVerifyFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="verify_widget_adaptor"
              c:identifier="glade_project_verify_widget_adaptor">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="3610">Checks the supported state of this widget adaptor
and generates a string to show in the UI describing why.</doc>
        <source-position filename="glade-project.h" line="270"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-project.c"
               line="3619">A newly allocated string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3612">A #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3613">the #GladeWidgetAdaptor to verify</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="3614">a return location for a #GladeSupportMask</doc>
            <type name="SupportMask" c:type="GladeSupportMask*"/>
          </parameter>
        </parameters>
      </method>
      <method name="widget_changed"
              c:identifier="glade_project_widget_changed">
        <source-position filename="glade-project.h" line="195"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="gwidget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="widget_visibility_changed"
              c:identifier="glade_project_widget_visibility_changed">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="4915">Emmits  GladeProject::widget-visibility-changed signal</doc>
        <source-position filename="glade-project.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4917">The #GladeProject.</doc>
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4918">The widget which visibility changed</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4919">widget visibility value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="writing_preview"
              c:identifier="glade_project_writing_preview">
        <source-position filename="glade-project.h" line="276"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="add-item" transfer-ownership="none">
        <type name="WidgetAdaptor"/>
      </property>
      <property name="css-provider-path"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="has-selection" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="license" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="modified" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="path" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="pointer-mode" transfer-ownership="none">
        <type name="PointerMode"/>
      </property>
      <property name="read-only" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="resource-path" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="template" writable="1" transfer-ownership="none">
        <type name="Widget"/>
      </property>
      <property name="translation-domain"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ProjectPrivate" c:type="GladeProjectPrivate*"/>
      </field>
      <glib:signal name="activate-signal-handler" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gladewidget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="1018">the #GladeWidget</doc>
            <type name="Widget"/>
          </parameter>
          <parameter name="signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="1019">the #GladeSignal that was activated</doc>
            <type name="Signal"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="add-signal-handler" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gladewidget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="962">the #GladeWidget</doc>
            <type name="Widget"/>
          </parameter>
          <parameter name="signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="963">the #GladeSignal that was added to @gladewidget.</doc>
            <type name="Signal"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="add-widget" when="last">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="793">Emitted when a widget is added to a project.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="796">the #GladeWidget that was added to @gladeproject.</doc>
            <type name="Widget"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="change-signal-handler" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gladewidget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="998">the #GladeWidget</doc>
            <type name="Widget"/>
          </parameter>
          <parameter name="old_signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="999">the old #GladeSignal that changed</doc>
            <type name="Signal"/>
          </parameter>
          <parameter name="new_signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="1000">the new #GladeSignal</doc>
            <type name="Signal"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="changed" when="first">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="871">Emitted when a @gladeproject's state changes via a #GladeCommand.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="874">the #GladeCommand that was executed</doc>
            <type name="Command"/>
          </parameter>
          <parameter name="arg2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="875">whether the command was executed or undone.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="close" when="last">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="857">Emitted when a project is closing (a good time to clean up
any associated resources).</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="load-progress" when="first">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="927">Emitted while @project is loading.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="objects_total" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="930">the total amount of objects to load</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="objects_loaded" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="931">the current amount of loaded objects</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="parse-began" when="first">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="888">Emitted when @gladeproject parsing starts.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="parse-finished" when="first">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="901">Emitted when @gladeproject parsing has finished.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="remove-signal-handler" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gladewidget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="980">the #GladeWidget</doc>
            <type name="Widget"/>
          </parameter>
          <parameter name="signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="981">the #GladeSignal that was removed from @gladewidget.</doc>
            <type name="Signal"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="remove-widget" when="last">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="809">Emitted when a widget is removed from a project.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="812">the #GladeWidget that was removed from @gladeproject.</doc>
            <type name="Widget"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="selection-changed" when="last">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="843">Emitted when @gladeproject selection list changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="targets-changed" when="first">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="914">Emitted when @gladeproject target versions change.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="widget-name-changed" when="last">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="826">Emitted when @gwidget's name changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="829">the #GladeWidget who's name changed.</doc>
            <type name="Widget"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="widget-visibility-changed" when="first">
        <doc xml:space="preserve"
             filename="glade-project.c"
             line="943">Emitted when the visivility of a widget changed</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="946">the widget that its visibity changed</doc>
            <type name="Widget"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="947">the current visiblity of the widget</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ProjectClass"
            c:type="GladeProjectClass"
            glib:is-gtype-struct-for="Project">
      <source-position filename="glade-project.h" line="127"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="add_object">
        <callback name="add_object">
          <source-position filename="glade-project.h" line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-project.c"
                   line="3946">the #GladeProject the widget is added to</doc>
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
            <parameter name="widget" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_object">
        <callback name="remove_object">
          <source-position filename="glade-project.h" line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-project.c"
                   line="4081">a #GladeProject</doc>
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
            <parameter name="widget" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="undo">
        <callback name="undo">
          <source-position filename="glade-project.h" line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-project.c"
                   line="4661">a #GladeProject</doc>
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="redo">
        <callback name="redo">
          <source-position filename="glade-project.h" line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="next_undo_item" introspectable="0">
        <callback name="next_undo_item" introspectable="0">
          <source-position filename="glade-project.h" line="103"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4678">the #GladeCommand</doc>
            <type name="Command" c:type="GladeCommand*"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-project.c"
                   line="4674">a #GladeProject</doc>
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="next_redo_item" introspectable="0">
        <callback name="next_redo_item" introspectable="0">
          <source-position filename="glade-project.h" line="104"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="glade-project.c"
                 line="4693">the #GladeCommand</doc>
            <type name="Command" c:type="GladeCommand*"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-project.c"
                   line="4689">a #GladeProject</doc>
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="push_undo">
        <callback name="push_undo">
          <source-position filename="glade-project.h" line="105"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-project.c"
                   line="4704">a #GladeProject</doc>
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
            <parameter name="command" transfer-ownership="none">
              <type name="Command" c:type="GladeCommand*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="glade-project.h" line="108"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
            <parameter name="command" transfer-ownership="none">
              <type name="Command" c:type="GladeCommand*"/>
            </parameter>
            <parameter name="forward" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="widget_name_changed">
        <callback name="widget_name_changed">
          <source-position filename="glade-project.h" line="112"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
            <parameter name="widget" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="selection_changed">
        <callback name="selection_changed">
          <source-position filename="glade-project.h" line="114"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="glade-project.c"
                   line="4376">a #GladeProject</doc>
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close">
        <callback name="close">
          <source-position filename="glade-project.h" line="115"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parse_finished">
        <callback name="parse_finished">
          <source-position filename="glade-project.h" line="117"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="project" transfer-ownership="none">
              <type name="Project" c:type="GladeProject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-project.h" line="119"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-project.h" line="120"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-project.h" line="121"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-project.h" line="122"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved5">
        <callback name="glade_reserved5">
          <source-position filename="glade-project.h" line="123"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved6">
        <callback name="glade_reserved6">
          <source-position filename="glade-project.h" line="124"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved7">
        <callback name="glade_reserved7">
          <source-position filename="glade-project.h" line="125"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved8">
        <callback name="glade_reserved8">
          <source-position filename="glade-project.h" line="126"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ProjectModelColumns"
                 glib:type-name="GladeProjectModelColumns"
                 glib:get-type="glade_project_model_columns_get_type"
                 c:type="GladeProjectModelColumns">
      <doc xml:space="preserve"
           filename="glade-project.h"
           line="47">The tree view columns provided by the GtkTreeModel implemented
by GladeProject</doc>
      <member name="column_icon_name"
              value="0"
              c:identifier="GLADE_PROJECT_MODEL_COLUMN_ICON_NAME"
              glib:nick="column-icon-name">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="49">name of the icon for the widget</doc>
      </member>
      <member name="column_name"
              value="1"
              c:identifier="GLADE_PROJECT_MODEL_COLUMN_NAME"
              glib:nick="column-name">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="50">Name of the widget</doc>
      </member>
      <member name="column_type_name"
              value="2"
              c:identifier="GLADE_PROJECT_MODEL_COLUMN_TYPE_NAME"
              glib:nick="column-type-name">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="51">The type name of the widget</doc>
      </member>
      <member name="column_object"
              value="3"
              c:identifier="GLADE_PROJECT_MODEL_COLUMN_OBJECT"
              glib:nick="column-object">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="52">the GObject of the widget</doc>
      </member>
      <member name="column_misc"
              value="4"
              c:identifier="GLADE_PROJECT_MODEL_COLUMN_MISC"
              glib:nick="column-misc">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="53">the auxilary text describing a widget's role</doc>
      </member>
      <member name="column_warning"
              value="5"
              c:identifier="GLADE_PROJECT_MODEL_COLUMN_WARNING"
              glib:nick="column-warning">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="54">the support warning text for this widget</doc>
      </member>
      <member name="n_columns"
              value="6"
              c:identifier="GLADE_PROJECT_MODEL_N_COLUMNS"
              glib:nick="n-columns">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="55">Number of columns</doc>
      </member>
    </enumeration>
    <record name="ProjectPrivate" c:type="GladeProjectPrivate" disguised="1">
      <source-position filename="glade-project.h" line="17"/>
    </record>
    <class name="Property"
           c:symbol-prefix="property"
           c:type="GladeProperty"
           parent="GObject.Object"
           glib:type-name="GladeProperty"
           glib:get-type="glade_property_get_type"
           glib:type-struct="PropertyClass">
      <source-position filename="glade-property-class.h" line="55"/>
      <constructor name="new" c:identifier="glade_property_new">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="775">Creates a #GladeProperty of type @klass for @widget with @value; if
@value is %NULL, then the introspected default value for that property
will be used.</doc>
        <source-position filename="glade-property.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-property.c"
               line="786">The newly created #GladeProperty</doc>
          <type name="Property" c:type="GladeProperty*"/>
        </return-value>
        <parameters>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="777">A #GladePropertyClass defining this property</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="778">The #GladeWidget this property is created for</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="779">The initial #GValue of the property or %NULL
        (the #GladeProperty will assume ownership of @value)</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="pop_superuser"
                c:identifier="glade_property_pop_superuser">
        <source-position filename="glade-property.h" line="180"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="push_superuser"
                c:identifier="glade_property_push_superuser">
        <source-position filename="glade-property.h" line="178"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="superuser" c:identifier="glade_property_superuser">
        <source-position filename="glade-property.h" line="182"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </function>
      <method name="add_object" c:identifier="glade_property_add_object">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1281">Adds @object to the object list in @property.

Note: This function expects @property to be a #GladeParamSpecObjects
or #GParamSpecObject type property.</doc>
        <source-position filename="glade-property.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1283">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1284">The #GObject to add</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="default" c:identifier="glade_property_default">
        <source-position filename="glade-property.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property.c"
               line="890">Whether this property is at its default value</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="888">A #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="dup" c:identifier="glade_property_dup" introspectable="0">
        <source-position filename="glade-property.h" line="68"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-property.c"
               line="823">A newly duplicated property based on the new widget</doc>
          <type name="Property" c:type="GladeProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="template_prop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="820">A #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="821">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equals"
              c:identifier="glade_property_equals"
              introspectable="0">
        <source-position filename="glade-property.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property.c"
               line="953">Whether this property is equal to the value provided</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="950">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="951">a provided property value</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="equals_value" c:identifier="glade_property_equals_value">
        <source-position filename="glade-property.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property.c"
               line="915">Whether this property is equal to the value provided</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="912">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="913">a #GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="glade_property_get" introspectable="0">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1084">Retrieve the property value</doc>
        <source-position filename="glade-property.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1086">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1087">An address to store the value</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="get_class"
              c:identifier="glade_property_get_class"
              introspectable="0">
        <source-position filename="glade-property.h" line="124"/>
        <return-value>
          <type name="PropertyClass" c:type="GladePropertyClass*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default" c:identifier="glade_property_get_default">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1049">Retrieve the default property value</doc>
        <source-position filename="glade-property.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1051">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1052">a #GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_enabled" c:identifier="glade_property_get_enabled">
        <source-position filename="glade-property.h" line="150"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_save_always"
              c:identifier="glade_property_get_save_always">
        <source-position filename="glade-property.h" line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property.c"
               line="1558">whether this property is special cased
to always be saved regardless of its default value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1556">A #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sensitive" c:identifier="glade_property_get_sensitive">
        <source-position filename="glade-property.h" line="138"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="glade_property_get_state">
        <source-position filename="glade-property.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="PropertyState" c:type="GladePropertyState"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_support_warning"
              c:identifier="glade_property_get_support_warning">
        <source-position filename="glade-property.h" line="134"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_va_list"
              c:identifier="glade_property_get_va_list"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1069">Retrieve the property value</doc>
        <source-position filename="glade-property.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1071">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="vl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1072">a va_list</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="glade_property_get_value">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1034">Retrieve the property value</doc>
        <source-position filename="glade-property.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1036">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1037">a #GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_widget"
              c:identifier="glade_property_get_widget"
              introspectable="0">
        <source-position filename="glade-property.h" line="155"/>
        <return-value>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="i18n_get_comment"
              c:identifier="glade_property_i18n_get_comment">
        <source-position filename="glade-property.h" line="166"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="i18n_get_context"
              c:identifier="glade_property_i18n_get_context">
        <source-position filename="glade-property.h" line="171"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="i18n_get_translatable"
              c:identifier="glade_property_i18n_get_translatable">
        <source-position filename="glade-property.h" line="176"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="i18n_set_comment"
              c:identifier="glade_property_i18n_set_comment">
        <source-position filename="glade-property.h" line="163"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="i18n_set_context"
              c:identifier="glade_property_i18n_set_context">
        <source-position filename="glade-property.h" line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="i18n_set_translatable"
              c:identifier="glade_property_i18n_set_translatable">
        <source-position filename="glade-property.h" line="173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="translatable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="inline_value" c:identifier="glade_property_inline_value">
        <source-position filename="glade-property.h" line="159"/>
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="glade_property_load">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1116">Loads the value of @property from the coresponding object instance</doc>
        <source-position filename="glade-property.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1118">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="make_string" c:identifier="glade_property_make_string">
        <source-position filename="glade-property.h" line="153"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="original_default"
              c:identifier="glade_property_original_default">
        <source-position filename="glade-property.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property.c"
               line="902">Whether this property is at its original default value</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="900">A #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="original_reset"
              c:identifier="glade_property_original_reset">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="859">Resets this property to its original default value</doc>
        <source-position filename="glade-property.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="861">A #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read" c:identifier="glade_property_read">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1129">Read the value and any attributes for @property from @node, assumes
@property is being loaded for @project

Note that object values will only be resolved after the project is
completely loaded</doc>
        <source-position filename="glade-property.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1131">a #GladeProperty or #NULL</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1132">the #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1133">the #GladeXmlNode to read, will either be a 'widget'
       node or a 'child' node for packing properties.</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_object" c:identifier="glade_property_remove_object">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1324">Removes @object from the object list in @property.

Note: This function expects @property to be a #GladeParamSpecObjects
or #GParamSpecObject type property.</doc>
        <source-position filename="glade-property.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1326">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1327">The #GObject to add</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="glade_property_reset">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="847">Resets this property to its default value</doc>
        <source-position filename="glade-property.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="849">A #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set" c:identifier="glade_property_set" introspectable="0">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1012">Sets the property's value (in a convenient way)</doc>
        <source-position filename="glade-property.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1014">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1015">the value to set</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_enabled" c:identifier="glade_property_set_enabled">
        <source-position filename="glade-property.h" line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_save_always"
              c:identifier="glade_property_set_save_always">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1535">Sets whether this property should be special cased
to always be saved regardless of its default value.
(used for some special cases like properties
that are assigned initial values in composite widgets
or derived widget code).</doc>
        <source-position filename="glade-property.h" line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1537">A #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1538">the value to set</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sensitive" c:identifier="glade_property_set_sensitive">
        <source-position filename="glade-property.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_support_warning"
              c:identifier="glade_property_set_support_warning">
        <source-position filename="glade-property.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="disable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_va_list"
              c:identifier="glade_property_set_va_list"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="987">Sets the property's value</doc>
        <source-position filename="glade-property.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="989">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="vl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="990">a va_list with value to set</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value" c:identifier="glade_property_set_value">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="970">Sets the property's value</doc>
        <source-position filename="glade-property.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property.c"
               line="977">Whether the property was successfully set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="972">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="973">a #GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_widget" c:identifier="glade_property_set_widget">
        <source-position filename="glade-property.h" line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sync" c:identifier="glade_property_sync">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1103">Synchronize the object with this property</doc>
        <source-position filename="glade-property.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1105">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="warn_usage" c:identifier="glade_property_warn_usage">
        <source-position filename="glade-property.h" line="136"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="write" c:identifier="glade_property_write">
        <doc xml:space="preserve"
             filename="glade-property.c"
             line="1202">Write @property to @node</doc>
        <source-position filename="glade-property.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1204">a #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1205">A #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property.c"
                 line="1206">A #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <property name="class"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="enabled" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="i18n-comment" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="i18n-context" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="i18n-translatable"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="precision" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="sensitive" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="state" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="PropertyPrivate" c:type="GladePropertyPrivate*"/>
      </field>
      <glib:signal name="tooltip-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="value-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="p0"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="PropertyClass"
            c:type="GladePropertyClass"
            disguised="1"
            glib:is-gtype-struct-for="Property">
      <source-position filename="glade-property-class.h" line="55"/>
      <method name="atk" c:identifier="glade_property_class_atk">
        <source-position filename="glade-property-class.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="clone"
              c:identifier="glade_property_class_clone"
              introspectable="0">
        <source-position filename="glade-property-class.h" line="65"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="247">a new #GladePropertyClass cloned from @property_class</doc>
          <type name="PropertyClass" c:type="GladePropertyClass*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="244">a #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="reset_version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="245">whether the introduction version should be reset in the clone</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="common" c:identifier="glade_property_class_common">
        <source-position filename="glade-property-class.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="compare" c:identifier="glade_property_class_compare">
        <doc xml:space="preserve"
             filename="glade-property-class.c"
             line="2237">Compares value1 with value2 according to @klass.</doc>
        <source-position filename="glade-property-class.h" line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="2245">-1, 0 or +1, if value1 is found to be less than,
equal to or greater than value2, respectively.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="2239">a #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="value1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="2240">a GValue of correct type for @klass</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
          <parameter name="value2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="2241">a GValue of correct type for @klass</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_type"
              c:identifier="glade_property_class_create_type">
        <source-position filename="glade-property-class.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="custom_layout"
              c:identifier="glade_property_class_custom_layout">
        <source-position filename="glade-property-class.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="deprecated" c:identifier="glade_property_class_deprecated">
        <source-position filename="glade-property-class.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="glade_property_class_free">
        <doc xml:space="preserve"
             filename="glade-property-class.c"
             line="291">Frees @klass and its associated memory.</doc>
        <source-position filename="glade-property-class.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="293">a #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_adaptor"
              c:identifier="glade_property_class_get_adaptor"
              introspectable="0">
        <source-position filename="glade-property-class.h" line="71"/>
        <return-value>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_construct_only"
              c:identifier="glade_property_class_get_construct_only">
        <source-position filename="glade-property-class.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default"
              c:identifier="glade_property_class_get_default">
        <source-position filename="glade-property-class.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="const GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_from_gvalue"
              c:identifier="glade_property_class_get_from_gvalue"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-property-class.c"
             line="1086">Assignes the provided return location to @value</doc>
        <source-position filename="glade-property-class.h" line="140"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1088">A #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1089">A #GValue to set</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1090">a return location of the correct type</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="get_ignore" c:identifier="glade_property_class_get_ignore">
        <source-position filename="glade-property-class.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_packing"
              c:identifier="glade_property_class_get_is_packing">
        <source-position filename="glade-property-class.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="glade_property_class_get_name">
        <source-position filename="glade-property-class.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_original_default"
              c:identifier="glade_property_class_get_original_default">
        <source-position filename="glade-property-class.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="const GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pspec"
              c:identifier="glade_property_class_get_pspec"
              introspectable="0">
        <source-position filename="glade-property-class.h" line="74"/>
        <return-value>
          <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tooltip"
              c:identifier="glade_property_class_get_tooltip">
        <source-position filename="glade-property-class.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_virtual"
              c:identifier="glade_property_class_get_virtual">
        <source-position filename="glade-property-class.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="id" c:identifier="glade_property_class_id">
        <source-position filename="glade-property-class.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_object" c:identifier="glade_property_class_is_object">
        <source-position filename="glade-property-class.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="1313">whether or not this is an object property
that refers to another object in this project.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1311">A #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_visible" c:identifier="glade_property_class_is_visible">
        <source-position filename="glade-property-class.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="1198">whether or not to show this property in the editor</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1195">A #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_defaults_from_spec"
              c:identifier="glade_property_class_load_defaults_from_spec">
        <source-position filename="glade-property-class.h" line="165"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="make_adjustment"
              c:identifier="glade_property_class_make_adjustment"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-property-class.c"
             line="1663">Creates and appropriate GtkAdjustment for use in the editor</doc>
        <source-position filename="glade-property-class.h" line="149"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="1669">An appropriate #GtkAdjustment for use in the Property editor</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1665">a pointer to the property class</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="make_gvalue"
              c:identifier="glade_property_class_make_gvalue"
              introspectable="0">
        <source-position filename="glade-property-class.h" line="137"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="1008">A #GValue created based on the @property_class
         and the provided argument.</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1005">A #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1006">an argument of the correct type specified by @property_class</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="make_gvalue_from_string"
              c:identifier="glade_property_class_make_gvalue_from_string">
        <source-position filename="glade-property-class.h" line="123"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="814">A #GValue created based on the @property_class
         and @string criteria.</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="810">A #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="811">a string representation of this property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="812">the #GladeProject that the property should be resolved for</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="make_gvalue_from_vl"
              c:identifier="glade_property_class_make_gvalue_from_vl"
              introspectable="0">
        <source-position filename="glade-property-class.h" line="130"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="948">A #GValue created based on the @property_class
         and a @vl arg of the correct type.</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="944">A #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="vl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="945">a #va_list holding one argument of the correct type
     specified by @property_class</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </method>
      <method name="make_string_from_gvalue"
              c:identifier="glade_property_class_make_string_from_gvalue">
        <source-position filename="glade-property-class.h" line="127"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="481">A newly allocated string representation of @value</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="478">A #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="479">A #GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="match" c:identifier="glade_property_class_match">
        <source-position filename="glade-property-class.h" line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="2198">whether @klass and @comp are a match or not
         (properties in seperate decendant heirarchies that
          have the same name are not matches).</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="2195">a #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="2196">a #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </parameter>
        </parameters>
      </method>
      <method name="multiline" c:identifier="glade_property_class_multiline">
        <source-position filename="glade-property-class.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="needs_sync" c:identifier="glade_property_class_needs_sync">
        <source-position filename="glade-property-class.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="optional" c:identifier="glade_property_class_optional">
        <source-position filename="glade-property-class.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="optional_default"
              c:identifier="glade_property_class_optional_default">
        <source-position filename="glade-property-class.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="parentless_widget"
              c:identifier="glade_property_class_parentless_widget">
        <source-position filename="glade-property-class.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="query" c:identifier="glade_property_class_query">
        <source-position filename="glade-property-class.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="save" c:identifier="glade_property_class_save">
        <source-position filename="glade-property-class.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="save_always"
              c:identifier="glade_property_class_save_always">
        <source-position filename="glade-property-class.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_adaptor"
              c:identifier="glade_property_class_set_adaptor">
        <source-position filename="glade-property-class.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_construct_only"
              c:identifier="glade_property_class_set_construct_only">
        <source-position filename="glade-property-class.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="construct_only" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ignore" c:identifier="glade_property_class_set_ignore">
        <source-position filename="glade-property-class.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="ignore" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_packing"
              c:identifier="glade_property_class_set_is_packing">
        <source-position filename="glade-property-class.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="is_packing" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="glade_property_class_set_name">
        <source-position filename="glade-property-class.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pspec" c:identifier="glade_property_class_set_pspec">
        <source-position filename="glade-property-class.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="pspec" transfer-ownership="none">
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tooltip"
              c:identifier="glade_property_class_set_tooltip">
        <source-position filename="glade-property-class.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="tooltip" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_virtual"
              c:identifier="glade_property_class_set_virtual">
        <source-position filename="glade-property-class.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vl_from_gvalue"
              c:identifier="glade_property_class_set_vl_from_gvalue"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-property-class.c"
             line="1027">Sets @vl from @value based on @klass criteria.</doc>
        <source-position filename="glade-property-class.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1029">A #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1030">A #GValue to set</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="vl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1031">a #va_list holding one argument of the correct type
     specified by @klass</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </method>
      <method name="since_major"
              c:identifier="glade_property_class_since_major">
        <source-position filename="glade-property-class.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="since_minor"
              c:identifier="glade_property_class_since_minor">
        <source-position filename="glade-property-class.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="stock" c:identifier="glade_property_class_stock">
        <source-position filename="glade-property-class.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="stock_icon" c:identifier="glade_property_class_stock_icon">
        <source-position filename="glade-property-class.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="themed_icon"
              c:identifier="glade_property_class_themed_icon">
        <source-position filename="glade-property-class.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="transfer_on_paste"
              c:identifier="glade_property_class_transfer_on_paste">
        <source-position filename="glade-property-class.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="translatable"
              c:identifier="glade_property_class_translatable">
        <source-position filename="glade-property-class.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="void_value" c:identifier="glade_property_class_void_value">
        <source-position filename="glade-property-class.h" line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="2219">Whether @value for this @klass is voided; a voided value
         can be a %NULL value for boxed or object type param specs.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="2217">a #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="weight" c:identifier="glade_property_class_weight">
        <source-position filename="glade-property-class.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="property_class" transfer-ownership="none">
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="get_default_from_spec"
                c:identifier="glade_property_class_get_default_from_spec">
        <source-position filename="glade-property-class.h" line="161"/>
        <return-value transfer-ownership="full">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="spec" transfer-ownership="none">
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </parameter>
        </parameters>
      </function>
      <function name="new"
                c:identifier="glade_property_class_new"
                introspectable="0">
        <source-position filename="glade-property-class.h" line="58"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="196">a new #GladePropertyClass</doc>
          <type name="PropertyClass" c:type="GladePropertyClass*"/>
        </return-value>
        <parameters>
          <parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="193">The #GladeWidgetAdaptor to create this property for</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="194">the id for the new property class</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_from_spec"
                c:identifier="glade_property_class_new_from_spec"
                introspectable="0">
        <source-position filename="glade-property-class.h" line="60"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="1184">a newly created #GladePropertyClass based on @spec
         or %NULL if its unsupported.</doc>
          <type name="PropertyClass" c:type="GladePropertyClass*"/>
        </return-value>
        <parameters>
          <parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1181">A generic pointer (i.e. a #GladeWidgetClass)</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
          <parameter name="spec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1182">A #GParamSpec</doc>
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_from_spec_full"
                c:identifier="glade_property_class_new_from_spec_full"
                introspectable="0">
        <source-position filename="glade-property-class.h" line="62"/>
        <return-value>
          <type name="PropertyClass" c:type="GladePropertyClass*"/>
        </return-value>
        <parameters>
          <parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
          <parameter name="spec" transfer-ownership="none">
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </parameter>
          <parameter name="need_handle" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_weights"
                c:identifier="glade_property_class_set_weights"
                introspectable="0">
        <source-position filename="glade-property-class.h" line="163"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="properties" transfer-ownership="none">
            <type name="GLib.List" c:type="GList**">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </function>
      <function name="update_from_node"
                c:identifier="glade_property_class_update_from_node">
        <doc xml:space="preserve"
             filename="glade-property-class.c"
             line="1929">Updates the @property_class with the contents of the node in the xml
file. Only the values found in the xml file are overridden.</doc>
        <source-position filename="glade-property-class.h" line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="1939">%TRUE on success. @property_class is set to NULL if the property
         has Disabled="TRUE".</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1931">the property node</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
          <parameter name="object_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1932">the #GType of the owning object</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="property_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1933">a pointer to the property class</doc>
            <type name="PropertyClass" c:type="GladePropertyClass**"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-property-class.c"
                 line="1934">the domain to translate catalog strings from</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="PropertyKlass" c:type="GladePropertyKlass">
      <source-position filename="glade-property.h" line="59"/>
      <field name="parent_class" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="dup" introspectable="0">
        <callback name="dup" introspectable="0">
          <source-position filename="glade-property.h" line="42"/>
          <return-value>
            <type name="Property" c:type="GladeProperty*"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Property" c:type="GladeProperty*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="equals_value">
        <callback name="equals_value">
          <source-position filename="glade-property.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Property" c:type="GladeProperty*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value">
          <source-position filename="glade-property.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Property" c:type="GladeProperty*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_value">
        <callback name="get_value">
          <source-position filename="glade-property.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Property" c:type="GladeProperty*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="sync">
        <callback name="sync">
          <source-position filename="glade-property.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Property" c:type="GladeProperty*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="load">
        <callback name="load">
          <source-position filename="glade-property.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Property" c:type="GladeProperty*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="value_changed">
        <callback name="value_changed">
          <source-position filename="glade-property.h" line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Property" c:type="GladeProperty*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
            <parameter name="arg2" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="tooltip_changed">
        <callback name="tooltip_changed">
          <source-position filename="glade-property.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Property" c:type="GladeProperty*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="arg2" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="arg3" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-property.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-property.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-property.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-property.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved5">
        <callback name="glade_reserved5">
          <source-position filename="glade-property.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved6">
        <callback name="glade_reserved6">
          <source-position filename="glade-property.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="PropertyLabel"
           c:symbol-prefix="property_label"
           c:type="GladePropertyLabel"
           parent="Gtk.EventBox"
           glib:type-name="GladePropertyLabel"
           glib:get-type="glade_property_label_get_type"
           glib:type-struct="PropertyLabelClass">
      <source-position filename="glade-property-label.h" line="53"/>
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="glade_property_label_new">
        <source-position filename="glade-property-label.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_append_colon"
              c:identifier="glade_property_label_get_append_colon">
        <source-position filename="glade-property-label.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_custom_text"
              c:identifier="glade_property_label_get_custom_text">
        <source-position filename="glade-property-label.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_custom_tooltip"
              c:identifier="glade_property_label_get_custom_tooltip">
        <source-position filename="glade-property-label.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_packing"
              c:identifier="glade_property_label_get_packing">
        <source-position filename="glade-property-label.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_property"
              c:identifier="glade_property_label_get_property"
              introspectable="0">
        <source-position filename="glade-property-label.h" line="78"/>
        <return-value>
          <type name="Property" c:type="GladeProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_property_name"
              c:identifier="glade_property_label_get_property_name">
        <source-position filename="glade-property-label.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_append_colon"
              c:identifier="glade_property_label_set_append_colon">
        <source-position filename="glade-property-label.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
          <parameter name="append_colon" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_custom_text"
              c:identifier="glade_property_label_set_custom_text">
        <source-position filename="glade-property-label.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
          <parameter name="custom_text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_custom_tooltip"
              c:identifier="glade_property_label_set_custom_tooltip">
        <source-position filename="glade-property-label.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
          <parameter name="custom_tooltip" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_packing"
              c:identifier="glade_property_label_set_packing">
        <source-position filename="glade-property-label.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
          <parameter name="packing" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_property"
              c:identifier="glade_property_label_set_property">
        <source-position filename="glade-property-label.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_property_name"
              c:identifier="glade_property_label_set_property_name">
        <source-position filename="glade-property-label.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="PropertyLabel" c:type="GladePropertyLabel*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="append-colon" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="custom-text" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="custom-tooltip" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="packing" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="property" writable="1" transfer-ownership="none">
        <type name="Property"/>
      </property>
      <property name="property-name" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="box" readable="0" private="1">
        <type name="Gtk.EventBox" c:type="GtkEventBox"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PropertyLabelPrivate" c:type="GladePropertyLabelPrivate*"/>
      </field>
    </class>
    <record name="PropertyLabelClass"
            c:type="GladePropertyLabelClass"
            glib:is-gtype-struct-for="PropertyLabel">
      <source-position filename="glade-property-label.h" line="53"/>
      <field name="parent_class">
        <type name="Gtk.EventBoxClass" c:type="GtkEventBoxClass"/>
      </field>
    </record>
    <record name="PropertyLabelPrivate"
            c:type="GladePropertyLabelPrivate"
            disguised="1">
      <source-position filename="glade-property-label.h" line="40"/>
    </record>
    <record name="PropertyPrivate" c:type="GladePropertyPrivate" disguised="1">
      <source-position filename="glade-property.h" line="16"/>
    </record>
    <class name="PropertyShell"
           c:symbol-prefix="property_shell"
           c:type="GladePropertyShell"
           parent="Gtk.Box"
           glib:type-name="GladePropertyShell"
           glib:get-type="glade_property_shell_get_type"
           glib:type-struct="PropertyShellClass">
      <source-position filename="glade-property-shell.h" line="53"/>
      <implements name="Atk.Implementor"/>
      <implements name="Editable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="glade_property_shell_new">
        <source-position filename="glade-property-shell.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_custom_text"
              c:identifier="glade_property_shell_get_custom_text">
        <source-position filename="glade-property-shell.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <type name="PropertyShell" c:type="GladePropertyShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_disable_check"
              c:identifier="glade_property_shell_get_disable_check">
        <source-position filename="glade-property-shell.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <type name="PropertyShell" c:type="GladePropertyShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_packing"
              c:identifier="glade_property_shell_get_packing">
        <source-position filename="glade-property-shell.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <type name="PropertyShell" c:type="GladePropertyShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_property_name"
              c:identifier="glade_property_shell_get_property_name">
        <source-position filename="glade-property-shell.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <type name="PropertyShell" c:type="GladePropertyShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_command"
              c:identifier="glade_property_shell_get_use_command">
        <source-position filename="glade-property-shell.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <type name="PropertyShell" c:type="GladePropertyShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_custom_text"
              c:identifier="glade_property_shell_set_custom_text">
        <source-position filename="glade-property-shell.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <type name="PropertyShell" c:type="GladePropertyShell*"/>
          </instance-parameter>
          <parameter name="custom_text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_disable_check"
              c:identifier="glade_property_shell_set_disable_check">
        <source-position filename="glade-property-shell.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <type name="PropertyShell" c:type="GladePropertyShell*"/>
          </instance-parameter>
          <parameter name="disable_check" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_packing"
              c:identifier="glade_property_shell_set_packing">
        <source-position filename="glade-property-shell.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <type name="PropertyShell" c:type="GladePropertyShell*"/>
          </instance-parameter>
          <parameter name="packing" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_property_name"
              c:identifier="glade_property_shell_set_property_name">
        <source-position filename="glade-property-shell.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <type name="PropertyShell" c:type="GladePropertyShell*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_command"
              c:identifier="glade_property_shell_set_use_command">
        <source-position filename="glade-property-shell.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shell" transfer-ownership="none">
            <type name="PropertyShell" c:type="GladePropertyShell*"/>
          </instance-parameter>
          <parameter name="use_command" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="custom-text" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="disable-check" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="editor-type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="packing" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="property-name" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-command" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="box" readable="0" private="1">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PropertyShellPrivate" c:type="GladePropertyShellPrivate*"/>
      </field>
      <glib:signal name="post-commit" when="last">
        <doc xml:space="preserve"
             filename="glade-property-shell.c"
             line="163">Emitted after a property's value is committed, can be useful to serialize
commands after a property's commit command from custom editors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glade-property-shell.c"
                 line="166">the new #GValue to commit.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="pre-commit" when="last">
        <doc xml:space="preserve"
             filename="glade-property-shell.c"
             line="147">Emitted before a property's value is committed, can be useful to serialize
commands before a property's commit command from custom editors.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glade-property-shell.c"
                 line="150">the new #GValue to commit.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="PropertyShellClass"
            c:type="GladePropertyShellClass"
            glib:is-gtype-struct-for="PropertyShell">
      <source-position filename="glade-property-shell.h" line="53"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <record name="PropertyShellPrivate"
            c:type="GladePropertyShellPrivate"
            disguised="1">
      <source-position filename="glade-property-shell.h" line="40"/>
    </record>
    <bitfield name="PropertyState"
              glib:type-name="GladePropertyState"
              glib:get-type="glade_property_state_get_type"
              c:type="GladePropertyState">
      <member name="normal"
              value="0"
              c:identifier="GLADE_STATE_NORMAL"
              glib:nick="normal">
      </member>
      <member name="changed"
              value="1"
              c:identifier="GLADE_STATE_CHANGED"
              glib:nick="changed">
      </member>
      <member name="unsupported"
              value="2"
              c:identifier="GLADE_STATE_UNSUPPORTED"
              glib:nick="unsupported">
      </member>
      <member name="support_disabled"
              value="4"
              c:identifier="GLADE_STATE_SUPPORT_DISABLED"
              glib:nick="support-disabled">
      </member>
    </bitfield>
    <callback name="ReadWidgetFunc" c:type="GladeReadWidgetFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="539">This function is called to update @widget from @node.</doc>
      <source-position filename="glade-widget-adaptor.h" line="548"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4277">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4278">The #GladeWidget</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </parameter>
        <parameter name="node" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4279">The #GladeXmlNode</doc>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="RemoveChildFunc" c:type="GladeRemoveChildFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="382">Called to remove @child from @parent.</doc>
      <source-position filename="glade-widget-adaptor.h" line="390"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3553">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.h"
               line="385">A #GObject container</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3555">The #GObject child</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ReplaceChildFunc" c:type="GladeReplaceChildFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="394">Called to swap placeholders with project objects
in containers.</doc>
      <source-position filename="glade-widget-adaptor.h" line="404"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3737">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="container" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3738">The #GObject container</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="old_obj" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3739">The old #GObject child</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="new_obj" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3740">The new #GObject child</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="SetPropertyFunc" c:type="GladeSetPropertyFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="230">This delagate function is used to apply the property value on
the runtime object.

Sets @value on @object for a given #GladePropertyClass</doc>
      <source-position filename="glade-widget-adaptor.h" line="242"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3408">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3409">The #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3410">The property identifier</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3411">The #GValue</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Signal"
           c:symbol-prefix="signal"
           c:type="GladeSignal"
           parent="GObject.Object"
           glib:type-name="GladeSignal"
           glib:get-type="glade_signal_get_type"
           glib:type-struct="SignalClass">
      <source-position filename="glade-signal-class.h" line="48"/>
      <constructor name="new" c:identifier="glade_signal_new">
        <doc xml:space="preserve"
             filename="glade-signal.c"
             line="223">Creates a new #GladeSignal with the given parameters.</doc>
        <source-position filename="glade-signal.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-signal.c"
               line="233">the new #GladeSignal</doc>
          <type name="Signal" c:type="GladeSignal*"/>
        </return-value>
        <parameters>
          <parameter name="sig_class" transfer-ownership="none">
            <type name="SignalClass" c:type="const GladeSignalClass*"/>
          </parameter>
          <parameter name="handler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="226">a handler function for the signal</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="userdata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="227">the userdata for this signal</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="after" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="228">whether this handler should be called after the default emission phase</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="swapped" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="229">whether the handler's user data should be swapped with the emitter instance.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="read"
                c:identifier="glade_signal_read"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-signal.c"
             line="365">Reads and creates a ner #GladeSignal based on @node</doc>
        <source-position filename="glade-signal.h" line="47"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-signal.c"
               line="372">A newly created #GladeSignal</doc>
          <type name="Signal" c:type="GladeSignal*"/>
        </return-value>
        <parameters>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="367">The #GladeXmlNode to read</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
          <parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="368">The #GladeWidgetAdaptor for thw widget</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
        </parameters>
      </function>
      <method name="clone"
              c:identifier="glade_signal_clone"
              introspectable="0">
        <source-position filename="glade-signal.h" line="44"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-signal.c"
               line="287">a new #GladeSignal with the same attributes as @signal</doc>
          <type name="Signal" c:type="GladeSignal*"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="285">a #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="glade_signal_equal">
        <source-position filename="glade-signal.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-signal.c"
               line="258">%TRUE if @sig1 and @sig2 have identical attributes, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sig1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="255">a #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </instance-parameter>
          <parameter name="sig2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="256">a #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_after" c:identifier="glade_signal_get_after">
        <source-position filename="glade-signal.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="const GladeSignal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_class" c:identifier="glade_signal_get_class">
        <source-position filename="glade-signal.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="SignalClass" c:type="const GladeSignalClass*"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="const GladeSignal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_detail" c:identifier="glade_signal_get_detail">
        <source-position filename="glade-signal.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="const GladeSignal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_handler" c:identifier="glade_signal_get_handler">
        <source-position filename="glade-signal.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="const GladeSignal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="glade_signal_get_name">
        <source-position filename="glade-signal.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="const GladeSignal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_support_warning"
              c:identifier="glade_signal_get_support_warning">
        <source-position filename="glade-signal.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="const GladeSignal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_swapped" c:identifier="glade_signal_get_swapped">
        <source-position filename="glade-signal.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="const GladeSignal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_userdata" c:identifier="glade_signal_get_userdata">
        <source-position filename="glade-signal.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="const GladeSignal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_after" c:identifier="glade_signal_set_after">
        <source-position filename="glade-signal.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </instance-parameter>
          <parameter name="after" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_detail" c:identifier="glade_signal_set_detail">
        <source-position filename="glade-signal.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </instance-parameter>
          <parameter name="detail" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_handler" c:identifier="glade_signal_set_handler">
        <source-position filename="glade-signal.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </instance-parameter>
          <parameter name="handler" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_support_warning"
              c:identifier="glade_signal_set_support_warning">
        <source-position filename="glade-signal.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </instance-parameter>
          <parameter name="support_warning" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_swapped" c:identifier="glade_signal_set_swapped">
        <source-position filename="glade-signal.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </instance-parameter>
          <parameter name="swapped" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_userdata" c:identifier="glade_signal_set_userdata">
        <source-position filename="glade-signal.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </instance-parameter>
          <parameter name="userdata" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write" c:identifier="glade_signal_write">
        <doc xml:space="preserve"
             filename="glade-signal.c"
             line="308">Writes @signal to @node</doc>
        <source-position filename="glade-signal.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="310">The #GladeSignal</doc>
            <type name="Signal" c:type="GladeSignal*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="311">A #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal.c"
                 line="312">A #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <property name="after" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="class"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="detail" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="handler" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="support-warning" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="swapped" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="userdata" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SignalPrivate" c:type="GladeSignalPrivate*"/>
      </field>
    </class>
    <record name="SignalClass"
            c:type="GladeSignalClass"
            disguised="1"
            glib:is-gtype-struct-for="Signal">
      <source-position filename="glade-signal-class.h" line="48"/>
      <method name="deprecated" c:identifier="glade_signal_class_deprecated">
        <source-position filename="glade-signal-class.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="GladeSignalClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="glade_signal_class_free">
        <source-position filename="glade-signal-class.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="GladeSignalClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_adaptor"
              c:identifier="glade_signal_class_get_adaptor"
              introspectable="0">
        <source-position filename="glade-signal-class.h" line="58"/>
        <return-value>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="const GladeSignalClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags" c:identifier="glade_signal_class_get_flags">
        <source-position filename="glade-signal-class.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="GObject.SignalFlags" c:type="GSignalFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="const GladeSignalClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="glade_signal_class_get_name">
        <source-position filename="glade-signal-class.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="const GladeSignalClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_type" c:identifier="glade_signal_class_get_type">
        <source-position filename="glade-signal-class.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="const GladeSignalClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_deprecated"
              c:identifier="glade_signal_class_set_deprecated">
        <source-position filename="glade-signal-class.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="GladeSignalClass*"/>
          </instance-parameter>
          <parameter name="deprecated" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_since" c:identifier="glade_signal_class_set_since">
        <source-position filename="glade-signal-class.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="GladeSignalClass*"/>
          </instance-parameter>
          <parameter name="since_major" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="since_minor" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="since_major" c:identifier="glade_signal_class_since_major">
        <source-position filename="glade-signal-class.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="GladeSignalClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="since_minor" c:identifier="glade_signal_class_since_minor">
        <source-position filename="glade-signal-class.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="GladeSignalClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update_from_node"
              c:identifier="glade_signal_class_update_from_node">
        <source-position filename="glade-signal-class.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="signal_class" transfer-ownership="none">
            <type name="SignalClass" c:type="GladeSignalClass*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <function name="new"
                c:identifier="glade_signal_class_new"
                introspectable="0">
        <source-position filename="glade-signal-class.h" line="50"/>
        <return-value>
          <type name="SignalClass" c:type="GladeSignalClass*"/>
        </return-value>
        <parameters>
          <parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
          <parameter name="for_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="signal_id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="SignalEditor"
           c:symbol-prefix="signal_editor"
           c:type="GladeSignalEditor"
           parent="Gtk.Box"
           glib:type-name="GladeSignalEditor"
           glib:get-type="glade_signal_editor_get_type"
           glib:type-struct="SignalEditorClass">
      <source-position filename="glade-signal-editor.h" line="40"/>
      <implements name="Atk.Implementor"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="glade_signal_editor_new">
        <source-position filename="glade-signal-editor.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-signal-editor.c"
               line="681">a new #GladeSignalEditor</doc>
          <type name="SignalEditor" c:type="GladeSignalEditor*"/>
        </return-value>
      </constructor>
      <virtual-method name="callback_suggestions" introspectable="0">
        <source-position filename="glade-signal-editor.h" line="34"/>
        <return-value>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="SignalEditor" c:type="GladeSignalEditor*"/>
          </instance-parameter>
          <parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="detail_suggestions" introspectable="0">
        <source-position filename="glade-signal-editor.h" line="35"/>
        <return-value>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="SignalEditor" c:type="GladeSignalEditor*"/>
          </instance-parameter>
          <parameter name="signal" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="enable_dnd" c:identifier="glade_signal_editor_enable_dnd">
        <doc xml:space="preserve"
             filename="glade-signal-editor.c"
             line="786">If drag and drop support is enabled, the user will be able to drag signal handler
from the tree to some editor. The type of the dnd data will be "application/x-glade-signal"
and it will be in the form of "widget:signal:handler" so for example
"GtkToggleButton:toggled:on_toggle_button_toggled".</doc>
        <source-position filename="glade-signal-editor.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal-editor.c"
                 line="788">a #GladeSignalEditor</doc>
            <type name="SignalEditor" c:type="GladeSignalEditor*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal-editor.c"
                 line="789">whether the drag and drop support should be enabled</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_widget"
              c:identifier="glade_signal_editor_get_widget"
              introspectable="0">
        <source-position filename="glade-signal-editor.h" line="47"/>
        <return-value>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="SignalEditor" c:type="GladeSignalEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_widget"
              c:identifier="glade_signal_editor_load_widget">
        <doc xml:space="preserve"
             filename="glade-signal-editor.c"
             line="701">Load a widget in the signal editor. This will show all signals of the widget
an it's accessors in the signal editor where the user can edit them.</doc>
        <source-position filename="glade-signal-editor.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal-editor.c"
                 line="703">a #GladeSignalEditor</doc>
            <type name="SignalEditor" c:type="GladeSignalEditor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal-editor.c"
                 line="704">a #GladeWidget or NULL</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <property name="glade-widget" writable="1" transfer-ownership="none">
        <type name="Gtk.TreeModel"/>
      </property>
      <field name="parent">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="SignalEditorPrivate" c:type="GladeSignalEditorPrivate*"/>
      </field>
      <glib:signal name="callback-suggestions" when="last" introspectable="0">
        <doc xml:space="preserve"
             filename="glade-signal-editor.c"
             line="1491">Emitted when the editor needs to show a list of callbacks suggestions to the user.

Returns wheter or not the event was handled.</doc>
        <return-value>
          <array>
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal-editor.c"
                 line="1494">the #GladeSignal that needs callbacks suggestions</doc>
            <type name="Signal"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="detail-suggestions" when="last" introspectable="0">
        <doc xml:space="preserve"
             filename="glade-signal-editor.c"
             line="1511">Emitted when the editor needs to show a list of detail suggestions to the user.

Returns wheter or not the event was handled.</doc>
        <return-value>
          <array>
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="signal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-signal-editor.c"
                 line="1514">the #GladeSignal that needs callbacks suggestions</doc>
            <type name="Signal"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="signal-activated" when="last">
        <doc xml:space="preserve"
             filename="glade-signal-editor.c"
             line="1475">Emitted when a item is activated in the GladeInspector.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Signal"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SignalEditorClass"
            c:type="GladeSignalEditorClass"
            glib:is-gtype-struct-for="SignalEditor">
      <source-position filename="glade-signal-editor.h" line="40"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="callback_suggestions" introspectable="0">
        <callback name="callback_suggestions" introspectable="0">
          <source-position filename="glade-signal-editor.h" line="34"/>
          <return-value>
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="editor" transfer-ownership="none">
              <type name="SignalEditor" c:type="GladeSignalEditor*"/>
            </parameter>
            <parameter name="signal" transfer-ownership="none">
              <type name="Signal" c:type="GladeSignal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="detail_suggestions" introspectable="0">
        <callback name="detail_suggestions" introspectable="0">
          <source-position filename="glade-signal-editor.h" line="35"/>
          <return-value>
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="editor" transfer-ownership="none">
              <type name="SignalEditor" c:type="GladeSignalEditor*"/>
            </parameter>
            <parameter name="signal" transfer-ownership="none">
              <type name="Signal" c:type="GladeSignal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-signal-editor.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-signal-editor.h" line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-signal-editor.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-signal-editor.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SignalEditorPrivate"
            c:type="GladeSignalEditorPrivate"
            disguised="1">
      <source-position filename="glade-signal-editor.h" line="17"/>
    </record>
    <record name="SignalKlass" c:type="GladeSignalKlass">
      <source-position filename="glade-signal.h" line="34"/>
      <field name="object_class" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-signal.h" line="30"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-signal.h" line="31"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-signal.h" line="32"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-signal.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="SignalModel"
           c:symbol-prefix="signal_model"
           c:type="GladeSignalModel"
           parent="GObject.Object"
           glib:type-name="GladeSignalModel"
           glib:get-type="glade_signal_model_get_type"
           glib:type-struct="SignalModelClass">
      <source-position filename="glade-signal-model.h" line="56"/>
      <implements name="Gtk.TreeDragSource"/>
      <implements name="Gtk.TreeModel"/>
      <function name="new"
                c:identifier="glade_signal_model_new"
                introspectable="0">
        <source-position filename="glade-signal-model.h" line="66"/>
        <return-value>
          <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
        </return-value>
        <parameters>
          <parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="signals" transfer-ownership="none">
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <property name="signals"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="widget"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Widget"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SignalModelPrivate" c:type="GladeSignalModelPrivate*"/>
      </field>
    </class>
    <record name="SignalModelClass"
            c:type="GladeSignalModelClass"
            glib:is-gtype-struct-for="SignalModel">
      <source-position filename="glade-signal-model.h" line="56"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="SignalModelColumns"
                 glib:type-name="GladeSignalModelColumns"
                 glib:get-type="glade_signal_model_columns_get_type"
                 c:type="GladeSignalModelColumns">
      <member name="column_name"
              value="0"
              c:identifier="GLADE_SIGNAL_COLUMN_NAME"
              glib:nick="column-name">
      </member>
      <member name="column_show_name"
              value="1"
              c:identifier="GLADE_SIGNAL_COLUMN_SHOW_NAME"
              glib:nick="column-show-name">
      </member>
      <member name="column_handler"
              value="2"
              c:identifier="GLADE_SIGNAL_COLUMN_HANDLER"
              glib:nick="column-handler">
      </member>
      <member name="column_object"
              value="3"
              c:identifier="GLADE_SIGNAL_COLUMN_OBJECT"
              glib:nick="column-object">
      </member>
      <member name="column_swap"
              value="4"
              c:identifier="GLADE_SIGNAL_COLUMN_SWAP"
              glib:nick="column-swap">
      </member>
      <member name="column_after"
              value="5"
              c:identifier="GLADE_SIGNAL_COLUMN_AFTER"
              glib:nick="column-after">
      </member>
      <member name="column_tooltip"
              value="6"
              c:identifier="GLADE_SIGNAL_COLUMN_TOOLTIP"
              glib:nick="column-tooltip">
      </member>
      <member name="column_signal"
              value="7"
              c:identifier="GLADE_SIGNAL_COLUMN_SIGNAL"
              glib:nick="column-signal">
      </member>
      <member name="column_detail"
              value="8"
              c:identifier="GLADE_SIGNAL_COLUMN_DETAIL"
              glib:nick="column-detail">
      </member>
      <member name="n_columns"
              value="9"
              c:identifier="GLADE_SIGNAL_N_COLUMNS"
              glib:nick="n-columns">
      </member>
    </enumeration>
    <record name="SignalModelPrivate"
            c:type="GladeSignalModelPrivate"
            disguised="1">
      <source-position filename="glade-signal-model.h" line="37"/>
    </record>
    <record name="SignalPrivate" c:type="GladeSignalPrivate" disguised="1">
      <source-position filename="glade-signal.h" line="19"/>
    </record>
    <enumeration name="Stock"
                 glib:type-name="GladeStock"
                 glib:get-type="glade_standard_stock_get_type"
                 c:type="GladeStock">
      <member name="Dummy" value="0" c:identifier="dummy" glib:nick="Dummy">
      </member>
      <function name="append_prefix"
                c:identifier="glade_standard_stock_append_prefix">
        <source-position filename="glade-builtins.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="prefix" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="spec"
                c:identifier="glade_standard_stock_spec"
                introspectable="0">
        <source-position filename="glade-builtins.h" line="48"/>
        <return-value>
          <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
        </return-value>
      </function>
    </enumeration>
    <enumeration name="StockImage"
                 glib:type-name="GladeStockImage"
                 glib:get-type="glade_standard_stock_image_get_type"
                 c:type="GladeStockImage">
      <member name="Dummy" value="0" c:identifier="dummy" glib:nick="Dummy">
      </member>
      <function name="spec"
                c:identifier="glade_standard_stock_image_spec"
                introspectable="0">
        <source-position filename="glade-builtins.h" line="49"/>
        <return-value>
          <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
        </return-value>
      </function>
    </enumeration>
    <callback name="StringFromValueFunc" c:type="GladeStringFromValueFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="582">For normal properties this is used to serialize
property values, for custom properties (only when new pspecs are
introduced) its needed for value comparisons in boxed pspecs
and also to update the UI for undo/redo items etc.</doc>
      <source-position filename="glade-widget-adaptor.h" line="595"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4400">A newly allocated string representation of @value</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4392">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="klass" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4393">The #GladePropertyClass</doc>
          <type name="PropertyClass" c:type="GladePropertyClass*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4394">The #GValue to convert to a string</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="SupportMask"
              glib:type-name="GladeSupportMask"
              glib:get-type="glade_support_mask_get_type"
              c:type="GladeSupportMask">
      <member name="ok"
              value="0"
              c:identifier="GLADE_SUPPORT_OK"
              glib:nick="ok">
      </member>
      <member name="deprecated"
              value="1"
              c:identifier="GLADE_SUPPORT_DEPRECATED"
              glib:nick="deprecated">
      </member>
      <member name="mismatch"
              value="2"
              c:identifier="GLADE_SUPPORT_MISMATCH"
              glib:nick="mismatch">
      </member>
    </bitfield>
    <constant name="TAG_ACTION" value="action" c:type="GLADE_TAG_ACTION">
      <source-position filename="glade-xml-utils.h" line="126"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ACTIONS" value="actions" c:type="GLADE_TAG_ACTIONS">
      <source-position filename="glade-xml-utils.h" line="124"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ACTION_ACTIVATE_FUNCTION"
              value="action-activate-function"
              c:type="GLADE_TAG_ACTION_ACTIVATE_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="109"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ACTION_SUBMENU_FUNCTION"
              value="action-submenu-function"
              c:type="GLADE_TAG_ACTION_SUBMENU_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="111"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ADAPTOR" value="adaptor" c:type="GLADE_TAG_ADAPTOR">
      <source-position filename="glade-xml-utils.h" line="79"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ADD_CHILD_FUNCTION"
              value="add-child-function"
              c:type="GLADE_TAG_ADD_CHILD_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="101"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ADD_CHILD_VERIFY_FUNCTION"
              value="add-child-verify-function"
              c:type="GLADE_TAG_ADD_CHILD_VERIFY_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="102"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ANARCHIST"
              value="anarchist"
              c:type="GLADE_TAG_ANARCHIST">
      <source-position filename="glade-xml-utils.h" line="87"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ATK_PROPERTY"
              value="atk-property"
              c:type="GLADE_TAG_ATK_PROPERTY">
      <source-position filename="glade-xml-utils.h" line="171"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_BOOK" value="book" c:type="GLADE_TAG_BOOK">
      <source-position filename="glade-xml-utils.h" line="83"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_BUILDER_SINCE"
              value="gtkbuilder-since"
              c:type="GLADE_TAG_BUILDER_SINCE">
      <source-position filename="glade-xml-utils.h" line="70"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CHILD_ACTION_ACTIVATE_FUNCTION"
              value="child-action-activate-function"
              c:type="GLADE_TAG_CHILD_ACTION_ACTIVATE_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="110"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CHILD_GET_PROP_FUNCTION"
              value="child-get-property-function"
              c:type="GLADE_TAG_CHILD_GET_PROP_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="106"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CHILD_PROPERTY"
              value="child-property"
              c:type="GLADE_TAG_CHILD_PROPERTY">
      <source-position filename="glade-xml-utils.h" line="157"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CHILD_SET_PROP_FUNCTION"
              value="child-set-property-function"
              c:type="GLADE_TAG_CHILD_SET_PROP_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="105"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CHILD_VERIFY_FUNCTION"
              value="child-verify-function"
              c:type="GLADE_TAG_CHILD_VERIFY_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="107"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_COMMENT" value="comments" c:type="GLADE_TAG_COMMENT">
      <source-position filename="glade-xml-utils.h" line="154"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_COMMON" value="common" c:type="GLADE_TAG_COMMON">
      <source-position filename="glade-xml-utils.h" line="138"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CONSTRUCTOR_FUNCTION"
              value="constructor-function"
              c:type="GLADE_TAG_CONSTRUCTOR_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="108"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CONSTRUCT_OBJECT_FUNCTION"
              value="construct-object-function"
              c:type="GLADE_TAG_CONSTRUCT_OBJECT_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="96"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CONSTRUCT_ONLY"
              value="construct-only"
              c:type="GLADE_TAG_CONSTRUCT_ONLY">
      <source-position filename="glade-xml-utils.h" line="91"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CONTEXT" value="context" c:type="GLADE_TAG_CONTEXT">
      <source-position filename="glade-xml-utils.h" line="153"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CREATE_EDITABLE_FUNCTION"
              value="create-editable-function"
              c:type="GLADE_TAG_CREATE_EDITABLE_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="120"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CREATE_EPROP_FUNCTION"
              value="create-editor-property-function"
              c:type="GLADE_TAG_CREATE_EPROP_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="118"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CREATE_TYPE"
              value="create-type"
              c:type="GLADE_TAG_CREATE_TYPE">
      <source-position filename="glade-xml-utils.h" line="187"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CREATE_WIDGET_FUNCTION"
              value="create-widget-function"
              c:type="GLADE_TAG_CREATE_WIDGET_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="95"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_CUSTOM_LAYOUT"
              value="custom-layout"
              c:type="GLADE_TAG_CUSTOM_LAYOUT">
      <source-position filename="glade-xml-utils.h" line="142"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DEEP_POST_CREATE_FUNCTION"
              value="deep-post-create-function"
              c:type="GLADE_TAG_DEEP_POST_CREATE_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="98"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DEFAULT" value="default" c:type="GLADE_TAG_DEFAULT">
      <source-position filename="glade-xml-utils.h" line="88"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DEFAULT_HEIGHT"
              value="default-height"
              c:type="GLADE_TAG_DEFAULT_HEIGHT">
      <source-position filename="glade-xml-utils.h" line="178"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DEFAULT_PALETTE_STATE"
              value="default-palette-state"
              c:type="GLADE_TAG_DEFAULT_PALETTE_STATE">
      <source-position filename="glade-xml-utils.h" line="93"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DEFAULT_WIDTH"
              value="default-width"
              c:type="GLADE_TAG_DEFAULT_WIDTH">
      <source-position filename="glade-xml-utils.h" line="177"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DEPENDS" value="depends" c:type="GLADE_TAG_DEPENDS">
      <source-position filename="glade-xml-utils.h" line="81"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DEPENDS_FUNCTION"
              value="depends-function"
              c:type="GLADE_TAG_DEPENDS_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="112"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DEPRECATED"
              value="deprecated"
              c:type="GLADE_TAG_DEPRECATED">
      <source-position filename="glade-xml-utils.h" line="71"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DEPRECATED_SINCE"
              value="deprecated-since"
              c:type="GLADE_TAG_DEPRECATED_SINCE">
      <source-position filename="glade-xml-utils.h" line="72"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DESTROY_OBJECT_FUNCTION"
              value="destroy-object-function"
              c:type="GLADE_TAG_DESTROY_OBJECT_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="97"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DISABLED" value="disabled" c:type="GLADE_TAG_DISABLED">
      <source-position filename="glade-xml-utils.h" line="90"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DISPLAYABLE_VALUES"
              value="displayable-values"
              c:type="GLADE_TAG_DISPLAYABLE_VALUES">
      <source-position filename="glade-xml-utils.h" line="158"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_DOMAIN" value="domain" c:type="GLADE_TAG_DOMAIN">
      <source-position filename="glade-xml-utils.h" line="82"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_EDITABLE" value="editable" c:type="GLADE_TAG_EDITABLE">
      <source-position filename="glade-xml-utils.h" line="163"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_EVENT_HANDLER_CONNECTED"
              value="EventHandlerConnected"
              c:type="GLADE_TAG_EVENT_HANDLER_CONNECTED">
      <source-position filename="glade-xml-utils.h" line="179"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_EXPANDED" value="expanded" c:type="GLADE_TAG_EXPANDED">
      <source-position filename="glade-xml-utils.h" line="143"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_FALSE" value="False" c:type="GLADE_TAG_FALSE">
      <source-position filename="glade-xml-utils.h" line="180"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_GENERIC_NAME"
              value="generic-name"
              c:type="GLADE_TAG_GENERIC_NAME">
      <source-position filename="glade-xml-utils.h" line="144"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_GET_CHILDREN_FUNCTION"
              value="get-children-function"
              c:type="GLADE_TAG_GET_CHILDREN_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="104"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_GET_FUNCTION"
              value="get-property-function"
              c:type="GLADE_TAG_GET_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="135"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_GET_INTERNAL_CHILD_FUNCTION"
              value="get-internal-child-function"
              c:type="GLADE_TAG_GET_INTERNAL_CHILD_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="100"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_GET_TYPE_FUNCTION"
              value="get-type-function"
              c:type="GLADE_TAG_GET_TYPE_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="174"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_GLADE_CATALOG"
              value="glade-catalog"
              c:type="GLADE_TAG_GLADE_CATALOG">
      <source-position filename="glade-xml-utils.h" line="74"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_GLADE_WIDGET_CLASS"
              value="glade-widget-class"
              c:type="GLADE_TAG_GLADE_WIDGET_CLASS">
      <source-position filename="glade-xml-utils.h" line="76"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_GLADE_WIDGET_CLASSES"
              value="glade-widget-classes"
              c:type="GLADE_TAG_GLADE_WIDGET_CLASSES">
      <source-position filename="glade-xml-utils.h" line="75"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_GLADE_WIDGET_CLASS_REF"
              value="glade-widget-class-ref"
              c:type="GLADE_TAG_GLADE_WIDGET_CLASS_REF">
      <source-position filename="glade-xml-utils.h" line="78"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_GLADE_WIDGET_GROUP"
              value="glade-widget-group"
              c:type="GLADE_TAG_GLADE_WIDGET_GROUP">
      <source-position filename="glade-xml-utils.h" line="77"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_HAS_CONTEXT"
              value="context"
              c:type="GLADE_TAG_HAS_CONTEXT">
      <source-position filename="glade-xml-utils.h" line="152"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ICON_NAME"
              value="icon-name"
              c:type="GLADE_TAG_ICON_NAME">
      <source-position filename="glade-xml-utils.h" line="185"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ICON_PREFIX"
              value="icon-prefix"
              c:type="GLADE_TAG_ICON_PREFIX">
      <source-position filename="glade-xml-utils.h" line="184"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_ID" value="id" c:type="GLADE_TAG_ID">
      <source-position filename="glade-xml-utils.h" line="148"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_IGNORE" value="ignore" c:type="GLADE_TAG_IGNORE">
      <source-position filename="glade-xml-utils.h" line="164"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_IMPORTANT"
              value="important"
              c:type="GLADE_TAG_IMPORTANT">
      <source-position filename="glade-xml-utils.h" line="186"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_INIT_FUNCTION"
              value="init-function"
              c:type="GLADE_TAG_INIT_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="170"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_INTERNAL_CHILDREN"
              value="internal-children"
              c:type="GLADE_TAG_INTERNAL_CHILDREN">
      <source-position filename="glade-xml-utils.h" line="86"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_KEY" value="key" c:type="GLADE_TAG_KEY">
      <source-position filename="glade-xml-utils.h" line="149"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_LIBRARY" value="library" c:type="GLADE_TAG_LIBRARY">
      <source-position filename="glade-xml-utils.h" line="80"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_MAX_VALUE" value="max" c:type="GLADE_TAG_MAX_VALUE">
      <source-position filename="glade-xml-utils.h" line="130"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_MIN_VALUE" value="min" c:type="GLADE_TAG_MIN_VALUE">
      <source-position filename="glade-xml-utils.h" line="131"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_MULTILINE"
              value="multiline"
              c:type="GLADE_TAG_MULTILINE">
      <source-position filename="glade-xml-utils.h" line="165"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_NAME" value="name" c:type="GLADE_TAG_NAME">
      <source-position filename="glade-xml-utils.h" line="145"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_NEEDS_SYNC"
              value="needs-sync"
              c:type="GLADE_TAG_NEEDS_SYNC">
      <source-position filename="glade-xml-utils.h" line="92"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_NICK" value="nick" c:type="GLADE_TAG_NICK">
      <source-position filename="glade-xml-utils.h" line="159"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_NO" value="No" c:type="GLADE_TAG_NO">
      <source-position filename="glade-xml-utils.h" line="183"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_OPTIONAL" value="optional" c:type="GLADE_TAG_OPTIONAL">
      <source-position filename="glade-xml-utils.h" line="139"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_OPTIONAL_DEFAULT"
              value="optional-default"
              c:type="GLADE_TAG_OPTIONAL_DEFAULT">
      <source-position filename="glade-xml-utils.h" line="140"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_PACKING_ACTIONS"
              value="packing-actions"
              c:type="GLADE_TAG_PACKING_ACTIONS">
      <source-position filename="glade-xml-utils.h" line="125"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_PACKING_DEFAULTS"
              value="packing-defaults"
              c:type="GLADE_TAG_PACKING_DEFAULTS">
      <source-position filename="glade-xml-utils.h" line="155"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_PACKING_PROPERTIES"
              value="packing-properties"
              c:type="GLADE_TAG_PACKING_PROPERTIES">
      <source-position filename="glade-xml-utils.h" line="122"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_PARENT" value="parent" c:type="GLADE_TAG_PARENT">
      <source-position filename="glade-xml-utils.h" line="146"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_PARENTLESS_WIDGET"
              value="parentless-widget"
              c:type="GLADE_TAG_PARENTLESS_WIDGET">
      <source-position filename="glade-xml-utils.h" line="89"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_PARENT_CLASS"
              value="parent-class"
              c:type="GLADE_TAG_PARENT_CLASS">
      <source-position filename="glade-xml-utils.h" line="156"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_POST_CREATE_FUNCTION"
              value="post-create-function"
              c:type="GLADE_TAG_POST_CREATE_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="99"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_PROPERTIES"
              value="properties"
              c:type="GLADE_TAG_PROPERTIES">
      <source-position filename="glade-xml-utils.h" line="121"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_PROPERTY" value="property" c:type="GLADE_TAG_PROPERTY">
      <source-position filename="glade-xml-utils.h" line="123"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_QUERY" value="query" c:type="GLADE_TAG_QUERY">
      <source-position filename="glade-xml-utils.h" line="137"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_READ_CHILD_FUNCTION"
              value="read-child-function"
              c:type="GLADE_TAG_READ_CHILD_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="116"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_READ_WIDGET_FUNCTION"
              value="read-widget-function"
              c:type="GLADE_TAG_READ_WIDGET_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="113"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_REMOVE_CHILD_FUNCTION"
              value="remove-child-function"
              c:type="GLADE_TAG_REMOVE_CHILD_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="103"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_REPLACE_CHILD_FUNCTION"
              value="replace-child-function"
              c:type="GLADE_TAG_REPLACE_CHILD_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="94"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_RESOURCE" value="resource" c:type="GLADE_TAG_RESOURCE">
      <source-position filename="glade-xml-utils.h" line="166"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_SAVE" value="save" c:type="GLADE_TAG_SAVE">
      <source-position filename="glade-xml-utils.h" line="161"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_SAVE_ALWAYS"
              value="save-always"
              c:type="GLADE_TAG_SAVE_ALWAYS">
      <source-position filename="glade-xml-utils.h" line="162"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_SET_FUNCTION"
              value="set-property-function"
              c:type="GLADE_TAG_SET_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="134"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_SIGNAL" value="signal" c:type="GLADE_TAG_SIGNAL">
      <source-position filename="glade-xml-utils.h" line="85"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_SIGNALS" value="signals" c:type="GLADE_TAG_SIGNALS">
      <source-position filename="glade-xml-utils.h" line="84"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_SPEC" value="spec" c:type="GLADE_TAG_SPEC">
      <source-position filename="glade-xml-utils.h" line="128"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_SPECIAL_CHILD_TYPE"
              value="special-child-type"
              c:type="GLADE_TAG_SPECIAL_CHILD_TYPE">
      <source-position filename="glade-xml-utils.h" line="160"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_SPECIFICATIONS"
              value="parameter-spec"
              c:type="GLADE_TAG_SPECIFICATIONS">
      <source-position filename="glade-xml-utils.h" line="129"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_STOCK" value="stock" c:type="GLADE_TAG_STOCK">
      <source-position filename="glade-xml-utils.h" line="167"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_STOCK_ICON"
              value="stock-icon"
              c:type="GLADE_TAG_STOCK_ICON">
      <source-position filename="glade-xml-utils.h" line="168"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_STRING_FROM_VALUE_FUNCTION"
              value="string-from-value-function"
              c:type="GLADE_TAG_STRING_FROM_VALUE_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="119"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_TARGETABLE"
              value="targetable"
              c:type="GLADE_TAG_TARGETABLE">
      <source-position filename="glade-xml-utils.h" line="68"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_TEMPLATE_PREFIX"
              value="template-prefix"
              c:type="GLADE_TAG_TEMPLATE_PREFIX">
      <source-position filename="glade-xml-utils.h" line="188"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_THEMED_ICON"
              value="themed-icon"
              c:type="GLADE_TAG_THEMED_ICON">
      <source-position filename="glade-xml-utils.h" line="169"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_TITLE" value="title" c:type="GLADE_TAG_TITLE">
      <source-position filename="glade-xml-utils.h" line="147"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_TOOLTIP" value="tooltip" c:type="GLADE_TAG_TOOLTIP">
      <source-position filename="glade-xml-utils.h" line="133"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_TOPLEVEL" value="toplevel" c:type="GLADE_TAG_TOPLEVEL">
      <source-position filename="glade-xml-utils.h" line="175"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_TRANSFER_ON_PASTE"
              value="transfer-on-paste"
              c:type="GLADE_TAG_TRANSFER_ON_PASTE">
      <source-position filename="glade-xml-utils.h" line="172"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_TRANSLATABLE"
              value="translatable"
              c:type="GLADE_TAG_TRANSLATABLE">
      <source-position filename="glade-xml-utils.h" line="151"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_TRUE" value="True" c:type="GLADE_TAG_TRUE">
      <source-position filename="glade-xml-utils.h" line="181"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_TYPE" value="type" c:type="GLADE_TAG_TYPE">
      <source-position filename="glade-xml-utils.h" line="127"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_USE_PLACEHOLDERS"
              value="use-placeholders"
              c:type="GLADE_TAG_USE_PLACEHOLDERS">
      <source-position filename="glade-xml-utils.h" line="176"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_VALUE" value="value" c:type="GLADE_TAG_VALUE">
      <source-position filename="glade-xml-utils.h" line="150"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_VALUE_TYPE"
              value="value-type"
              c:type="GLADE_TAG_VALUE_TYPE">
      <source-position filename="glade-xml-utils.h" line="132"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_VERIFY_FUNCTION"
              value="verify-function"
              c:type="GLADE_TAG_VERIFY_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="136"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_VERSION" value="version" c:type="GLADE_TAG_VERSION">
      <source-position filename="glade-xml-utils.h" line="67"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_VERSION_SINCE"
              value="since"
              c:type="GLADE_TAG_VERSION_SINCE">
      <source-position filename="glade-xml-utils.h" line="69"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_VISIBLE" value="visible" c:type="GLADE_TAG_VISIBLE">
      <source-position filename="glade-xml-utils.h" line="141"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_WEIGHT" value="weight" c:type="GLADE_TAG_WEIGHT">
      <source-position filename="glade-xml-utils.h" line="173"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_WRITE_CHILD_FUNCTION"
              value="write-child-function"
              c:type="GLADE_TAG_WRITE_CHILD_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="117"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_WRITE_WIDGET_AFTER_FUNCTION"
              value="write-widget-after-function"
              c:type="GLADE_TAG_WRITE_WIDGET_AFTER_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="115"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_WRITE_WIDGET_FUNCTION"
              value="write-widget-function"
              c:type="GLADE_TAG_WRITE_WIDGET_FUNCTION">
      <source-position filename="glade-xml-utils.h" line="114"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_YES" value="Yes" c:type="GLADE_TAG_YES">
      <source-position filename="glade-xml-utils.h" line="182"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <record name="TargetableVersion" c:type="GladeTargetableVersion">
      <source-position filename="glade-catalog.h" line="53"/>
      <field name="major" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="minor" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <enumeration name="UIMessageType"
                 glib:type-name="GladeUIMessageType"
                 glib:get-type="glade_ui_message_type_get_type"
                 c:type="GladeUIMessageType">
      <member name="info"
              value="0"
              c:identifier="GLADE_UI_INFO"
              glib:nick="info">
      </member>
      <member name="warn"
              value="1"
              c:identifier="GLADE_UI_WARN"
              glib:nick="warn">
      </member>
      <member name="error"
              value="2"
              c:identifier="GLADE_UI_ERROR"
              glib:nick="error">
      </member>
      <member name="are_you_sure"
              value="3"
              c:identifier="GLADE_UI_ARE_YOU_SURE"
              glib:nick="are-you-sure">
      </member>
      <member name="yes_or_no"
              value="4"
              c:identifier="GLADE_UI_YES_OR_NO"
              glib:nick="yes-or-no">
      </member>
    </enumeration>
    <constant name="UNNAMED_PREFIX"
              value="__glade_unnamed_"
              c:type="GLADE_UNNAMED_PREFIX">
      <source-position filename="glade-widget.h" line="62"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <enumeration name="UtilFileDialogType"
                 glib:type-name="GladeUtilFileDialogType"
                 glib:get-type="glade_util_file_dialog_type_get_type"
                 c:type="GladeUtilFileDialogType">
      <member name="open"
              value="0"
              c:identifier="GLADE_FILE_DIALOG_ACTION_OPEN"
              glib:nick="open">
      </member>
      <member name="save"
              value="1"
              c:identifier="GLADE_FILE_DIALOG_ACTION_SAVE"
              glib:nick="save">
      </member>
    </enumeration>
    <bitfield name="VerifyFlags"
              glib:type-name="GladeVerifyFlags"
              glib:get-type="glade_verify_flags_get_type"
              c:type="GladeVerifyFlags">
      <member name="versions"
              value="1"
              c:identifier="GLADE_VERIFY_VERSIONS"
              glib:nick="versions">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="74">Verify version mismatches</doc>
      </member>
      <member name="deprecations"
              value="2"
              c:identifier="GLADE_VERIFY_DEPRECATIONS"
              glib:nick="deprecations">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="75">Verify deprecations</doc>
      </member>
      <member name="unrecognized"
              value="4"
              c:identifier="GLADE_VERIFY_UNRECOGNIZED"
              glib:nick="unrecognized">
        <doc xml:space="preserve"
             filename="glade-project.h"
             line="76">Verify unrecognized types</doc>
      </member>
    </bitfield>
    <callback name="VerifyPropertyFunc" c:type="GladeVerifyPropertyFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="261">This delagate function is always called whenever setting any
properties with the exception of load time, and copy/paste time
(basicly the two places where we recreate a hierarchy that we
already know "works") its basicly an optional backend provided
boundry checker for properties.</doc>
      <source-position filename="glade-widget-adaptor.h" line="276"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3474">whether or not its OK to set @value on @object, this function
will silently return TRUE if the class did not provide a verify function.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3463">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3464">The #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3465">The property identifier</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3466">The #GValue</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Widget"
           c:symbol-prefix="widget"
           c:type="GladeWidget"
           parent="GObject.InitiallyUnowned"
           glib:type-name="GladeWidget"
           glib:get-type="glade_widget_get_type"
           glib:type-struct="WidgetClass">
      <source-position filename="glade-widget.h" line="57"/>
      <function name="get_device_from_event"
                c:identifier="glade_widget_get_device_from_event"
                introspectable="0"
                deprecated="1">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4467">Currently only motion and button events are handled (see IS_GLADE_WIDGET_EVENT)</doc>
        <doc-deprecated xml:space="preserve">use gdk_event_get_device() instead.</doc-deprecated>
        <source-position filename="glade-widget.h" line="228"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4473">the asociated GdkDevice for this glade widget event.</doc>
          <type name="Gdk.Device" c:type="GdkDevice*"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4469">a GdkEvent</doc>
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_from_gobject"
                c:identifier="glade_widget_get_from_gobject"
                introspectable="0">
        <source-position filename="glade-widget.h" line="75"/>
        <return-value>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="pop_superuser" c:identifier="glade_widget_pop_superuser">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4519">Unsets superuser mode</doc>
        <source-position filename="glade-widget.h" line="392"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="push_superuser"
                c:identifier="glade_widget_push_superuser">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4506">Sets superuser mode</doc>
        <source-position filename="glade-widget.h" line="390"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="read"
                c:identifier="glade_widget_read"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4012">Creates a new #GladeWidget from a XML node.

If node is a template and its parent class is abstract/non instantiable,
Glade will use a class with the GladeInstantiable prefix instead.

For example, with a GtkBin template Glade will GladeInstantiableGtkBin class</doc>
        <source-position filename="glade-widget.h" line="196"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4025">a new #GladeWidget for @project, based on @node</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4014">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4015">The parent #GladeWidget or %NULL</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4016">a #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
          <parameter name="internal" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="superuser" c:identifier="glade_widget_superuser">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4485">Checks if we are in superuser mode.

Superuser mode is when we are
  - Loading a project
  - Dupping a widget recursively
  - Rebuilding an instance for a construct-only property

In these cases, we must act like a load, this should be checked
from the plugin when implementing containers, when undo/redo comes
around, the plugin is responsable for maintaining the same container
size when widgets are added/removed.</doc>
        <source-position filename="glade-widget.h" line="388"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </function>
      <virtual-method name="add_child" invoker="add_child">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2422">Adds @child to @parent in a generic way for this #GladeWidget parent.</doc>
        <source-position filename="glade-widget.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="arg2" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_signal_handler" invoker="add_signal_handler">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="316">Adds a signal handler for @widget</doc>
        <source-position filename="glade-widget.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="button_press_event">
        <source-position filename="glade-widget.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="button_release_event">
        <source-position filename="glade-widget.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="change_signal_handler">
        <source-position filename="glade-widget.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="event" invoker="event">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="537">Feed an event to be handled on the project GladeWidget
hierarchy.</doc>
        <source-position filename="glade-widget.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="544">whether the event was handled or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="motion_notify_event">
        <source-position filename="glade-widget.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_child" invoker="remove_child">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2442">Removes @child from @parent in a generic way for this #GladeWidget parent.</doc>
        <source-position filename="glade-widget.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_signal_handler"
                      invoker="remove_signal_handler">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="353">Removes a signal handler from @widget</doc>
        <source-position filename="glade-widget.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="Signal" c:type="GladeSignal*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_child">
        <source-position filename="glade-widget.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="arg0" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="arg2" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="adaptor_create_internal"
              c:identifier="glade_widget_adaptor_create_internal"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="2945">A convenienve function to create a #GladeWidget of the prescribed type
for internal widgets.</doc>
        <source-position filename="glade-widget-adaptor.h" line="763"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="2962">a freshly created #GladeWidget wrapper object for the
         @internal_object of name @internal_name</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="2947">The parent #GladeWidget, or %NULL for children
                    outside of the hierarchy.</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="internal_object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="2949">the #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="internal_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="2950">a string identifier for this internal widget.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="parent_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="2951">the generic name of the parent used for fancy child names.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="anarchist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="2952">Whether or not this widget is a widget outside
                    of the parent's hierarchy (like a popup window)</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="2954">The #GladeCreateReason for which this internal widget
                    was created (usually just pass the reason from the post_create
                    function; note also this is used only by the plugin code so
                    pass something usefull here).</doc>
            <type name="CreateReason" c:type="GladeCreateReason"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_child" c:identifier="glade_widget_add_child">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2422">Adds @child to @parent in a generic way for this #GladeWidget parent.</doc>
        <source-position filename="glade-widget.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2424">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2425">the #GladeWidget to add</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="at_mouse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2426">whether the added widget should be added
           at the current mouse position</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_prop_ref" c:identifier="glade_widget_add_prop_ref">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2125">Adds @property to @widget 's list of referenced properties.

Note: this is used to track properties on other objects that
      reffer to this object.</doc>
        <source-position filename="glade-widget.h" line="238"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2127">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2128">the #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_signal_handler"
              c:identifier="glade_widget_add_signal_handler">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="316">Adds a signal handler for @widget</doc>
        <source-position filename="glade-widget.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="318">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="signal_handler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="319">The #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_verify" c:identifier="glade_widget_add_verify">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2393">Checks whether @child can be added to @parent.

If @user_feedback is %TRUE and @child cannot be
added then this shows a notification dialog to the user
explaining why.</doc>
        <source-position filename="glade-widget.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2406">whether @child can be added to @widget.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2396">The child #GladeWidget to add</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="user_feedback" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2397">whether a notification dialog should be
presented in the case that the child cannot not be added.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="change_signal_handler"
              c:identifier="glade_widget_change_signal_handler">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="395">Changes a #GladeSignal on @widget</doc>
        <source-position filename="glade-widget.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="397">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="old_signal_handler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="398">the old #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </parameter>
          <parameter name="new_signal_handler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="399">the new #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_get_property"
              c:identifier="glade_widget_child_get_property">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3536">Gets @child's packing property identified by @property_name.</doc>
        <source-position filename="glade-widget.h" line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3538">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3539">The #GladeWidget child</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3540">The id of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3541">The @GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_set_property"
              c:identifier="glade_widget_child_set_property">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3491">Sets @child's packing property identified by @property_name to @value.</doc>
        <source-position filename="glade-widget.h" line="264"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3493">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3494">The #GladeWidget child</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3495">The id of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3496">The @GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_properties"
              c:identifier="glade_widget_copy_properties">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2327">Sets properties in @widget based on the values of
matching properties in @template_widget</doc>
        <source-position filename="glade-widget.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2329">a 'dest' #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="template_widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2330">a 'src' #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="copy_parentless" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2331">whether to copy reffed widgets at all</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="exact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2332">whether to copy reffed widgets exactly</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_signals" c:identifier="glade_widget_copy_signals">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2309">Sets signals in @widget based on the values of
matching signals in @template_widget</doc>
        <source-position filename="glade-widget.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2311">a 'dest' #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="template_widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2312">a 'src' #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_editor_property"
              c:identifier="glade_widget_create_editor_property"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4747">This is a convenience function to create a GladeEditorProperty corresponding
to @property</doc>
        <source-position filename="glade-widget.h" line="214"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4757">A newly created and connected GladeEditorProperty</doc>
          <type name="EditorProperty" c:type="GladeEditorProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4749">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4750">The widget's property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="packing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4751">whether @property indicates a packing property or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="use_command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4752">Whether the undo/redo stack applies here.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="depends"
              c:identifier="glade_widget_depends"
              deprecated="1"
              deprecated-version="3.18">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4446">Determines whether @widget is somehow dependent on @other, in
which case it should be serialized after @other.

A widget is dependent on another widget.
It does not take into account for children dependencies.</doc>
        <source-position filename="glade-widget.h" line="225"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4457">%TRUE if @widget depends on @other.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4448">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="other" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4449">another #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup" c:identifier="glade_widget_dup" introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2458">Creates a deep copy of #GladeWidget. if @exact is specified,
the widget name is preserved and signals are carried over
(this is used to maintain names &amp; signals in Cut/Paste context
as opposed to Copy/Paste contexts).</doc>
        <source-position filename="glade-widget.h" line="94"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2468">The newly created #GladeWidget</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="template_widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2460">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="exact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2461">whether or not to creat an exact duplicate</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_properties"
              c:identifier="glade_widget_dup_properties"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="719">Copies a list of properties, if @as_load is specified, then
properties that are not saved to the glade file are ignored.</doc>
        <source-position filename="glade-widget.h" line="118"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="730">A newly allocated #GList of new #GladeProperty objects.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="dest_widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="721">the widget we are copying properties for</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="template_props" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="722">the #GladeProperty list to copy</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="as_load" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="723">whether to behave as if loading the project</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="copy_parentless" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="724">whether to copy reffed widgets at all</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="exact" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="725">whether to copy reffed widgets exactly</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="ensure_name" c:identifier="glade_widget_ensure_name">
        <source-position filename="glade-widget.h" line="230"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="project" transfer-ownership="none">
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
          <parameter name="use_command" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="event" c:identifier="glade_widget_event">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="537">Feed an event to be handled on the project GladeWidget
hierarchy.</doc>
        <source-position filename="glade-widget.h" line="147"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="544">whether the event was handled or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gwidget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="539">A #GdkEvent</doc>
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_child"
              c:identifier="glade_widget_find_child"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3717">Finds a child widget named @name.</doc>
        <source-position filename="glade-widget.h" line="411"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3724">The child of widget or NULL if it was not found.</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3719">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3720">child name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_path_name"
              c:identifier="glade_widget_generate_path_name">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4784">Creates a user friendly name to describe project widgets</doc>
        <source-position filename="glade-widget.h" line="219"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4790">A newly allocated string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4786">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_action"
              c:identifier="glade_widget_get_action"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4583">Returns a #GladeWidgetAction object indentified by @action_path.</doc>
        <source-position filename="glade-widget.h" line="153"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4590">the action or NULL if not found.</doc>
          <type name="WidgetAction" c:type="GladeWidgetAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4585">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4586">a full action path including groups</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_actions"
              c:identifier="glade_widget_get_actions"
              introspectable="0">
        <source-position filename="glade-widget.h" line="159"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_adaptor"
              c:identifier="glade_widget_get_adaptor"
              introspectable="0">
        <source-position filename="glade-widget.h" line="377"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2854">the #GladeWidgetAdaptor of @widget</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2852">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="glade_widget_get_children"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3756">Fetches any wrapped children of @widget.</doc>
        <source-position filename="glade-widget.h" line="384"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3762">The children of widget

&lt;note&gt;&lt;para&gt;This differs from a direct call to glade_widget_adaptor_get_children() as
it only returns children which have an associated GladeWidget. This function will
not return any placeholders or internal composite children that have not been
exposed for Glade configuration&lt;/para&gt;&lt;/note&gt;</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3758">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display_name"
              c:identifier="glade_widget_get_display_name">
        <source-position filename="glade-widget.h" line="353"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2736">a pointer to @widget's displayable name

This should be used to display the widget's ID in
the UI, it will automatically return an "(unnamed)"
string if the widget is not intended to be serialized
with an ID (i.e. the user did not provide a name).</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2734">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_internal" c:identifier="glade_widget_get_internal">
        <source-position filename="glade-widget.h" line="364"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2841">the internal name of @widget</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2839">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_composite"
              c:identifier="glade_widget_get_is_composite">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2801">Checks if @widget is a composite template to be used
with gtk_widget_class_set_template().</doc>
        <source-position filename="glade-widget.h" line="359"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2808">whether @widget is composite.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2803">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locker"
              c:identifier="glade_widget_get_locker"
              introspectable="0">
        <source-position filename="glade-widget.h" line="403"/>
        <return-value>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="glade_widget_get_name">
        <source-position filename="glade-widget.h" line="352"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2719">a pointer to @widget's name

This is what will be serialized as the widget's ID, unless
the name currently carries the %GLADE_UNNAMED_PREFIX.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2717">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_object"
              c:identifier="glade_widget_get_object"
              introspectable="0">
        <source-position filename="glade-widget.h" line="366"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3658">the #GObject associated with @widget</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3656">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pack_action"
              c:identifier="glade_widget_get_pack_action"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4601">Returns a #GladeWidgetAction object indentified by @action_path.</doc>
        <source-position filename="glade-widget.h" line="156"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4608">the action or NULL if not found.</doc>
          <type name="WidgetAction" c:type="GladeWidgetAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4603">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4604">a full action path including groups</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pack_actions"
              c:identifier="glade_widget_get_pack_actions"
              introspectable="0">
        <source-position filename="glade-widget.h" line="160"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pack_property"
              c:identifier="glade_widget_get_pack_property"
              introspectable="0">
        <source-position filename="glade-widget.h" line="115"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2936">the #GladeProperty in @widget named @id_property</doc>
          <type name="Property" c:type="GladeProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2933">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2934">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_packing_properties"
              c:identifier="glade_widget_get_packing_properties"
              introspectable="0">
        <source-position filename="glade-widget.h" line="110"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent"
              c:identifier="glade_widget_get_parent"
              introspectable="0">
        <source-position filename="glade-widget.h" line="379"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3671">The parenting #GladeWidget</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3669">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parentless_reffed_widgets"
              c:identifier="glade_widget_get_parentless_reffed_widgets"
              introspectable="0">
        <source-position filename="glade-widget.h" line="250"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parentless_widget_ref"
              c:identifier="glade_widget_get_parentless_widget_ref"
              introspectable="0">
        <source-position filename="glade-widget.h" line="247"/>
        <return-value>
          <type name="Property" c:type="GladeProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_project"
              c:identifier="glade_widget_get_project"
              introspectable="0">
        <source-position filename="glade-widget.h" line="371"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2884">the #GladeProject that @widget belongs to</doc>
          <type name="Project" c:type="GladeProject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2882">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_properties"
              c:identifier="glade_widget_get_properties"
              introspectable="0">
        <source-position filename="glade-widget.h" line="109"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_property"
              c:identifier="glade_widget_get_property"
              introspectable="0">
        <source-position filename="glade-widget.h" line="112"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2914">the #GladeProperty in @widget named @id_property</doc>
          <type name="Property" c:type="GladeProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2911">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2912">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_signal_list"
              c:identifier="glade_widget_get_signal_list"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2272">Compiles a list of #GladeSignal elements</doc>
        <source-position filename="glade-widget.h" line="97"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2278">a newly allocated #GList of #GladeSignals, the caller
must call g_list_free() to free the list.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2274">a 'dest' #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_signal_model"
              c:identifier="glade_widget_get_signal_model"
              introspectable="0">
        <source-position filename="glade-widget.h" line="409"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="5058">a GtkTreeModel that can be used to view the widget's signals.
         The signal model is owned by the #GladeWidget.</doc>
          <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="5056">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_toplevel"
              c:identifier="glade_widget_get_toplevel"
              introspectable="0">
        <source-position filename="glade-widget.h" line="386"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3799">The toplevel #GladeWidget in the hierarchy (or @widget)</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3797">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_decendant" c:identifier="glade_widget_has_decendant">
        <source-position filename="glade-widget.h" line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3899">whether this GladeWidget has any decendants of type @type
         or any decendants that implement the @type interface</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3896">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3897">a  #GType</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_name" c:identifier="glade_widget_has_name">
        <source-position filename="glade-widget.h" line="354"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2758">whether the user has named this widget with an ID</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2756">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_prop_refs" c:identifier="glade_widget_has_prop_refs">
        <source-position filename="glade-widget.h" line="245"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hide" c:identifier="glade_widget_hide">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2105">Hide @widget</doc>
        <source-position filename="glade-widget.h" line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2107">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="in_project" c:identifier="glade_widget_in_project">
        <source-position filename="glade-widget.h" line="375"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_ancestor" c:identifier="glade_widget_is_ancestor">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4419">Determines whether @widget is somewhere inside @ancestor, possibly with
intermediate containers.</doc>
        <source-position filename="glade-widget.h" line="221"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4427">%TRUE if @ancestor contains @widget as a child,
   grandchild, great grandchild, etc.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4421">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="ancestor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4422">another #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_locked_widgets"
              c:identifier="glade_widget_list_locked_widgets"
              introspectable="0">
        <source-position filename="glade-widget.h" line="405"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_prop_refs"
              c:identifier="glade_widget_list_prop_refs"
              introspectable="0">
        <source-position filename="glade-widget.h" line="244"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_signal_handlers"
              c:identifier="glade_widget_list_signal_handlers"
              introspectable="0">
        <source-position filename="glade-widget.h" line="141"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2685">A #GPtrArray of #GladeSignal for @signal_name</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="gpointer" c:type="gpointer"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2682">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="signal_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2683">the name of the signal</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lock" c:identifier="glade_widget_lock">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4976">Sets @locked to be in a locked up state
spoken for by @widget, locked widgets cannot
be removed from the project until unlocked.</doc>
        <source-position filename="glade-widget.h" line="399"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4978">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="locked" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4979">The #GladeWidget to lock</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="object_get_property"
              c:identifier="glade_widget_object_get_property">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3470">This function retrieves the value of the property @property_name on
the runtime object of @widget and sets it in @value.</doc>
        <source-position filename="glade-widget.h" line="260"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3472">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3473">The property identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3474">The #GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="object_set_property"
              c:identifier="glade_widget_object_set_property">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3448">This function applies @value to the property @property_name on
the runtime object of @widget.</doc>
        <source-position filename="glade-widget.h" line="256"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3450">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3451">The property identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3452">The #GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_property_default"
              c:identifier="glade_widget_pack_property_default">
        <source-position filename="glade-widget.h" line="306"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3430">whether whether @id_property was found and is
currently set to it's default value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3427">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3428">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_property_get"
              c:identifier="glade_widget_pack_property_get"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3013">Gets the value of @id_property in @widget packing properties</doc>
        <source-position filename="glade-widget.h" line="286"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3021">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3015">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3016">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3017">The return location for the value of the said #GladeProperty</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_property_reset"
              c:identifier="glade_widget_pack_property_reset">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3355">Resets @id_property in @widget's packing properties to it's default value</doc>
        <source-position filename="glade-widget.h" line="297"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3362">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3357">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3358">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_property_set"
              c:identifier="glade_widget_pack_property_set"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3044">Sets the value of @id_property in @widget packing properties</doc>
        <source-position filename="glade-widget.h" line="290"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3052">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3046">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3047">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3048">The return location for the value of the said #GladeProperty</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_property_set_enabled"
              c:identifier="glade_widget_pack_property_set_enabled">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3166">Sets the enabled state of @id_property in @widget's packing
properties; this is used for optional properties.</doc>
        <source-position filename="glade-widget.h" line="323"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3175">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3168">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3169">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3170">setting enabled or disabled</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_property_set_save_always"
              c:identifier="glade_widget_pack_property_set_save_always">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3227">Sets whether @id_property in @widget should be special cased
to always be saved regardless of its default value.
(used for some special cases like properties
that are assigned initial values in composite widgets
or derived widget code).</doc>
        <source-position filename="glade-widget.h" line="332"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3239">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3229">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3230">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3231">the setting</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_property_set_sensitive"
              c:identifier="glade_widget_pack_property_set_sensitive">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3106">Sets the sensitivity of @id_property in @widget's packing properties.</doc>
        <source-position filename="glade-widget.h" line="314"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3116">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3108">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3109">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3110">setting sensitive or insensitive</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3111">a description of why the user cant edit this property
         which will be used as a tooltip</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_property_string"
              c:identifier="glade_widget_pack_property_string">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3296">Same as glade_widget_property_string() but for packing
properties.</doc>
        <source-position filename="glade-widget.h" line="341"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3305">A newly allocated string representing @id_property</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3298">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3299">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3300">the #GValue to print or %NULL</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="placeholder_relation"
              c:identifier="glade_widget_placeholder_relation">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4535">Returns whether placeholders should be used
in operations concerning this parent &amp; child.

Currently that criteria is whether @parent is a
GtkContainer, @widget is a GtkWidget and the parent
adaptor has been marked to use placeholders.</doc>
        <source-position filename="glade-widget.h" line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4547">whether to use placeholders for this relationship.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4537">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4538">The child #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="property_default"
              c:identifier="glade_widget_property_default">
        <source-position filename="glade-widget.h" line="300"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3401">whether whether @id_property was found and is
currently set to it's default value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3398">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3399">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="property_get"
              c:identifier="glade_widget_property_get"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2954">Gets the value of @id_property in @widget</doc>
        <source-position filename="glade-widget.h" line="278"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2962">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2956">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2957">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2958">The return location for the value of the said #GladeProperty</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="property_original_default"
              c:identifier="glade_widget_property_original_default">
        <source-position filename="glade-widget.h" line="303"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3415">whether whether @id_property was found and is
currently set to it's original default value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3412">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3413">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="property_reset" c:identifier="glade_widget_property_reset">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3331">Resets @id_property in @widget to it's default value</doc>
        <source-position filename="glade-widget.h" line="294"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3338">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3333">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3334">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="property_set"
              c:identifier="glade_widget_property_set"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2984">Sets the value of @id_property in @widget</doc>
        <source-position filename="glade-widget.h" line="282"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="2992">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2986">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2987">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2988">A value of the correct type for the said #GladeProperty</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="property_set_enabled"
              c:identifier="glade_widget_property_set_enabled">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3137">Sets the enabled state of @id_property in @widget; this is
used for optional properties.</doc>
        <source-position filename="glade-widget.h" line="319"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3146">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3139">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3140">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3141">setting enabled or disabled</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="property_set_save_always"
              c:identifier="glade_widget_property_set_save_always">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3195">Sets whether @id_property in @widget should be special cased
to always be saved regardless of its default value.
(used for some special cases like properties
that are assigned initial values in composite widgets
or derived widget code).</doc>
        <source-position filename="glade-widget.h" line="328"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3207">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3197">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3198">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3199">the setting</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="property_set_sensitive"
              c:identifier="glade_widget_property_set_sensitive">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3075">Sets the sensitivity of @id_property in @widget</doc>
        <source-position filename="glade-widget.h" line="309"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3085">whether @id_property was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3077">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3078">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3079">setting sensitive or insensitive</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3080">a description of why the user cant edit this property
         which will be used as a tooltip</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="property_string"
              c:identifier="glade_widget_property_string">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3259">Creates a printable string representing @id_property in
@widget, if @value is specified it will be used in place
of @id_property's real value (this is a convinience
function to print/debug properties usually from plugin
backends).</doc>
        <source-position filename="glade-widget.h" line="336"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="3271">A newly allocated string representing @id_property</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3261">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3262">a string naming a #GladeProperty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3263">the #GValue to print or %NULL</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_child" c:identifier="glade_widget_read_child">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3996">Reads in a child widget from the xml (handles 'child' tag)</doc>
        <source-position filename="glade-widget.h" line="201"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3998">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3999">a #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="rebuild" c:identifier="glade_widget_rebuild">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2491">Replaces the current widget instance with
a new one while preserving all properties children and
takes care of reparenting.</doc>
        <source-position filename="glade-widget.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gwidget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2493">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_child" c:identifier="glade_widget_remove_child">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2442">Removes @child from @parent in a generic way for this #GladeWidget parent.</doc>
        <source-position filename="glade-widget.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2444">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2445">the #GladeWidget to add</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_prop_ref"
              c:identifier="glade_widget_remove_prop_ref">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2161">Removes @property from @widget 's list of referenced properties.

Note: this is used to track properties on other objects that
      reffer to this object.</doc>
        <source-position filename="glade-widget.h" line="241"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2163">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2164">the #GladeProperty</doc>
            <type name="Property" c:type="GladeProperty*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_property"
              c:identifier="glade_widget_remove_property">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="778">Removes the #GladeProperty indicated by @id_property
from @widget (this is intended for use in the plugin, to
remove properties from composite children that dont make
sence to allow the user to specify, notably - properties
that are proxied through the composite widget's properties or
style properties).</doc>
        <source-position filename="glade-widget.h" line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="780">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="id_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="781">the name of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_signal_handler"
              c:identifier="glade_widget_remove_signal_handler">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="353">Removes a signal handler from @widget</doc>
        <source-position filename="glade-widget.h" line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="355">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="signal_handler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="356">The #GladeSignal</doc>
            <type name="Signal" c:type="const GladeSignal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace" c:identifier="glade_widget_replace">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3925">Replaces a GObject with another GObject inside a GObject which
behaves as a container.

Note that both GObjects must be owned by a GladeWidget.</doc>
        <source-position filename="glade-widget.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="old_object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3927">a #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="new_object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3928">a #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_action_sensitive"
              c:identifier="glade_widget_set_action_sensitive">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4637">Sets the sensitivity of @action_path in @widget</doc>
        <source-position filename="glade-widget.h" line="162"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4645">whether @action_path was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4639">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4640">a full action path including groups</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4641">setting sensitive or insensitive</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_action_visible"
              c:identifier="glade_widget_set_action_visible">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4692">Sets the visibility of @action_path in @widget</doc>
        <source-position filename="glade-widget.h" line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4700">whether @action_path was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4694">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4695">a full action path including groups</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_child_type_from_node"
              c:identifier="glade_widget_set_child_type_from_node">
        <source-position filename="glade-widget.h" line="210"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_in_project" c:identifier="glade_widget_set_in_project">
        <source-position filename="glade-widget.h" line="373"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="in_project" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_internal" c:identifier="glade_widget_set_internal">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2818">Sets the internal name of @widget to @internal</doc>
        <source-position filename="glade-widget.h" line="361"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2820">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="internal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2821">The internal name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_composite"
              c:identifier="glade_widget_set_is_composite">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2768">Set's this widget to be toplevel composite object to be
eventually used with gtk_widget_class_set_template()

Only one widget in a project should be composite.</doc>
        <source-position filename="glade-widget.h" line="356"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2770">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="composite" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2771">whether @widget should be a composite template</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="glade_widget_set_name">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2694">Sets @widget's name to @name.</doc>
        <source-position filename="glade-widget.h" line="349"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2696">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2697">a string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pack_action_sensitive"
              c:identifier="glade_widget_set_pack_action_sensitive">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4664">Sets the sensitivity of @action_path in @widget</doc>
        <source-position filename="glade-widget.h" line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4672">whether @action_path was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4666">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4667">a full action path including groups</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4668">setting sensitive or insensitive</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pack_action_visible"
              c:identifier="glade_widget_set_pack_action_visible">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4719">Sets the visibility of @action_path in @widget</doc>
        <source-position filename="glade-widget.h" line="174"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget.c"
               line="4727">whether @action_path was found or not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4721">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4722">a full action path including groups</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_packing_properties"
              c:identifier="glade_widget_set_packing_properties">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3813">Generates the packing_properties list of the widget, given
the class of the container we are adding the widget to.
If the widget already has packing_properties, but the container
has changed, the current list is freed and replaced.</doc>
        <source-position filename="glade-widget.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3815">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3816">The parent #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parent" c:identifier="glade_widget_set_parent">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="3680">sets the parenting #GladeWidget</doc>
        <source-position filename="glade-widget.h" line="381"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3682">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="3683">the parenting #GladeWidget (or %NULL)</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_project" c:identifier="glade_widget_set_project">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2863">Makes @widget belong to @project.</doc>
        <source-position filename="glade-widget.h" line="368"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2865">a #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="project" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2866">a #GladeProject</doc>
            <type name="Project" c:type="GladeProject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_support_warning"
              c:identifier="glade_widget_set_support_warning">
        <source-position filename="glade-widget.h" line="395"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="warning" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="show" c:identifier="glade_widget_show">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="2065">Display @widget in it's project's GladeDesignView</doc>
        <source-position filename="glade-widget.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="2067">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="support_changed"
              c:identifier="glade_widget_support_changed">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="5039">Notifies that support metadata has changed on the widget.</doc>
        <source-position filename="glade-widget.h" line="407"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="5041">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="support_warning"
              c:identifier="glade_widget_support_warning">
        <source-position filename="glade-widget.h" line="397"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unlock" c:identifier="glade_widget_unlock">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4997">Unlocks @widget so that it can be removed
from the project again</doc>
        <source-position filename="glade-widget.h" line="401"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4999">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="verify" c:identifier="glade_widget_verify">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4812">Verify this widget for deprecation and versioning warnings.

This function will update the widget's support warning.</doc>
        <source-position filename="glade-widget.h" line="394"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4814">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="write" c:identifier="glade_widget_write">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4333">Recursively writes out @widget and its children
and appends the created #GladeXmlNode to @node.</doc>
        <source-position filename="glade-widget.h" line="178"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4335">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4336">A #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4337">A #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_child" c:identifier="glade_widget_write_child">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4172">Writes out a widget to the xml, takes care
of packing properties and special child types.</doc>
        <source-position filename="glade-widget.h" line="182"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4174">A #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4175">The child #GladeWidget to write</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4176">A #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4177">A #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_placeholder"
              c:identifier="glade_widget_write_placeholder">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="4196">Writes out a placeholder to the xml</doc>
        <source-position filename="glade-widget.h" line="191"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4198">The parent #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4199">A #GladePlaceHolder</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4200">A #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="4201">A #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_signals" c:identifier="glade_widget_write_signals">
        <source-position filename="glade-widget.h" line="187"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="widget" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_special_child_prop"
              c:identifier="glade_widget_write_special_child_prop">
        <source-position filename="glade-widget.h" line="205"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <type name="Widget" c:type="GladeWidget*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <property name="adaptor"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="WidgetAdaptor"/>
      </property>
      <property name="anarchist"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="composite" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="internal"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="internal-name"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="object"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="GObject.Object"/>
      </property>
      <property name="parent"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="Widget"/>
      </property>
      <property name="project"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="Project"/>
      </property>
      <property name="properties"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="reason"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="support-warning" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="template"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Widget"/>
      </property>
      <property name="template-exact"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="toplevel-height" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="toplevel-width" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="visible" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.InitiallyUnowned" c:type="GInitiallyUnowned"/>
      </field>
      <field name="priv">
        <type name="WidgetPrivate" c:type="GladeWidgetPrivate*"/>
      </field>
      <glib:signal name="add-signal-handler" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="1453">the #GladeSignal that was added to @gladewidget.</doc>
            <type name="Signal"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="button-press-event" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="1495">the #GdkEvent</doc>
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="button-release-event" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="change-signal-handler" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="1481">the #GladeSignal that changed</doc>
            <type name="Signal"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="motion-notify-event" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="1526">the #GdkEvent</doc>
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="remove-signal-handler" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="1467">the #GladeSignal that was removed from @gladewidget.</doc>
            <type name="Signal"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="support-changed" when="last">
        <doc xml:space="preserve"
             filename="glade-widget.c"
             line="1539">Emitted when property and signal support metadatas and messages
have been updated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <class name="WidgetAction"
           c:symbol-prefix="widget_action"
           c:type="GladeWidgetAction"
           parent="GObject.Object"
           glib:type-name="GladeWidgetAction"
           glib:get-type="glade_widget_action_get_type"
           glib:type-struct="WidgetActionClass">
      <source-position filename="glade-widget-action.h" line="68"/>
      <method name="get_children"
              c:identifier="glade_widget_action_get_children"
              introspectable="0">
        <source-position filename="glade-widget-action.h" line="79"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="WidgetAction" c:type="GladeWidgetAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_class"
              c:identifier="glade_widget_action_get_class"
              introspectable="0">
        <source-position filename="glade-widget-action.h" line="80"/>
        <return-value>
          <type c:type="GWActionClass*"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="WidgetAction" c:type="GladeWidgetAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sensitive"
              c:identifier="glade_widget_action_get_sensitive">
        <source-position filename="glade-widget-action.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="WidgetAction" c:type="GladeWidgetAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible"
              c:identifier="glade_widget_action_get_visible">
        <source-position filename="glade-widget-action.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="WidgetAction" c:type="GladeWidgetAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_sensitive"
              c:identifier="glade_widget_action_set_sensitive">
        <doc xml:space="preserve"
             filename="glade-widget-action.c"
             line="206">Set whether or not this action is sensitive.</doc>
        <source-position filename="glade-widget-action.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-action.c"
                 line="208">a #GladeWidgetAction</doc>
            <type name="WidgetAction" c:type="GladeWidgetAction*"/>
          </instance-parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible"
              c:identifier="glade_widget_action_set_visible">
        <source-position filename="glade-widget-action.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="WidgetAction" c:type="GladeWidgetAction*"/>
          </instance-parameter>
          <parameter name="visible" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="class"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="sensitive" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="visible" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="WidgetActionPrivate" c:type="GladeWidgetActionPrivate*"/>
      </field>
    </class>
    <record name="WidgetActionClass"
            c:type="GladeWidgetActionClass"
            glib:is-gtype-struct-for="WidgetAction">
      <source-position filename="glade-widget-action.h" line="68"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-widget-action.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-widget-action.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-widget-action.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-widget-action.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <function name="clone"
                c:identifier="glade_widget_action_class_clone"
                introspectable="0">
        <source-position filename="glade-widget-action.h" line="84"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-action.c"
               line="302">a newlly allocated copy of @action.</doc>
          <type c:type="GWActionClass*"/>
        </return-value>
        <parameters>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-action.c"
                 line="300">a GWActionClass</doc>
            <type c:type="GWActionClass*"/>
          </parameter>
        </parameters>
      </function>
      <function name="free"
                c:identifier="glade_widget_action_class_free"
                introspectable="0">
        <source-position filename="glade-widget-action.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action" transfer-ownership="none">
            <type c:type="GWActionClass*"/>
          </parameter>
        </parameters>
      </function>
      <function name="new"
                c:identifier="glade_widget_action_class_new"
                introspectable="0">
        <source-position filename="glade-widget-action.h" line="83"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-action.c"
               line="284">a newlly created #GWActionClass for @path.</doc>
          <type c:type="GWActionClass*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-action.c"
                 line="282">the action path</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_important"
                c:identifier="glade_widget_action_class_set_important"
                introspectable="0">
        <source-position filename="glade-widget-action.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action" transfer-ownership="none">
            <type c:type="GWActionClass*"/>
          </parameter>
          <parameter name="important" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_label"
                c:identifier="glade_widget_action_class_set_label"
                introspectable="0">
        <source-position filename="glade-widget-action.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action" transfer-ownership="none">
            <type c:type="GWActionClass*"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_stock"
                c:identifier="glade_widget_action_class_set_stock"
                introspectable="0">
        <source-position filename="glade-widget-action.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action" transfer-ownership="none">
            <type c:type="GWActionClass*"/>
          </parameter>
          <parameter name="stock" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="WidgetActionPrivate"
            c:type="GladeWidgetActionPrivate"
            disguised="1">
      <source-position filename="glade-widget-action.h" line="38"/>
    </record>
    <class name="WidgetAdaptor"
           c:symbol-prefix="widget_adaptor"
           c:type="GladeWidgetAdaptor"
           parent="GObject.Object"
           glib:type-name="GladeWidgetAdaptor"
           glib:get-type="glade_widget_adaptor_get_type"
           glib:type-struct="WidgetAdaptorClass">
      <source-position filename="glade-widget-adaptor.h" line="734"/>
      <function name="create_widget_real"
                c:identifier="glade_widget_adaptor_create_widget_real"
                introspectable="0">
        <source-position filename="glade-widget-adaptor.h" line="770"/>
        <return-value>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <parameter name="query" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="first_property" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <varargs/>
          </parameter>
        </parameters>
      </function>
      <function name="from_catalog"
                c:identifier="glade_widget_adaptor_from_catalog"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="2679">Dynamicly creates a subclass of #GladeWidgetAdaptor and subclasses
the closest parent adaptor (parent class adapters must be creates/registerd
prior to child classes, otherwise inheritance wont work) and parses in
the relevent catalog info.</doc>
        <source-position filename="glade-widget-adaptor.h" line="757"/>
        <return-value>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </return-value>
        <parameters>
          <parameter name="catalog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="2681">A #GladeCatalog</doc>
            <type name="Catalog" c:type="GladeCatalog*"/>
          </parameter>
          <parameter name="class_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="2682">the #GladeXmlNode to load</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
          <parameter name="module" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="2683">the plugin GModule.</doc>
            <type name="GModule.Module" c:type="GModule*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_by_name"
                c:identifier="glade_widget_adaptor_get_by_name"
                introspectable="0">
        <source-position filename="glade-widget-adaptor.h" line="775"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3068">an existing #GladeWidgetAdaptor with the name equaling @name,
         or %NULL if such a class doesn't exist</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3066">name of the widget class (for instance: GtkButton)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_by_type"
                c:identifier="glade_widget_adaptor_get_by_type"
                introspectable="0">
        <source-position filename="glade-widget-adaptor.h" line="776"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3087">an existing #GladeWidgetAdaptor with the type equaling @type,
         or %NULL if such a class doesn't exist</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3085">the #GType of an object class</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </function>
      <function name="list_adaptors"
                c:identifier="glade_widget_adaptor_list_adaptors"
                introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="1885">Compiles a list of all registered adaptors.</doc>
        <source-position filename="glade-widget-adaptor.h" line="755"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="1890">A newly allocated #GList which must be freed with g_list_free()</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
      </function>
      <virtual-method name="action_activate" invoker="action_activate">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4106">An adaptor function to be called on widget actions.</doc>
        <source-position filename="glade-widget-adaptor.h" line="486"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4108">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4109">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4110">The action identifier in the action tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="action_submenu"
                      invoker="action_submenu"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4152">This delagate function is used to create dynamically customized
submenus. Called only for actions that dont have children.</doc>
        <source-position filename="glade-widget-adaptor.h" line="516"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4161">A newly created #GtkMenu or %NULL</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4154">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4155">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4156">The action identifier in the action tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add" invoker="add">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3526">Adds @child to @container.</doc>
        <source-position filename="glade-widget-adaptor.h" line="378"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3528">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.h"
                 line="373">A #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3530">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_verify" invoker="add_verify">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3496">Checks whether @child can be added to @parent.

If @user_feedback is %TRUE and @child cannot be
added then this shows a notification dialog to the user
explaining why.</doc>
        <source-position filename="glade-widget-adaptor.h" line="353"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3510">whether @child can be added to @parent.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3498">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3499">A #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3500">A #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="user_feedback" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3501">whether a notification dialog should be
presented in the case that the child cannot not be added.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_action_activate"
                      invoker="child_action_activate">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4127">An adaptor function to be called on widget actions.</doc>
        <source-position filename="glade-widget-adaptor.h" line="500"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4129">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.h"
                 line="493">The #GtkContainer</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4130">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4131">The action identifier in the action tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_get_property" invoker="child_get_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3663">Gets @child's packing property identified by @property_name.</doc>
        <source-position filename="glade-widget-adaptor.h" line="309"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3665">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3666">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3667">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3668">The id of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3669">The @GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_set_property" invoker="child_set_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3628">Sets @child's packing property identified by @property_name to @value.</doc>
        <source-position filename="glade-widget-adaptor.h" line="292"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3630">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3631">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3632">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3633">The id of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3634">The @GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_verify_property"
                      invoker="child_verify_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3694">This delagate function is always called whenever setting any
properties with the exception of load time, and copy/paste time
(basicly the two places where we recreate a hierarchy that we
already know "works") its basicly an optional backend provided
boundry checker for properties.</doc>
        <source-position filename="glade-widget-adaptor.h" line="331"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3708">whether or not its OK to set @value on @object, this function
will silently return TRUE if the class did not provide a verify function.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3696">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3697">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3698">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3699">The id of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3700">The @GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="construct_object"
                      invoker="construct_object"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3265">This function is called to construct a GObject instance for
a #GladeWidget of the said @adaptor. (provided for language
bindings that may need to construct a wrapper object).</doc>
        <source-position filename="glade-widget-adaptor.h" line="423"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3276">A newly created #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3267">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="n_parameters" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3268">amount of construct parameters</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="parameters" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3269">array of construct #GParameter args to create
             the new object with.</doc>
            <type name="GObject.Parameter" c:type="GParameter*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_editable"
                      invoker="create_editable"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4447">This is used to allow the backend to override the way an
editor page is layed out (note that editor widgets are created
on demand and not at startup).</doc>
        <source-position filename="glade-widget-adaptor.h" line="612"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4456">A new #GladeEditable widget</doc>
          <type name="Editable" c:type="GladeEditable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4449">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4450">The #GladeEditorPageType</doc>
            <type name="EditorPageType" c:type="GladeEditorPageType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_eprop"
                      invoker="create_eprop"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4324">Creates a GladeEditorProperty to edit @klass</doc>
        <source-position filename="glade-widget-adaptor.h" line="578"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4333">A newly created #GladeEditorProperty</doc>
          <type name="EditorProperty" c:type="GladeEditorProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4326">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4327">The #GladePropertyClass to be edited</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </parameter>
          <parameter name="use_command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4328">whether to use the GladeCommand interface
to commit property changes</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_widget" introspectable="0">
        <source-position filename="glade-widget-adaptor.h" line="226"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.h"
               line="224">A newly created #GladeWidget for the said adaptor.</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.h"
                 line="216">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="first_property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.h"
                 line="217">the name of the first property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="var_args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.h"
                 line="218">the value of the first property, followed optionally by more
 name/value pairs, followed by %NULL</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="deep_post_create">
        <source-position filename="glade-widget-adaptor.h" line="459"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3343">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3344">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3345">The #GladeCreateReason that @object was created for</doc>
            <type name="CreateReason" c:type="GladeCreateReason"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="depends"
                      invoker="depends"
                      deprecated="1"
                      deprecated-version="3.18">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4181">Checks whether @widget depends on @another to be placed earlier in
the glade file.</doc>
        <source-position filename="glade-widget-adaptor.h" line="533"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4190">whether @widget depends on @another being parsed first in
the resulting glade file.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4183">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4184">A #GladeWidget of the adaptor</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="another" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4185">another #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="destroy_object" invoker="destroy_object">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3290">This function is called to destroy a GObject instance.</doc>
        <source-position filename="glade-widget-adaptor.h" line="446"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3292">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3293">The object to destroy</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_children"
                      invoker="get_children"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3576">Lists the children of @container.</doc>
        <source-position filename="glade-widget-adaptor.h" line="367"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3583">A #GList of children</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3578">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3579">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_internal_child"
                      invoker="get_internal_child"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3376">Retrieves the internal object @internal_name from @object</doc>
        <source-position filename="glade-widget-adaptor.h" line="473"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3384">The internal #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3378">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.h"
                 line="466">A #GObject composite object</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.h"
                 line="467">A string identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_property" invoker="get_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3434">Gets @value of @property_name on @object.</doc>
        <source-position filename="glade-widget-adaptor.h" line="256"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3436">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3437">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3438">The property identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3439">The #GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="post_create" invoker="post_create">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3341">An adaptor function to be called after the object is created</doc>
        <source-position filename="glade-widget-adaptor.h" line="459"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3343">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3344">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3345">The #GladeCreateReason that @object was created for</doc>
            <type name="CreateReason" c:type="GladeCreateReason"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_child" invoker="read_child">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4275">This function is called to update load a child @widget
from @node when loading xml files (will recurse into
glade_widget_read())</doc>
        <source-position filename="glade-widget-adaptor.h" line="548"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4277">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4278">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4279">The #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_widget" invoker="read_widget">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4203">This function is called to update @widget from @node
when loading xml files.</doc>
        <source-position filename="glade-widget-adaptor.h" line="548"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4277">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4278">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4279">The #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove" invoker="remove">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3551">Removes @child from @container.</doc>
        <source-position filename="glade-widget-adaptor.h" line="390"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3553">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.h"
                 line="385">A #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3555">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_child" invoker="replace_child">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3735">Replaces @old_obj with @new_obj in @container while positioning
@new_obj where @old_obj was and assigning it appropriate packing
property values.</doc>
        <source-position filename="glade-widget-adaptor.h" line="404"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3737">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3738">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="old_obj" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3739">The old #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="new_obj" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3740">The new #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_property" invoker="set_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3406">This delagate function is used to apply the property value on
the runtime object.</doc>
        <source-position filename="glade-widget-adaptor.h" line="242"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3408">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3409">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3410">The property identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3411">The #GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="string_from_value" invoker="string_from_value">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4390">For normal properties this is used to serialize
property values, for custom properties its still
needed to update the UI for undo/redo items etc.</doc>
        <source-position filename="glade-widget-adaptor.h" line="595"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4400">A newly allocated string representation of @value</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4392">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4393">The #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4394">The #GValue to convert to a string</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="verify_property" invoker="verify_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3461">This delagate function is always called whenever setting any
properties with the exception of load time, and copy/paste time
(basicly the two places where we recreate a hierarchy that we
already know "works") its basicly an optional backend provided
boundry checker for properties.</doc>
        <source-position filename="glade-widget-adaptor.h" line="276"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3474">whether or not its OK to set @value on @object, this function
will silently return TRUE if the class did not provide a verify function.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3463">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3464">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3465">The property identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3466">The #GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_child" invoker="write_child">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4298">This function is called to write the child @widget to @node
when writing xml files (takes care of packing and recurses
into glade_widget_write())</doc>
        <source-position filename="glade-widget-adaptor.h" line="561"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4252">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4253">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4254">The #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4255">The #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_widget" invoker="write_widget">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4225">This function is called to write @widget to @node
when writing xml files.</doc>
        <source-position filename="glade-widget-adaptor.h" line="561"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4252">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4253">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4254">The #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4255">The #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_widget_after" invoker="write_widget_after">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4250">This function is called to write @widget to @node
when writing xml files (after writing children)</doc>
        <source-position filename="glade-widget-adaptor.h" line="561"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4252">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4253">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4254">The #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4255">The #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="action_activate"
              c:identifier="glade_widget_adaptor_action_activate">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4106">An adaptor function to be called on widget actions.</doc>
        <source-position filename="glade-widget-adaptor.h" line="867"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4108">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4109">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4110">The action identifier in the action tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="action_add" c:identifier="glade_widget_adaptor_action_add">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3936">Add an action to @adaptor.
If the action is present then it overrides label and stock</doc>
        <source-position filename="glade-widget-adaptor.h" line="851"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3947">whether or not the action was added/updated.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3938">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3939">The identifier of this action in the action tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3940">A translated label to show in the UI for this action</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="stock" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3941">If set, this stock item will be shown in the UI along side the label.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="important" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3942">if this action is important.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="action_remove"
              c:identifier="glade_widget_adaptor_action_remove">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4014">Remove an @adaptor's action.</doc>
        <source-position filename="glade-widget-adaptor.h" line="861"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4021">whether or not the action was removed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4016">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4017">The identifier of this action in the action tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="action_submenu"
              c:identifier="glade_widget_adaptor_action_submenu"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4152">This delagate function is used to create dynamically customized
submenus. Called only for actions that dont have children.</doc>
        <source-position filename="glade-widget-adaptor.h" line="874"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4161">A newly created #GtkMenu or %NULL</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4154">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4155">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4156">The action identifier in the action tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="actions_new"
              c:identifier="glade_widget_adaptor_actions_new"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4054">Create a list of actions.</doc>
        <source-position filename="glade-widget-adaptor.h" line="865"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4060">a new list of GladeWidgetAction.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4056">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add" c:identifier="glade_widget_adaptor_add">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3526">Adds @child to @container.</doc>
        <source-position filename="glade-widget-adaptor.h" line="815"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3528">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3529">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3530">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_verify" c:identifier="glade_widget_adaptor_add_verify">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3496">Checks whether @child can be added to @parent.

If @user_feedback is %TRUE and @child cannot be
added then this shows a notification dialog to the user
explaining why.</doc>
        <source-position filename="glade-widget-adaptor.h" line="811"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3510">whether @child can be added to @parent.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3498">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3500">A #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="user_feedback" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3501">whether a notification dialog should be
presented in the case that the child cannot not be added.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_action_activate"
              c:identifier="glade_widget_adaptor_child_action_activate">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4127">An adaptor function to be called on widget actions.</doc>
        <source-position filename="glade-widget-adaptor.h" line="870"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4129">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4130">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4131">The action identifier in the action tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_get_property"
              c:identifier="glade_widget_adaptor_child_get_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3663">Gets @child's packing property identified by @property_name.</doc>
        <source-position filename="glade-widget-adaptor.h" line="831"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3665">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3666">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3667">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3668">The id of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3669">The @GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_set_property"
              c:identifier="glade_widget_adaptor_child_set_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3628">Sets @child's packing property identified by @property_name to @value.</doc>
        <source-position filename="glade-widget-adaptor.h" line="826"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3630">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3631">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3632">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3633">The id of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3634">The @GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_verify_property"
              c:identifier="glade_widget_adaptor_child_verify_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3694">This delagate function is always called whenever setting any
properties with the exception of load time, and copy/paste time
(basicly the two places where we recreate a hierarchy that we
already know "works") its basicly an optional backend provided
boundry checker for properties.</doc>
        <source-position filename="glade-widget-adaptor.h" line="836"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3708">whether or not its OK to set @value on @object, this function
will silently return TRUE if the class did not provide a verify function.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3696">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3697">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3698">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3699">The id of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3700">The @GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="construct_object"
              c:identifier="glade_widget_adaptor_construct_object"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3265">This function is called to construct a GObject instance for
a #GladeWidget of the said @adaptor. (provided for language
bindings that may need to construct a wrapper object).</doc>
        <source-position filename="glade-widget-adaptor.h" line="788"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3276">A newly created #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3267">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="n_parameters" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3268">amount of construct parameters</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="parameters" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3269">array of construct #GParameter args to create
             the new object with.</doc>
            <type name="GObject.Parameter" c:type="GParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_editable"
              c:identifier="glade_widget_adaptor_create_editable"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4447">This is used to allow the backend to override the way an
editor page is layed out (note that editor widgets are created
on demand and not at startup).</doc>
        <source-position filename="glade-widget-adaptor.h" line="913"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4456">A new #GladeEditable widget</doc>
          <type name="Editable" c:type="GladeEditable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4449">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4450">The #GladeEditorPageType</doc>
            <type name="EditorPageType" c:type="GladeEditorPageType"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_eprop"
              c:identifier="glade_widget_adaptor_create_eprop"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4324">Creates a GladeEditorProperty to edit @klass</doc>
        <source-position filename="glade-widget-adaptor.h" line="902"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4333">A newly created #GladeEditorProperty</doc>
          <type name="EditorProperty" c:type="GladeEditorProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4326">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4327">The #GladePropertyClass to be edited</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </parameter>
          <parameter name="use_command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4328">whether to use the GladeCommand interface
to commit property changes</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_eprop_by_name"
              c:identifier="glade_widget_adaptor_create_eprop_by_name"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4356">Creates a #GladeEditorProperty to edit #GladePropertyClass @name in @adaptor</doc>
        <source-position filename="glade-widget-adaptor.h" line="905"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4366">A newly created #GladeEditorProperty</doc>
          <type name="EditorProperty" c:type="GladeEditorProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4358">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="property_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4359">the string if of the coresponding #GladePropertyClass to be edited</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="packing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4360">whether this reffers to a packing property</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="use_command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4361">whether to use the GladeCommand interface
to commit property changes</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="default_params"
              c:identifier="glade_widget_adaptor_default_params"
              introspectable="0">
        <source-position filename="glade-widget-adaptor.h" line="785"/>
        <return-value>
          <type name="GObject.Parameter" c:type="GParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="construct" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="n_params" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="depends"
              c:identifier="glade_widget_adaptor_depends"
              deprecated="1"
              deprecated-version="3.18">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4181">Checks whether @widget depends on @another to be placed earlier in
the glade file.</doc>
        <source-position filename="glade-widget-adaptor.h" line="879"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4190">whether @widget depends on @another being parsed first in
the resulting glade file.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4183">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4184">A #GladeWidget of the adaptor</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="another" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4185">another #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="destroy_object"
              c:identifier="glade_widget_adaptor_destroy_object">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3290">This function is called to destroy a GObject instance.</doc>
        <source-position filename="glade-widget-adaptor.h" line="791"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3292">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3293">The object to destroy</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="from_pspec"
              c:identifier="glade_widget_adaptor_from_pspec"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3099">Assumes @pspec is a property in an object class wrapped by @adaptor,
this function will search for the specific parent adaptor class which
originally introduced @pspec.</doc>
        <source-position filename="glade-widget-adaptor.h" line="777"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3108">the closest #GladeWidgetAdaptor in the ancestry to @adaptor
         which is responsable for introducing @pspec.</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3101">a #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="spec" transfer-ownership="none">
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_book" c:identifier="glade_widget_adaptor_get_book">
        <source-position filename="glade-widget-adaptor.h" line="750"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_catalog"
              c:identifier="glade_widget_adaptor_get_catalog">
        <source-position filename="glade-widget-adaptor.h" line="749"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="glade_widget_adaptor_get_children"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3576">Lists the children of @container.</doc>
        <source-position filename="glade-widget-adaptor.h" line="821"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3583">A #GList of children</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3578">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3579">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_display_name"
              c:identifier="glade_widget_adaptor_get_display_name">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="1790">Returns the name of the adaptor without GWA_INSTANTIABLE_PREFIX</doc>
        <source-position filename="glade-widget-adaptor.h" line="745"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="1792">a #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_generic_name"
              c:identifier="glade_widget_adaptor_get_generic_name">
        <source-position filename="glade-widget-adaptor.h" line="744"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="glade_widget_adaptor_get_icon_name">
        <source-position filename="glade-widget-adaptor.h" line="747"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_internal_child"
              c:identifier="glade_widget_adaptor_get_internal_child"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3376">Retrieves the internal object @internal_name from @object</doc>
        <source-position filename="glade-widget-adaptor.h" line="796"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3384">The internal #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3378">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3379">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="internal_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3380">The string identifier of the internal object</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_missing_icon"
              c:identifier="glade_widget_adaptor_get_missing_icon">
        <source-position filename="glade-widget-adaptor.h" line="748"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="glade_widget_adaptor_get_name">
        <source-position filename="glade-widget-adaptor.h" line="743"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_object_type"
              c:identifier="glade_widget_adaptor_get_object_type">
        <source-position filename="glade-widget-adaptor.h" line="742"/>
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pack_property_class"
              c:identifier="glade_widget_adaptor_get_pack_property_class"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3162">Retrieves the #GladePropertyClass for @name in
@adaptor's child properties</doc>
        <source-position filename="glade-widget-adaptor.h" line="782"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3170">A #GladePropertyClass object</doc>
          <type name="PropertyClass" c:type="GladePropertyClass*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3164">a #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3165">a string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_packing_default"
              c:identifier="glade_widget_adaptor_get_packing_default">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3794">Gets the default value for @property_id on a widget governed by
@child_adaptor when parented in a widget governed by @parent_adaptor</doc>
        <source-position filename="glade-widget-adaptor.h" line="847"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3803">a string representing the default value for @property_id</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="child_adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3796">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container_adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3797">The #GladeWidgetAdaptor for the parent object</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3798">The string property identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_packing_props"
              c:identifier="glade_widget_adaptor_get_packing_props"
              introspectable="0">
        <source-position filename="glade-widget-adaptor.h" line="752"/>
        <return-value transfer-ownership="none">
          <type name="GLib.List" c:type="const GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent_adaptor"
              c:identifier="glade_widget_adaptor_get_parent_adaptor"
              introspectable="0">
        <source-position filename="glade-widget-adaptor.h" line="917"/>
        <return-value>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_properties"
              c:identifier="glade_widget_adaptor_get_properties"
              introspectable="0">
        <source-position filename="glade-widget-adaptor.h" line="751"/>
        <return-value transfer-ownership="none">
          <type name="GLib.List" c:type="const GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_property"
              c:identifier="glade_widget_adaptor_get_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3434">Gets @value of @property_name on @object.</doc>
        <source-position filename="glade-widget-adaptor.h" line="803"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3436">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3437">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3438">The property identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3439">The #GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_property_class"
              c:identifier="glade_widget_adaptor_get_property_class"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3137">Retrieves the #GladePropertyClass for @name in @adaptor</doc>
        <source-position filename="glade-widget-adaptor.h" line="780"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3144">A #GladePropertyClass object</doc>
          <type name="PropertyClass" c:type="GladePropertyClass*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3139">a #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3140">a string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_signal_class"
              c:identifier="glade_widget_adaptor_get_signal_class"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4417">Looks up signal class @name on @adaptor.</doc>
        <source-position filename="glade-widget-adaptor.h" line="915"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4424">a #GladeSignalClass or %NULL</doc>
          <type name="SignalClass" c:type="GladeSignalClass*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4419">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4420">the name of the signal class.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_signals"
              c:identifier="glade_widget_adaptor_get_signals"
              introspectable="0">
        <source-position filename="glade-widget-adaptor.h" line="753"/>
        <return-value transfer-ownership="none">
          <type name="GLib.List" c:type="const GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title" c:identifier="glade_widget_adaptor_get_title">
        <source-position filename="glade-widget-adaptor.h" line="746"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_child" c:identifier="glade_widget_adaptor_has_child">
        <source-position filename="glade-widget-adaptor.h" line="823"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3603">whether @child is infact inside @container.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3599">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3600">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3601">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_internal_children"
              c:identifier="glade_widget_adaptor_has_internal_children">
        <source-position filename="glade-widget-adaptor.h" line="919"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_container"
              c:identifier="glade_widget_adaptor_is_container">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3832">Checks whether or not this adaptor has support
to interface with child objects.</doc>
        <source-position filename="glade-widget-adaptor.h" line="850"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3839">whether or not @adaptor is a container</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3834">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pack_action_add"
              c:identifier="glade_widget_adaptor_pack_action_add">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3964">Add a packing action to @adaptor.
If the action is present then it overrides label and stock</doc>
        <source-position filename="glade-widget-adaptor.h" line="856"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3975">whether or not the action was added/updated.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3966">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3967">The identifier of this action in the action tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3968">A translated label to show in the UI for this action</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="stock" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3969">If set, this stock item will be shown in the UI along side the label.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="important" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3970">if this action is important.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_action_remove"
              c:identifier="glade_widget_adaptor_pack_action_remove">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4034">Remove an @adaptor's packing action.</doc>
        <source-position filename="glade-widget-adaptor.h" line="863"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4041">whether or not the action was removed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4036">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="action_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4037">The identifier of this action in the action tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_actions_new"
              c:identifier="glade_widget_adaptor_pack_actions_new"
              introspectable="0">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4080">Create a list of packing actions.</doc>
        <source-position filename="glade-widget-adaptor.h" line="866"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4086">a new list of GladeWidgetAction.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4082">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="post_create"
              c:identifier="glade_widget_adaptor_post_create">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3341">An adaptor function to be called after the object is created</doc>
        <source-position filename="glade-widget-adaptor.h" line="793"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3343">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3344">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3345">The #GladeCreateReason that @object was created for</doc>
            <type name="CreateReason" c:type="GladeCreateReason"/>
          </parameter>
        </parameters>
      </method>
      <method name="query" c:identifier="glade_widget_adaptor_query">
        <source-position filename="glade-widget-adaptor.h" line="845"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3769">whether the user needs to be queried for
certain properties upon creation of this class.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3767">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_child" c:identifier="glade_widget_adaptor_read_child">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4275">This function is called to update load a child @widget
from @node when loading xml files (will recurse into
glade_widget_read())</doc>
        <source-position filename="glade-widget-adaptor.h" line="894"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4277">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4278">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4279">The #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_widget"
              c:identifier="glade_widget_adaptor_read_widget">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4203">This function is called to update @widget from @node
when loading xml files.</doc>
        <source-position filename="glade-widget-adaptor.h" line="883"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4205">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4206">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4207">The #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="register" c:identifier="glade_widget_adaptor_register">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="1902">Registers @adaptor into the Glade core (every supported
object type must have a registered adaptor).</doc>
        <source-position filename="glade-widget-adaptor.h" line="761"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="1904">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="glade_widget_adaptor_remove">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3551">Removes @child from @container.</doc>
        <source-position filename="glade-widget-adaptor.h" line="818"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3553">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3554">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3555">The #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_child"
              c:identifier="glade_widget_adaptor_replace_child">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3735">Replaces @old_obj with @new_obj in @container while positioning
@new_obj where @old_obj was and assigning it appropriate packing
property values.</doc>
        <source-position filename="glade-widget-adaptor.h" line="841"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3737">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3738">The #GObject container</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="old_obj" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3739">The old #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="new_obj" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3740">The new #GObject child</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_property"
              c:identifier="glade_widget_adaptor_set_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3406">This delagate function is used to apply the property value on
the runtime object.</doc>
        <source-position filename="glade-widget-adaptor.h" line="799"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3408">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3409">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3410">The property identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3411">The #GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="string_from_value"
              c:identifier="glade_widget_adaptor_string_from_value">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4390">For normal properties this is used to serialize
property values, for custom properties its still
needed to update the UI for undo/redo items etc.</doc>
        <source-position filename="glade-widget-adaptor.h" line="910"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4400">A newly allocated string representation of @value</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4392">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4393">The #GladePropertyClass</doc>
            <type name="PropertyClass" c:type="GladePropertyClass*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4394">The #GValue to convert to a string</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="verify_property"
              c:identifier="glade_widget_adaptor_verify_property">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="3461">This delagate function is always called whenever setting any
properties with the exception of load time, and copy/paste time
(basicly the two places where we recreate a hierarchy that we
already know "works") its basicly an optional backend provided
boundry checker for properties.</doc>
        <source-position filename="glade-widget-adaptor.h" line="807"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="3474">whether or not its OK to set @value on @object, this function
will silently return TRUE if the class did not provide a verify function.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3463">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3464">The #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3465">The property identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="3466">The #GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_child"
              c:identifier="glade_widget_adaptor_write_child">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4298">This function is called to write the child @widget to @node
when writing xml files (takes care of packing and recurses
into glade_widget_write())</doc>
        <source-position filename="glade-widget-adaptor.h" line="897"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4300">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4301">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4302">The #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4303">The #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_widget"
              c:identifier="glade_widget_adaptor_write_widget">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4225">This function is called to write @widget to @node
when writing xml files.</doc>
        <source-position filename="glade-widget-adaptor.h" line="886"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4227">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4228">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4229">The #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4230">The #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_widget_after"
              c:identifier="glade_widget_adaptor_write_widget_after">
        <doc xml:space="preserve"
             filename="glade-widget-adaptor.c"
             line="4250">This function is called to write @widget to @node
when writing xml files (after writing children)</doc>
        <source-position filename="glade-widget-adaptor.h" line="890"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="adaptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4252">A #GladeWidgetAdaptor</doc>
            <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4253">The #GladeWidget</doc>
            <type name="Widget" c:type="GladeWidget*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4254">The #GladeXmlContext</doc>
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget-adaptor.c"
                 line="4255">The #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <property name="book"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="catalog"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="cursor" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="generic-name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="icon-name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="query" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="special-child-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="WidgetAdaptorPrivate" c:type="GladeWidgetAdaptorPrivate*"/>
      </field>
    </class>
    <record name="WidgetAdaptorClass"
            c:type="GladeWidgetAdaptorClass"
            glib:is-gtype-struct-for="WidgetAdaptor">
      <source-position filename="glade-widget-adaptor.h" line="734"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="version_since_major">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="version_since_minor">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="default_width">
        <type name="gint16" c:type="gint16"/>
      </field>
      <field name="default_height">
        <type name="gint16" c:type="gint16"/>
      </field>
      <field name="deprecated" bits="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="toplevel" bits="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="use_placeholders" bits="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="create_widget" introspectable="0">
        <type name="CreateWidgetFunc" c:type="GladeCreateWidgetFunc"/>
      </field>
      <field name="construct_object" introspectable="0">
        <type name="ConstructObjectFunc" c:type="GladeConstructObjectFunc"/>
      </field>
      <field name="deep_post_create">
        <type name="PostCreateFunc" c:type="GladePostCreateFunc"/>
      </field>
      <field name="post_create">
        <type name="PostCreateFunc" c:type="GladePostCreateFunc"/>
      </field>
      <field name="get_internal_child" introspectable="0">
        <type name="GetInternalFunc" c:type="GladeGetInternalFunc"/>
      </field>
      <field name="verify_property">
        <type name="VerifyPropertyFunc" c:type="GladeVerifyPropertyFunc"/>
      </field>
      <field name="set_property">
        <type name="SetPropertyFunc" c:type="GladeSetPropertyFunc"/>
      </field>
      <field name="get_property">
        <type name="GetPropertyFunc" c:type="GladeGetPropertyFunc"/>
      </field>
      <field name="add_verify">
        <type name="AddChildVerifyFunc" c:type="GladeAddChildVerifyFunc"/>
      </field>
      <field name="add">
        <type name="AddChildFunc" c:type="GladeAddChildFunc"/>
      </field>
      <field name="remove">
        <type name="RemoveChildFunc" c:type="GladeRemoveChildFunc"/>
      </field>
      <field name="get_children" introspectable="0">
        <type name="GetChildrenFunc" c:type="GladeGetChildrenFunc"/>
      </field>
      <field name="child_verify_property">
        <type name="ChildVerifyPropertyFunc"
              c:type="GladeChildVerifyPropertyFunc"/>
      </field>
      <field name="child_set_property">
        <type name="ChildSetPropertyFunc" c:type="GladeChildSetPropertyFunc"/>
      </field>
      <field name="child_get_property">
        <type name="ChildGetPropertyFunc" c:type="GladeChildGetPropertyFunc"/>
      </field>
      <field name="replace_child">
        <type name="ReplaceChildFunc" c:type="GladeReplaceChildFunc"/>
      </field>
      <field name="action_activate">
        <type name="ActionActivateFunc" c:type="GladeActionActivateFunc"/>
      </field>
      <field name="child_action_activate">
        <type name="ChildActionActivateFunc"
              c:type="GladeChildActionActivateFunc"/>
      </field>
      <field name="action_submenu" introspectable="0">
        <type name="ActionSubmenuFunc" c:type="GladeActionSubmenuFunc"/>
      </field>
      <field name="depends">
        <type name="DependsFunc" c:type="GladeDependsFunc"/>
      </field>
      <field name="read_widget">
        <type name="ReadWidgetFunc" c:type="GladeReadWidgetFunc"/>
      </field>
      <field name="write_widget">
        <type name="WriteWidgetFunc" c:type="GladeWriteWidgetFunc"/>
      </field>
      <field name="read_child">
        <type name="ReadWidgetFunc" c:type="GladeReadWidgetFunc"/>
      </field>
      <field name="write_child">
        <type name="WriteWidgetFunc" c:type="GladeWriteWidgetFunc"/>
      </field>
      <field name="create_eprop" introspectable="0">
        <type name="CreateEPropFunc" c:type="GladeCreateEPropFunc"/>
      </field>
      <field name="string_from_value">
        <type name="StringFromValueFunc" c:type="GladeStringFromValueFunc"/>
      </field>
      <field name="create_editable" introspectable="0">
        <type name="CreateEditableFunc" c:type="GladeCreateEditableFunc"/>
      </field>
      <field name="destroy_object">
        <type name="DestroyObjectFunc" c:type="GladeDestroyObjectFunc"/>
      </field>
      <field name="write_widget_after">
        <type name="WriteWidgetFunc" c:type="GladeWriteWidgetFunc"/>
      </field>
      <field name="deprecated_since_major">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="deprecated_since_minor">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-widget-adaptor.h" line="729"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-widget-adaptor.h" line="730"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-widget-adaptor.h" line="731"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-widget-adaptor.h" line="732"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved5">
        <callback name="glade_reserved5">
          <source-position filename="glade-widget-adaptor.h" line="733"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="WidgetAdaptorPrivate"
            c:type="GladeWidgetAdaptorPrivate"
            disguised="1">
      <source-position filename="glade-widget-adaptor.h" line="23"/>
    </record>
    <record name="WidgetClass"
            c:type="GladeWidgetClass"
            glib:is-gtype-struct-for="Widget">
      <source-position filename="glade-widget.h" line="57"/>
      <field name="parent_class">
        <type name="GObject.InitiallyUnownedClass"
              c:type="GInitiallyUnownedClass"/>
      </field>
      <field name="add_child">
        <callback name="add_child">
          <source-position filename="glade-widget.h" line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg2" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_child">
        <callback name="remove_child">
          <source-position filename="glade-widget.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_child">
        <callback name="replace_child">
          <source-position filename="glade-widget.h" line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="GObject.Object" c:type="GObject*"/>
            </parameter>
            <parameter name="arg2" transfer-ownership="none">
              <type name="GObject.Object" c:type="GObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_signal_handler">
        <callback name="add_signal_handler">
          <source-position filename="glade-widget.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Signal" c:type="GladeSignal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_signal_handler">
        <callback name="remove_signal_handler">
          <source-position filename="glade-widget.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Signal" c:type="GladeSignal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="change_signal_handler">
        <callback name="change_signal_handler">
          <source-position filename="glade-widget.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Signal" c:type="GladeSignal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="button_press_event">
        <callback name="button_press_event">
          <source-position filename="glade-widget.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Gdk.Event" c:type="GdkEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="button_release_event">
        <callback name="button_release_event">
          <source-position filename="glade-widget.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Gdk.Event" c:type="GdkEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="motion_notify_event">
        <callback name="motion_notify_event">
          <source-position filename="glade-widget.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Gdk.Event" c:type="GdkEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="event">
        <callback name="event">
          <source-position filename="glade-widget.h" line="47"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-widget.c"
                 line="544">whether the event was handled or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="arg0" transfer-ownership="none">
              <type name="Widget" c:type="GladeWidget*"/>
            </parameter>
            <parameter name="arg1" transfer-ownership="none">
              <type name="Gdk.Event" c:type="GdkEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="glade_reserved1">
        <callback name="glade_reserved1">
          <source-position filename="glade-widget.h" line="49"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved2">
        <callback name="glade_reserved2">
          <source-position filename="glade-widget.h" line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved3">
        <callback name="glade_reserved3">
          <source-position filename="glade-widget.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved4">
        <callback name="glade_reserved4">
          <source-position filename="glade-widget.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved5">
        <callback name="glade_reserved5">
          <source-position filename="glade-widget.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved6">
        <callback name="glade_reserved6">
          <source-position filename="glade-widget.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved7">
        <callback name="glade_reserved7">
          <source-position filename="glade-widget.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="glade_reserved8">
        <callback name="glade_reserved8">
          <source-position filename="glade-widget.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="WidgetGroup" c:type="GladeWidgetGroup" disguised="1">
      <source-position filename="glade-catalog.h" line="37"/>
      <method name="get_adaptors"
              c:identifier="glade_widget_group_get_adaptors"
              introspectable="0">
        <source-position filename="glade-catalog.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="945">a list of class adaptors in the palette</doc>
          <type name="GLib.List" c:type="const GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="943">a widget group</doc>
            <type name="WidgetGroup" c:type="GladeWidgetGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_expanded"
              c:identifier="glade_widget_group_get_expanded">
        <source-position filename="glade-catalog.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="931">Whether group is expanded in the palette</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="929">a widget group</doc>
            <type name="WidgetGroup" c:type="GladeWidgetGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="glade_widget_group_get_name">
        <source-position filename="glade-catalog.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="903">the widget group name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="901">a widget group</doc>
            <type name="WidgetGroup" c:type="GladeWidgetGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title" c:identifier="glade_widget_group_get_title">
        <source-position filename="glade-catalog.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="917">the widget group name used in the palette</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-catalog.c"
                 line="915">a widget group</doc>
            <type name="WidgetGroup" c:type="GladeWidgetGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="WidgetPrivate" c:type="GladeWidgetPrivate" disguised="1">
      <source-position filename="glade-widget.h" line="22"/>
    </record>
    <callback name="WriteWidgetFunc" c:type="GladeWriteWidgetFunc">
      <doc xml:space="preserve"
           filename="glade-widget-adaptor.h"
           line="552">This function is called to fill in @node from @widget.</doc>
      <source-position filename="glade-widget-adaptor.h" line="561"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adaptor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4252">A #GladeWidgetAdaptor</doc>
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4253">The #GladeWidget</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4254">The #GladeXmlContext</doc>
          <type name="XmlContext" c:type="GladeXmlContext*"/>
        </parameter>
        <parameter name="node" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-widget-adaptor.c"
               line="4255">The #GladeXmlNode</doc>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
      </parameters>
    </callback>
    <constant name="XML_TAG_AFTER" value="after" c:type="GLADE_XML_TAG_AFTER">
      <source-position filename="glade-xml-utils.h" line="50"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_CHILD" value="child" c:type="GLADE_XML_TAG_CHILD">
      <source-position filename="glade-xml-utils.h" line="54"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_CLASS" value="class" c:type="GLADE_XML_TAG_CLASS">
      <source-position filename="glade-xml-utils.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_FILENAME"
              value="filename"
              c:type="GLADE_XML_TAG_FILENAME">
      <source-position filename="glade-xml-utils.h" line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_HANDLER"
              value="handler"
              c:type="GLADE_XML_TAG_HANDLER">
      <source-position filename="glade-xml-utils.h" line="49"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_I18N_TRUE"
              value="yes"
              c:type="GLADE_XML_TAG_I18N_TRUE">
      <source-position filename="glade-xml-utils.h" line="58"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_ID" value="id" c:type="GLADE_XML_TAG_ID">
      <source-position filename="glade-xml-utils.h" line="47"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_INTERNAL_CHILD"
              value="internal-child"
              c:type="GLADE_XML_TAG_INTERNAL_CHILD">
      <source-position filename="glade-xml-utils.h" line="57"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_LIB" value="lib" c:type="GLADE_XML_TAG_LIB">
      <source-position filename="glade-xml-utils.h" line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_NAME" value="name" c:type="GLADE_XML_TAG_NAME">
      <source-position filename="glade-xml-utils.h" line="53"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_OBJECT"
              value="object"
              c:type="GLADE_XML_TAG_OBJECT">
      <source-position filename="glade-xml-utils.h" line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_PACKING"
              value="packing"
              c:type="GLADE_XML_TAG_PACKING">
      <source-position filename="glade-xml-utils.h" line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_PLACEHOLDER"
              value="placeholder"
              c:type="GLADE_XML_TAG_PLACEHOLDER">
      <source-position filename="glade-xml-utils.h" line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_PROJECT"
              value="interface"
              c:type="GLADE_XML_TAG_PROJECT">
      <source-position filename="glade-xml-utils.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_PROPERTY"
              value="property"
              c:type="GLADE_XML_TAG_PROPERTY">
      <source-position filename="glade-xml-utils.h" line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_REQUIRES"
              value="requires"
              c:type="GLADE_XML_TAG_REQUIRES">
      <source-position filename="glade-xml-utils.h" line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_SIGNAL"
              value="signal"
              c:type="GLADE_XML_TAG_SIGNAL">
      <source-position filename="glade-xml-utils.h" line="48"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_SIGNAL_FALSE"
              value="no"
              c:type="GLADE_XML_TAG_SIGNAL_FALSE">
      <source-position filename="glade-xml-utils.h" line="60"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_SIGNAL_TRUE"
              value="yes"
              c:type="GLADE_XML_TAG_SIGNAL_TRUE">
      <source-position filename="glade-xml-utils.h" line="59"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_SOURCE"
              value="source"
              c:type="GLADE_XML_TAG_SOURCE">
      <source-position filename="glade-xml-utils.h" line="63"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_SOURCES"
              value="sources"
              c:type="GLADE_XML_TAG_SOURCES">
      <source-position filename="glade-xml-utils.h" line="62"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_STOCK_ID"
              value="stock-id"
              c:type="GLADE_XML_TAG_STOCK_ID">
      <source-position filename="glade-xml-utils.h" line="65"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_SWAPPED"
              value="swapped"
              c:type="GLADE_XML_TAG_SWAPPED">
      <source-position filename="glade-xml-utils.h" line="51"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_TEMPLATE"
              value="template"
              c:type="GLADE_XML_TAG_TEMPLATE">
      <source-position filename="glade-xml-utils.h" line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_TYPE" value="type" c:type="GLADE_XML_TAG_TYPE">
      <source-position filename="glade-xml-utils.h" line="61"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_VERSION"
              value="version"
              c:type="GLADE_XML_TAG_VERSION">
      <source-position filename="glade-xml-utils.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="XML_TAG_WIDGET"
              value="object"
              c:type="GLADE_XML_TAG_WIDGET">
      <source-position filename="glade-xml-utils.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <record name="XmlContext" c:type="GladeXmlContext" disguised="1">
      <source-position filename="glade-xml-utils.h" line="17"/>
      <method name="destroy" c:identifier="glade_xml_context_destroy">
        <source-position filename="glade-xml-utils.h" line="255"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="glade_xml_context_free">
        <doc xml:space="preserve"
             filename="glade-xml-utils.c"
             line="687">Similar to glade_xml_context_destroy but it also frees the document set in the context</doc>
        <source-position filename="glade-xml-utils.h" line="256"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_doc"
              c:identifier="glade_xml_context_get_doc"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="260"/>
        <return-value>
          <type name="XmlDoc" c:type="GladeXmlDoc*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="new"
                c:identifier="glade_xml_context_new"
                introspectable="0">
        <source-position filename="glade-xml-utils.h" line="254"/>
        <return-value>
          <type name="XmlContext" c:type="GladeXmlContext*"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <type name="XmlDoc" c:type="GladeXmlDoc*"/>
          </parameter>
          <parameter name="name_space" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_from_path"
                c:identifier="glade_xml_context_new_from_path"
                introspectable="0">
        <source-position filename="glade-xml-utils.h" line="257"/>
        <return-value>
          <type name="XmlContext" c:type="GladeXmlContext*"/>
        </return-value>
        <parameters>
          <parameter name="full_path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="nspace" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="root_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="XmlDoc" c:type="GladeXmlDoc" disguised="1">
      <source-position filename="glade-xml-utils.h" line="19"/>
      <method name="free" c:identifier="glade_xml_doc_free">
        <source-position filename="glade-xml-utils.h" line="249"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc_in" transfer-ownership="none">
            <type name="XmlDoc" c:type="GladeXmlDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_root"
              c:identifier="glade_xml_doc_get_root"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="246"/>
        <return-value>
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="906">the #GladeXmlNode that is the document root of @doc</doc>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-xml-utils.c"
                 line="904">a #GladeXmlDoc</doc>
            <type name="XmlDoc" c:type="GladeXmlDoc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_comment"
              c:identifier="glade_xml_doc_new_comment"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="251"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <type name="XmlDoc" c:type="GladeXmlDoc*"/>
          </instance-parameter>
          <parameter name="comment" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save" c:identifier="glade_xml_doc_save">
        <source-position filename="glade-xml-utils.h" line="250"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc_in" transfer-ownership="none">
            <type name="XmlDoc" c:type="GladeXmlDoc*"/>
          </instance-parameter>
          <parameter name="full_path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_root" c:identifier="glade_xml_doc_set_root">
        <source-position filename="glade-xml-utils.h" line="248"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="doc" transfer-ownership="none">
            <type name="XmlDoc" c:type="GladeXmlDoc*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <function name="new" c:identifier="glade_xml_doc_new" introspectable="0">
        <source-position filename="glade-xml-utils.h" line="247"/>
        <return-value>
          <type name="XmlDoc" c:type="GladeXmlDoc*"/>
        </return-value>
      </function>
    </record>
    <record name="XmlNode" c:type="GladeXmlNode" disguised="1">
      <source-position filename="glade-xml-utils.h" line="18"/>
      <method name="add_next_sibling"
              c:identifier="glade_xml_node_add_next_sibling"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="243"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
          <parameter name="new_node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_prev_sibling"
              c:identifier="glade_xml_node_add_prev_sibling"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="242"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
          <parameter name="new_node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_child" c:identifier="glade_xml_node_append_child">
        <source-position filename="glade-xml-utils.h" line="236"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy"
              c:identifier="glade_xml_node_copy"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="228"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="delete" c:identifier="glade_xml_node_delete">
        <source-position filename="glade-xml-utils.h" line="229"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="glade_xml_node_get_children"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="230"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_children_with_comments"
              c:identifier="glade_xml_node_get_children_with_comments"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="241"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="glade_xml_node_get_name">
        <source-position filename="glade-xml-utils.h" line="235"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent"
              c:identifier="glade_xml_node_get_parent"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="231"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_comment" c:identifier="glade_xml_node_is_comment">
        <source-position filename="glade-xml-utils.h" line="238"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next"
              c:identifier="glade_xml_node_next"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="232"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next_with_comments"
              c:identifier="glade_xml_node_next_with_comments"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="239"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="prev_with_comments"
              c:identifier="glade_xml_node_prev_with_comments"
              introspectable="0">
        <source-position filename="glade-xml-utils.h" line="240"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="glade_xml_node_remove">
        <source-position filename="glade-xml-utils.h" line="237"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_property_boolean"
              c:identifier="glade_xml_node_set_property_boolean">
        <source-position filename="glade-xml-utils.h" line="223"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_property_string"
              c:identifier="glade_xml_node_set_property_string">
        <source-position filename="glade-xml-utils.h" line="222"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="verify" c:identifier="glade_xml_node_verify">
        <doc xml:space="preserve"
             filename="glade-xml-utils.c"
             line="191">This is a wrapper around glade_xml_node_verify_silent(), only it emits
a g_warning() if @node_in has a name different than @name.</doc>
        <source-position filename="glade-xml-utils.h" line="233"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="199">%TRUE if @node_in's name is equal to @name, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-xml-utils.c"
                 line="193">a #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-xml-utils.c"
                 line="194">a string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="verify_silent" c:identifier="glade_xml_node_verify_silent">
        <source-position filename="glade-xml-utils.h" line="234"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="177">%TRUE if @node_in's name is equal to @name, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_in" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-xml-utils.c"
                 line="174">a #GladeXmlNode</doc>
            <type name="XmlNode" c:type="GladeXmlNode*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glade-xml-utils.c"
                 line="175">a string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <function name="new"
                c:identifier="glade_xml_node_new"
                introspectable="0">
        <source-position filename="glade-xml-utils.h" line="226"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_comment"
                c:identifier="glade_xml_node_new_comment"
                introspectable="0">
        <source-position filename="glade-xml-utils.h" line="227"/>
        <return-value>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="XmlContext" c:type="GladeXmlContext*"/>
          </parameter>
          <parameter name="comment" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <function name="catalog_add_path"
              c:identifier="glade_catalog_add_path"
              moved-to="Catalog.add_path">
      <doc xml:space="preserve"
           filename="glade-catalog.c"
           line="569">Adds a new path to the list of path to look catalogs for.</doc>
      <source-position filename="glade-catalog.h" line="56"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="catalog_destroy_all"
              c:identifier="glade_catalog_destroy_all"
              moved-to="Catalog.destroy_all">
      <doc xml:space="preserve"
           filename="glade-catalog.c"
           line="873">Destroy and free all resources related with every loaded catalog.</doc>
      <source-position filename="glade-catalog.h" line="78"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="catalog_is_loaded"
              c:identifier="glade_catalog_is_loaded"
              moved-to="Catalog.is_loaded">
      <source-position filename="glade-catalog.h" line="76"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-catalog.c"
             line="863">Whether @name is loaded or not</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-catalog.c"
               line="861">a catalog object</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="catalog_remove_path"
              c:identifier="glade_catalog_remove_path"
              moved-to="Catalog.remove_path">
      <doc xml:space="preserve"
           filename="glade-catalog.c"
           line="584">Remove path from the list of path to look catalogs for.
NULL to remove all paths.</doc>
      <source-position filename="glade-catalog.h" line="57"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="cursor_get_add_widget_pixbuf"
              c:identifier="glade_cursor_get_add_widget_pixbuf"
              moved-to="Cursor.get_add_widget_pixbuf">
      <source-position filename="glade-cursor.h" line="52"/>
      <return-value transfer-ownership="none">
        <type name="GdkPixbuf.Pixbuf" c:type="const GdkPixbuf*"/>
      </return-value>
    </function>
    <function name="cursor_init"
              c:identifier="glade_cursor_init"
              moved-to="Cursor.init">
      <doc xml:space="preserve"
           filename="glade-cursor.c"
           line="149">Initializes cursors for use with glade_cursor_set().</doc>
      <source-position filename="glade-cursor.h" line="48"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="cursor_set"
              c:identifier="glade_cursor_set"
              moved-to="Cursor.set">
      <doc xml:space="preserve"
           filename="glade-cursor.c"
           line="77">Sets the cursor for @window to something appropriate based on @type.
(also sets the cursor on all visible project widgets)</doc>
      <source-position filename="glade-cursor.h" line="49"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="project" transfer-ownership="none">
          <type name="Project" c:type="GladeProject*"/>
        </parameter>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-cursor.c"
               line="79">a #GdkWindow</doc>
          <type name="Gdk.Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-cursor.c"
               line="80">a #GladeCursorType</doc>
          <type name="CursorType" c:type="GladeCursorType"/>
        </parameter>
      </parameters>
    </function>
    <function name="displayable_value_is_disabled"
              c:identifier="glade_displayable_value_is_disabled">
      <source-position filename="glade-displayable-values.h" line="24"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="displayable_value_set_disabled"
              c:identifier="glade_displayable_value_set_disabled">
      <source-position filename="glade-displayable-values.h" line="27"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="disabled" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_debug_flags" c:identifier="glade_get_debug_flags">
      <source-position filename="glade-debug.h" line="29"/>
      <return-value transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </return-value>
    </function>
    <function name="get_displayable_value"
              c:identifier="glade_get_displayable_value">
      <source-position filename="glade-displayable-values.h" line="21"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_value_from_displayable"
              c:identifier="glade_get_value_from_displayable">
      <source-position filename="glade-displayable-values.h" line="32"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="displayabe" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="init" c:identifier="glade_init">
      <doc xml:space="preserve"
           filename="glade-app.c"
           line="341">Initialization function for libgladeui (not #GladeApp)
It builds paths, bind text domain, and register icons</doc>
      <source-position filename="glade-app.h" line="69"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="init_debug_flags" c:identifier="glade_init_debug_flags">
      <source-position filename="glade-debug.h" line="28"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="param_spec_objects"
              c:identifier="glade_param_spec_objects"
              introspectable="0">
      <source-position filename="glade-builtins.h" line="35"/>
      <return-value>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="nick" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="blurb" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="accepted_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="GObject.ParamFlags" c:type="GParamFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="propert_get_insensitive_tooltip"
              c:identifier="glade_propert_get_insensitive_tooltip">
      <source-position filename="glade-property.h" line="129"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="property" transfer-ownership="none">
          <type name="Property" c:type="GladeProperty*"/>
        </parameter>
      </parameters>
    </function>
    <function name="property_class_get_default_from_spec"
              c:identifier="glade_property_class_get_default_from_spec"
              moved-to="PropertyClass.get_default_from_spec">
      <source-position filename="glade-property-class.h" line="161"/>
      <return-value transfer-ownership="full">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="spec" transfer-ownership="none">
          <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
        </parameter>
      </parameters>
    </function>
    <function name="property_class_update_from_node"
              c:identifier="glade_property_class_update_from_node"
              moved-to="PropertyClass.update_from_node">
      <doc xml:space="preserve"
           filename="glade-property-class.c"
           line="1929">Updates the @property_class with the contents of the node in the xml
file. Only the values found in the xml file are overridden.</doc>
      <source-position filename="glade-property-class.h" line="144"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-property-class.c"
             line="1939">%TRUE on success. @property_class is set to NULL if the property
         has Disabled="TRUE".</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="1931">the property node</doc>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="object_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="1932">the #GType of the owning object</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="property_class" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="1933">a pointer to the property class</doc>
          <type name="PropertyClass" c:type="GladePropertyClass**"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-property-class.c"
               line="1934">the domain to translate catalog strings from</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="register_displayable_value"
              c:identifier="glade_register_displayable_value">
      <source-position filename="glade-displayable-values.h" line="9"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="register_translated_value"
              c:identifier="glade_register_translated_value">
      <source-position filename="glade-displayable-values.h" line="14"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="setup_log_handlers"
              c:identifier="glade_setup_log_handlers">
      <doc xml:space="preserve"
           filename="glade-debug.c"
           line="57">Sets up a log handler to manage all %G_LOG_LEVEL_MASK errors of domain:
GLib, GLib-GObject, Gtk, Gdk, and domainless.</doc>
      <source-position filename="glade-debug.h" line="31"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="standard_boolean_spec"
              c:identifier="glade_standard_boolean_spec"
              introspectable="0">
      <source-position filename="glade-builtins.h" line="55"/>
      <return-value>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
    </function>
    <function name="standard_float_spec"
              c:identifier="glade_standard_float_spec"
              introspectable="0">
      <source-position filename="glade-builtins.h" line="54"/>
      <return-value>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
    </function>
    <function name="standard_gdkcolor_spec"
              c:identifier="glade_standard_gdkcolor_spec"
              introspectable="0">
      <source-position filename="glade-builtins.h" line="46"/>
      <return-value>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
    </function>
    <function name="standard_int_spec"
              c:identifier="glade_standard_int_spec"
              introspectable="0">
      <source-position filename="glade-builtins.h" line="50"/>
      <return-value>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
    </function>
    <function name="standard_objects_spec"
              c:identifier="glade_standard_objects_spec"
              introspectable="0">
      <source-position filename="glade-builtins.h" line="47"/>
      <return-value>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
    </function>
    <function name="standard_pixbuf_spec"
              c:identifier="glade_standard_pixbuf_spec"
              introspectable="0">
      <source-position filename="glade-builtins.h" line="45"/>
      <return-value>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
    </function>
    <function name="standard_stock_append_prefix"
              c:identifier="glade_standard_stock_append_prefix"
              moved-to="Stock.append_prefix">
      <source-position filename="glade-builtins.h" line="57"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="prefix" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="standard_string_spec"
              c:identifier="glade_standard_string_spec"
              introspectable="0">
      <source-position filename="glade-builtins.h" line="52"/>
      <return-value>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
    </function>
    <function name="standard_strv_spec"
              c:identifier="glade_standard_strv_spec"
              introspectable="0">
      <source-position filename="glade-builtins.h" line="53"/>
      <return-value>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
    </function>
    <function name="standard_uint_spec"
              c:identifier="glade_standard_uint_spec"
              introspectable="0">
      <source-position filename="glade-builtins.h" line="51"/>
      <return-value>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
    </function>
    <function name="type_has_displayable_values"
              c:identifier="glade_type_has_displayable_values">
      <source-position filename="glade-displayable-values.h" line="18"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_added_in_list"
              c:identifier="glade_util_added_in_list"
              introspectable="0">
      <source-position filename="glade-utils.h" line="107"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="805">A newly allocated #GList of elements that
         are in @new but not in @old</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="old_list" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="802">the old #GList</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </parameter>
        <parameter name="new_list" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="803">the new #GList</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="util_canonical_path"
              c:identifier="glade_util_canonical_path">
      <source-position filename="glade-utils.h" line="82"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="851">an absolute path to the specified file or directory
         that contains no ".." or "." components (this does
         not call readlink like realpath() does).

Note: on some systems; I think its possible that we dont have
      permission to execute in the directory in which the glade
      file resides; I decided finally to do it this way anyway
      since libc's realpath() does exactly the same.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="849">any path that may contain ".." or "." components</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_check_and_warn_scrollable"
              c:identifier="glade_util_check_and_warn_scrollable">
      <source-position filename="glade-utils.h" line="117"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="parent" transfer-ownership="none">
          <type name="Widget" c:type="GladeWidget*"/>
        </parameter>
        <parameter name="child_adaptor" transfer-ownership="none">
          <type name="WidgetAdaptor" c:type="GladeWidgetAdaptor*"/>
        </parameter>
        <parameter name="parent_widget" transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_compare_stock_labels"
              c:identifier="glade_util_compare_stock_labels">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="414">This is a #GCompareFunc that compares the labels of two stock items,
ignoring any '_' characters. It isn't particularly efficient.</doc>
      <source-position filename="glade-utils.h" line="45"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="422">negative value if @a &lt; @b; zero if @a = @b;
         positive value if @a &gt; @b</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="a"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="416">a #gconstpointer to a #GtkStockItem</doc>
          <type name="gpointer" c:type="gconstpointer"/>
        </parameter>
        <parameter name="b"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="417">a #gconstpointer to a #GtkStockItem</doc>
          <type name="gpointer" c:type="gconstpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_container_get_all_children"
              c:identifier="glade_util_container_get_all_children"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="640">Use this to itterate over all children in a GtkContainer,
as it used _forall() instead of _foreach() (and the GTK+ version
of this function is simply not exposed).

Note that glade_widget_class_get_children() is the high-level
abstraction and will usually end up calling this function.</doc>
      <source-position filename="glade-utils.h" line="120"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="651">a #GList giving the contents of @container</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="container" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="642">a #GtkContainer</doc>
          <type name="Gtk.Container" c:type="GtkContainer*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_count_placeholders"
              c:identifier="glade_util_count_placeholders">
      <source-position filename="glade-utils.h" line="121"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="671">the amount of #GladePlaceholders parented by @parent</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="669">a #GladeWidget</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_duplicate_underscores"
              c:identifier="glade_util_duplicate_underscores">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="593">Duplicates @name, but the copy has two underscores in place of any single
underscore in the original.</doc>
      <source-position filename="glade-utils.h" line="48"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="600">a newly allocated string</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="595">a string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_file_dialog_new"
              c:identifier="glade_util_file_dialog_new"
              introspectable="0">
      <source-position filename="glade-utils.h" line="39"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="464">a "glade file" file chooser dialog. The caller is responsible
         for showing the dialog</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="title" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="459">dialog title</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="project" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="460">a #GladeProject used when saving</doc>
          <type name="Project" c:type="GladeProject*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="461">a parent #GtkWindow for the dialog</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </parameter>
        <parameter name="action" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="462">a #GladeUtilFileDialogType to say if the dialog will open or save</doc>
          <type name="UtilFileDialogType" c:type="GladeUtilFileDialogType"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_file_is_writeable"
              c:identifier="glade_util_file_is_writeable">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="973">Checks whether the file at @path is writeable</doc>
      <source-position filename="glade-utils.h" line="84"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="979">TRUE if file is writeable</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="975">the path to the file</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_filename_to_icon_name"
              c:identifier="glade_util_filename_to_icon_name">
      <source-position filename="glade-utils.h" line="85"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_find_iter_by_widget"
              c:identifier="glade_util_find_iter_by_widget">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="753">Looks through @model for the #GtkTreeIter corresponding to
@findme under @column.</doc>
      <source-position filename="glade-utils.h" line="122"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="762">a newly allocated #GtkTreeIter from @model corresponding
to @findme which should be freed with gtk_tree_iter_free()</doc>
        <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="755">a #GtkTreeModel</doc>
          <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
        </parameter>
        <parameter name="findme" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="756">a #GladeWidget</doc>
          <type name="Widget" c:type="GladeWidget*"/>
        </parameter>
        <parameter name="column" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="757">a #gint</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_flash_message"
              c:identifier="glade_util_flash_message"
              introspectable="0">
      <source-position filename="glade-utils.h" line="34"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="statusbar" transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="context_id" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <varargs/>
        </parameter>
      </parameters>
    </function>
    <function name="util_get_devhelp_icon"
              c:identifier="glade_util_get_devhelp_icon"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="1069">Creates an image displaying the devhelp icon.</doc>
      <source-position filename="glade-utils.h" line="75"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="1075">a #GtkImage</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1071">the preferred icon size</doc>
          <type name="Gtk.IconSize" c:type="GtkIconSize"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_get_file_mtime"
              c:identifier="glade_util_get_file_mtime"
              throws="1">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="1247">Gets the UTC modification time of file @filename.</doc>
      <source-position filename="glade-utils.h" line="83"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="1254">The mtime of the file, or %0 if the file attributes
         could not be read.</doc>
        <type name="glong" c:type="time_t"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1249">A filename</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_get_placeholder_from_pointer"
              c:identifier="glade_util_get_placeholder_from_pointer"
              introspectable="0">
      <source-position filename="glade-utils.h" line="125"/>
      <return-value>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="container" transfer-ownership="none">
          <type name="Gtk.Container" c:type="GtkContainer*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_get_type_from_name"
              c:identifier="glade_util_get_type_from_name">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="102">Returns the type using the "get type" function name based on @name.
If the @have_func flag is true,@name is used directly, otherwise the get-type
function is contrived from @name then used.</doc>
      <source-position filename="glade-utils.h" line="54"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="111">the new #GType</doc>
        <type name="GType" c:type="GType"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="104">the name of the #GType - like 'GtkWidget' or a "get-type" function.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="have_func" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="105">function-name flag -- true if the name is a "get-type" function.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_have_devhelp" c:identifier="glade_util_have_devhelp">
      <source-position filename="glade-utils.h" line="74"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="999">whether the devhelp module is loaded</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="util_icon_name_to_filename"
              c:identifier="glade_util_icon_name_to_filename">
      <source-position filename="glade-utils.h" line="86"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_load_library"
              c:identifier="glade_util_load_library"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="922">Loads the named library from the Glade modules and lib directory or failing that
from the standard platform specific directories. (Including /usr/local/lib for unices)

The @library_name should not include any platform specifix prefix or suffix,
those are automatically added, if needed, by g_module_build_path()</doc>
      <source-position filename="glade-utils.h" line="56"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="932">a #GModule on success, or %NULL on failure.</doc>
        <type name="GModule.Module" c:type="GModule*"/>
      </return-value>
      <parameters>
        <parameter name="library_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="924">name of the library</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_object_is_loading"
              c:identifier="glade_util_object_is_loading">
      <source-position filename="glade-utils.h" line="126"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="1183">Whether the object's project is being loaded or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1181">A #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_purify_list"
              c:identifier="glade_util_purify_list"
              introspectable="0">
      <source-position filename="glade-utils.h" line="106"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="783">A newly allocated version of @list with no
         duplicate data entries</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="list" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="781">A #GList</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="util_read_prop_name"
              c:identifier="glade_util_read_prop_name">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="571">Return a usable version of a property identifier as found
in a freshly parserd #GladeInterface</doc>
      <source-position filename="glade-utils.h" line="47"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="573">a string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_remove_scroll_events"
              c:identifier="glade_util_remove_scroll_events">
      <source-position filename="glade-utils.h" line="137"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_removed_from_list"
              c:identifier="glade_util_removed_from_list"
              introspectable="0">
      <source-position filename="glade-utils.h" line="109"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="828">A newly allocated #GList of elements that
         are in @old no longer in @new</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="old_list" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="825">the old #GList</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </parameter>
        <parameter name="new_list" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="826">the new #GList</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="util_replace" c:identifier="glade_util_replace">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="519">Replaces each occurance of the character @a in @str to @b.</doc>
      <source-position filename="glade-utils.h" line="46"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="521">a string</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="a" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="522">a #gchar</doc>
          <type name="gchar" c:type="gchar"/>
        </parameter>
        <parameter name="b" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="523">a #gchar</doc>
          <type name="gchar" c:type="gchar"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_search_devhelp"
              c:identifier="glade_util_search_devhelp">
      <source-position filename="glade-utils.h" line="76"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="book" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="page" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="search" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_ui_message"
              c:identifier="glade_util_ui_message"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="193">Creates a new warning dialog window as a child of @parent containing
the text of @format, runs it, then destroys it on close. Depending
on @type, a cancel button may apear or the icon may change.</doc>
      <source-position filename="glade-utils.h" line="28"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="205">True if the @type was GLADE_UI_ARE_YOU_SURE and the user
         selected "OK", True if the @type was GLADE_UI_YES_OR_NO and
         the user selected "YES"; False otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="195">a #GtkWindow cast as a #GtkWidget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="196">a #GladeUIMessageType</doc>
          <type name="UIMessageType" c:type="GladeUIMessageType"/>
        </parameter>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="197">a #GtkWidget to append to the dialog vbox</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="198">a printf style format string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="199">args for the format.</doc>
          <varargs/>
        </parameter>
      </parameters>
    </function>
    <function name="util_url_show" c:identifier="glade_util_url_show">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="1202">Portable function for showing an URL @url in a web browser.</doc>
      <source-position filename="glade-utils.h" line="38"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="1208">TRUE if a web browser was successfully launched, or FALSE</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="url" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1204">An URL to display</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_boolean_from_string"
              c:identifier="glade_utils_boolean_from_string">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="1592">Parse a boolean value</doc>
      <source-position filename="glade-utils.h" line="70"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="1599">True if there was an error on the conversion.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1594">the string to convert</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1595">return location</doc>
          <type name="gboolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_cairo_draw_line"
              c:identifier="glade_utils_cairo_draw_line">
      <source-position filename="glade-utils.h" line="89"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="color" transfer-ownership="none">
          <type name="Gdk.Color" c:type="GdkColor*"/>
        </parameter>
        <parameter name="x1" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y1" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="x2" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y2" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_cairo_draw_rectangle"
              c:identifier="glade_utils_cairo_draw_rectangle">
      <source-position filename="glade-utils.h" line="97"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="color" transfer-ownership="none">
          <type name="Gdk.Color" c:type="GdkColor*"/>
        </parameter>
        <parameter name="filled" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_enum_string_from_value"
              c:identifier="glade_utils_enum_string_from_value">
      <source-position filename="glade-utils.h" line="61"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_enum_string_from_value_displayable"
              c:identifier="glade_utils_enum_string_from_value_displayable">
      <source-position filename="glade-utils.h" line="65"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="flags_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_enum_value_from_string"
              c:identifier="glade_utils_enum_value_from_string">
      <source-position filename="glade-utils.h" line="60"/>
      <return-value transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="strval" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_flags_string_from_value"
              c:identifier="glade_utils_flags_string_from_value">
      <source-position filename="glade-utils.h" line="63"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_flags_string_from_value_displayable"
              c:identifier="glade_utils_flags_string_from_value_displayable">
      <source-position filename="glade-utils.h" line="64"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="flags_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_flags_value_from_string"
              c:identifier="glade_utils_flags_value_from_string">
      <source-position filename="glade-utils.h" line="62"/>
      <return-value transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="strval" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_get_pointer" c:identifier="glade_utils_get_pointer">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="2014">Get's the pointer position relative to @widget, while @window and @device
are not absolutely needed, they should be passed wherever possible.</doc>
      <source-position filename="glade-utils.h" line="130"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="2016">The widget to get the mouse position relative for</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="2017">The window of the current event, or %NULL</doc>
          <type name="Gdk.Window" c:type="GdkWindow*"/>
        </parameter>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="2018">The device, if not specified, the current event will be expected to have a @device.</doc>
          <type name="Gdk.Device" c:type="GdkDevice*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="2019">The location to store the mouse pointer X position</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="2020">The location to store the mouse pointer Y position</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_get_pspec_from_funcname"
              c:identifier="glade_utils_get_pspec_from_funcname"
              introspectable="0">
      <source-position filename="glade-utils.h" line="55"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="153">A #GParamSpec created by the delagate function
         specified by @funcname</doc>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
      <parameters>
        <parameter name="funcname" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="151">the symbol name of a function to generate a #GParamSpec</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_hijack_key_press"
              c:identifier="glade_utils_hijack_key_press">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="1710">This function is meant to be attached to key-press-event of a toplevel,
it simply allows the window contents to treat key events /before/
accelerator keys come into play (this way widgets dont get deleted
when cutting text in an entry etc.).
Creates a liststore suitable for comboboxes and such to
chose from a variety of types.</doc>
      <source-position filename="glade-utils.h" line="114"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="1723">whether the event was handled</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="win" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1712">a #GtkWindow
event: the GdkEventKey
user_data: unused</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </parameter>
        <parameter name="event" transfer-ownership="none">
          <type name="Gdk.EventKey" c:type="GdkEventKey*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_liststore_from_enum_type"
              c:identifier="glade_utils_liststore_from_enum_type"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="1663">Creates a liststore suitable for comboboxes and such to
chose from a variety of types.</doc>
      <source-position filename="glade-utils.h" line="113"/>
      <return-value>
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="1671">A new #GtkListStore</doc>
        <type name="Gtk.ListStore" c:type="GtkListStore*"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1665">A #GType</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="include_empty" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1666">wheather to prepend an "Unset" slot</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_pointer_mode_render_icon"
              c:identifier="glade_utils_pointer_mode_render_icon"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="1882">Render an icon representing the pointer mode.
Best view with sizes bigger than GTK_ICON_SIZE_LARGE_TOOLBAR.</doc>
      <source-position filename="glade-utils.h" line="128"/>
      <return-value>
        <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
      </return-value>
      <parameters>
        <parameter name="mode" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1884">the #GladePointerMode to render as icon</doc>
          <type name="PointerMode" c:type="GladePointerMode"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1885">icon size</doc>
          <type name="Gtk.IconSize" c:type="GtkIconSize"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_replace_home_dir_with_tilde"
              c:identifier="glade_utils_replace_home_dir_with_tilde">
      <source-position filename="glade-utils.h" line="81"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_string_from_value"
              c:identifier="glade_utils_string_from_value">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="1640">Serializes #GValue into a string
(using glade conversion routines)</doc>
      <source-position filename="glade-utils.h" line="69"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="1647">A newly allocated string</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1642">a #GValue to convert</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_value_from_string"
              c:identifier="glade_utils_value_from_string">
      <doc xml:space="preserve"
           filename="glade-utils.c"
           line="1563">Allocates and sets a #GValue of type @type
set to @string (using glade conversion routines)</doc>
      <source-position filename="glade-utils.h" line="66"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="glade-utils.c"
             line="1574">A newly allocated and set #GValue</doc>
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1565">a #GType to convert with</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1566">the string to convert</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="project" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-utils.c"
               line="1567">the #GladeProject to look for formats of object names when needed</doc>
          <type name="Project" c:type="GladeProject*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_dump_from_context"
              c:identifier="glade_xml_dump_from_context">
      <source-position filename="glade-xml-utils.h" line="263"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <type name="XmlContext" c:type="GladeXmlContext*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_boolean" c:identifier="glade_xml_get_boolean">
      <source-position filename="glade-xml-utils.h" line="208"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="_default" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_content" c:identifier="glade_xml_get_content">
      <doc xml:space="preserve"
           filename="glade-xml-utils.c"
           line="113">Gets a string containing the content of @node_in.</doc>
      <source-position filename="glade-xml-utils.h" line="197"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="glade-xml-utils.c"
             line="119">A newly allocated string</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="115">a #GladeXmlNode</doc>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_property_boolean"
              c:identifier="glade_xml_get_property_boolean">
      <source-position filename="glade-xml-utils.h" line="215"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="_default" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_property_double"
              c:identifier="glade_xml_get_property_double">
      <source-position filename="glade-xml-utils.h" line="216"/>
      <return-value transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="_default" transfer-ownership="none">
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_property_int"
              c:identifier="glade_xml_get_property_int">
      <source-position filename="glade-xml-utils.h" line="217"/>
      <return-value transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="_default" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_property_string"
              c:identifier="glade_xml_get_property_string">
      <source-position filename="glade-xml-utils.h" line="214"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_property_string_required"
              c:identifier="glade_xml_get_property_string_required">
      <source-position filename="glade-xml-utils.h" line="213"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="xtra" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_property_targetable_versions"
              c:identifier="glade_xml_get_property_targetable_versions"
              introspectable="0">
      <source-position filename="glade-xml-utils.h" line="219"/>
      <return-value>
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_property_version"
              c:identifier="glade_xml_get_property_version">
      <source-position filename="glade-xml-utils.h" line="218"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="major" transfer-ownership="none">
          <type name="guint16" c:type="guint16*"/>
        </parameter>
        <parameter name="minor" transfer-ownership="none">
          <type name="guint16" c:type="guint16*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_value_int" c:identifier="glade_xml_get_value_int">
      <doc xml:space="preserve"
           filename="glade-xml-utils.c"
           line="216">Gets an integer value for a node either carried as an attribute or as
the content of a child.</doc>
      <source-position filename="glade-xml-utils.h" line="200"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glade-xml-utils.c"
             line="225">%TRUE if the node is found, %FALSE otherwise</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="218">a #GladeXmlNode</doc>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="219">a string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="220">a pointer to an #int</doc>
          <type name="gint" c:type="int*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_value_int_required"
              c:identifier="glade_xml_get_value_int_required">
      <doc xml:space="preserve"
           filename="glade-xml-utils.c"
           line="251">This is a wrapper around glade_xml_get_value_int(), only it emits
a g_warning() if @node_in did not contain the requested tag</doc>
      <source-position filename="glade-xml-utils.h" line="201"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="253">a #GladeXmlNode</doc>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="254">a string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="255">a pointer to an #int</doc>
          <type name="gint" c:type="int*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_value_string"
              c:identifier="glade_xml_get_value_string">
      <source-position filename="glade-xml-utils.h" line="203"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_get_value_string_required"
              c:identifier="glade_xml_get_value_string_required">
      <source-position filename="glade-xml-utils.h" line="204"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="xtra_info" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_load_sym_from_node"
              c:identifier="glade_xml_load_sym_from_node">
      <source-position filename="glade-xml-utils.h" line="265"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="module" transfer-ownership="none">
          <type name="GModule.Module" c:type="GModule*"/>
        </parameter>
        <parameter name="tagname" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="sym_location"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_search_child"
              c:identifier="glade_xml_search_child"
              introspectable="0">
      <source-position filename="glade-xml-utils.h" line="192"/>
      <return-value>
        <type name="XmlNode" c:type="GladeXmlNode*"/>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_search_child_required"
              c:identifier="glade_xml_search_child_required"
              introspectable="0">
      <doc xml:space="preserve"
           filename="glade-xml-utils.c"
           line="580">just a small wrapper arround glade_xml_search_child that displays
an error if the child was not found</doc>
      <source-position filename="glade-xml-utils.h" line="193"/>
      <return-value>
        <type name="XmlNode" c:type="GladeXmlNode*"/>
      </return-value>
      <parameters>
        <parameter name="tree" transfer-ownership="none">
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_set_content" c:identifier="glade_xml_set_content">
      <doc xml:space="preserve"
           filename="glade-xml-utils.c"
           line="130">Sets the content of @node to @content.</doc>
      <source-position filename="glade-xml-utils.h" line="198"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="132">a #GladeXmlNode</doc>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="content" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="133">a string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="xml_set_value" c:identifier="glade_xml_set_value">
      <doc xml:space="preserve"
           filename="glade-xml-utils.c"
           line="90">Sets the property @name in @node_in to @val</doc>
      <source-position filename="glade-xml-utils.h" line="210"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="node_in" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="92">a #GladeXmlNode</doc>
          <type name="XmlNode" c:type="GladeXmlNode*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="93">a string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glade-xml-utils.c"
               line="94">a string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
