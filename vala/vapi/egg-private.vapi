/* egg-private.vapi generated by vapigen-0.30, do not modify. */

[CCode (cprefix = "Egg", gir_namespace = "Egg", gir_version = "1.0", lower_case_cprefix = "egg_")]
namespace Egg {
	[CCode (cheader_filename = "egg-private.h", type_id = "egg_animation_get_type ()")]
	public class Animation : GLib.InitiallyUnowned {
		[CCode (has_construct_function = false)]
		protected Animation ();
		public void add_property (GLib.ParamSpec pspec, GLib.Value value);
		public void start ();
		public void stop ();
		public uint duration { construct; }
		public Gdk.FrameClock frame_clock { construct; }
		public Egg.AnimationMode mode { construct; }
		public GLib.Object target { construct; }
		public signal void tick ();
	}
	[CCode (cheader_filename = "egg-private.h", type_id = "egg_binding_group_get_type ()")]
	public class BindingGroup : GLib.Object {
		[CCode (has_construct_function = false)]
		public BindingGroup ();
		public void bind (string source_property, GLib.Object target, string target_property, GLib.BindingFlags flags);
		public void bind_full (string source_property, GLib.Object target, string target_property, GLib.BindingFlags flags, GLib.BindingTransformFunc? transform_to, owned GLib.BindingTransformFunc? transform_from);
		public void bind_with_closures (string source_property, GLib.Object target, string target_property, GLib.BindingFlags flags, GLib.Closure? transform_to, GLib.Closure? transform_from);
		public unowned GLib.Object? get_source ();
		public void set_source (GLib.Object? source);
		public GLib.Object source { get; set; }
	}
	[CCode (cheader_filename = "egg-private.h", type_id = "egg_search_bar_get_type ()")]
	public class SearchBar : Gtk.Bin, Atk.Implementor, Gtk.Buildable {
		[CCode (has_construct_function = false, type = "GtkWidget*")]
		public SearchBar ();
		public unowned Gtk.SearchEntry get_entry ();
		public bool get_search_mode_enabled ();
		public bool get_show_close_button ();
		public void set_search_mode_enabled (bool search_mode_enabled);
		public void set_show_close_button (bool show_close_button);
		public bool search_mode_enabled { get; set; }
		public bool show_close_button { get; set; }
		public signal void activate ();
		public signal void reveal ();
	}
	[CCode (cheader_filename = "egg-private.h", type_id = "egg_settings_flag_action_get_type ()")]
	public class SettingsFlagAction : GLib.Object, GLib.Action {
		[CCode (has_construct_function = false)]
		protected SettingsFlagAction ();
		public static GLib.Action @new (string schema_id, string schema_key, string flag_nick);
		[NoAccessorMethod]
		public string flag_nick { owned get; construct; }
		[NoAccessorMethod]
		public string schema_id { owned get; construct; }
		[NoAccessorMethod]
		public string schema_key { owned get; set; }
	}
	[CCode (cheader_filename = "egg-private.h", type_id = "egg_settings_sandwich_get_type ()")]
	public class SettingsSandwich : GLib.Object {
		[CCode (has_construct_function = false)]
		public SettingsSandwich (string schema_id, string path);
		public void append (GLib.Settings settings);
		public void bind (string key, void* object, string property, GLib.SettingsBindFlags flags);
		public void bind_with_mapping (string key, void* object, string property, GLib.SettingsBindFlags flags, [CCode (delegate_target_pos = 6.1, destroy_notify_pos = 6.2)] owned GLib.SettingsBindGetMapping get_mapping, owned GLib.SettingsBindSetMapping set_mapping);
		public bool get_boolean (string key);
		public GLib.Variant get_default_value (string key);
		public double get_double (string key);
		public int get_int (string key);
		public string get_string (string key);
		public uint get_uint (string key);
		public GLib.Variant get_user_value (string key);
		public GLib.Variant get_value (string key);
		public void set_boolean (string key, bool val);
		public void set_double (string key, double val);
		public void set_int (string key, int val);
		public void set_string (string key, string val);
		public void set_uint (string key, uint val);
		public void set_value (string key, GLib.Variant value);
		public void unbind (string property);
		[NoAccessorMethod]
		public string path { owned get; construct; }
		[NoAccessorMethod]
		public string schema_id { owned get; construct; }
	}
	[CCode (cheader_filename = "egg-private.h", type_id = "egg_signal_group_get_type ()")]
	public class SignalGroup : GLib.Object {
		[CCode (has_construct_function = false)]
		public SignalGroup (GLib.Type target_type);
		public void block ();
		public void connect_data (string detailed_signal, [CCode (delegate_target_pos = 2.33333, destroy_notify_pos = 2.66667)] owned GLib.Callback c_handler, GLib.ConnectFlags flags);
		public void connect_swapped (string detailed_signal, [CCode (scope = "async")] owned GLib.Callback c_handler);
		public unowned GLib.Object? get_target ();
		public void set_target (GLib.Object? target);
		public void unblock ();
		public GLib.Object target { get; set; }
		[NoAccessorMethod]
		public GLib.Type target_type { get; construct; }
		public signal void bind (GLib.Object instance);
		public signal void unbind ();
	}
	[CCode (cheader_filename = "egg-private.h", type_id = "egg_state_machine_get_type ()")]
	public class StateMachine : GLib.Object, Gtk.Buildable {
		[CCode (has_construct_function = false)]
		public StateMachine ();
		public void add_binding (string state, void* source_object, string source_property, void* target_object, string target_property, GLib.BindingFlags flags);
		public void add_propertyv (string state, void* object, string property, GLib.Value value);
		public void add_style (string state, Gtk.Widget widget, string style);
		public GLib.Action create_action (string name);
		public unowned string get_state ();
		public void set_state (string state);
		public string state { get; set; }
	}
	[CCode (cheader_filename = "egg-private.h", type_id = "egg_task_cache_get_type ()")]
	public class TaskCache : GLib.Object {
		[CCode (has_construct_function = false)]
		protected TaskCache ();
		public bool evict (void* key);
		public async void* get_async (void* key, bool force_update, GLib.Cancellable? cancellable) throws GLib.Error;
		public unowned GLib.Object? peek (void* key);
		public void* key_copy_func { construct; }
		public void* key_destroy_func { construct; }
		public void* key_equal_func { construct; }
		public void* key_hash_func { construct; }
		public void* populate_callback { construct; }
		public void* populate_callback_data { construct; }
		public void* populate_callback_data_destroy { construct; }
		public int64 time_to_live { construct; }
		public void* value_copy_func { construct; }
		public void* value_destroy_func { construct; }
	}
	[CCode (cheader_filename = "egg-private.h", cprefix = "EGG_ANIMATION_", type_id = "egg_animation_mode_get_type ()")]
	public enum AnimationMode {
		LINEAR,
		EASE_IN_QUAD,
		EASE_IN_OUT_QUAD,
		EASE_OUT_QUAD,
		EASE_IN_CUBIC,
		EASE_OUT_CUBIC
	}
	[CCode (cheader_filename = "egg-private.h", instance_pos = 3.9)]
	public delegate void TaskCacheCallback (Egg.TaskCache self, void* key, GLib.Task task);
}
